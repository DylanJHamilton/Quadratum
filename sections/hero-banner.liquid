{% comment %}
  Quadratum • Hero Banner (Classic)
  - Two-button CTA group with alignment control (left/center/right)
  - If only one CTA is provided, it still aligns per the group preference
  - Buttons styled via CSS variables so dynamic colors/radius/padding work with Tailwind purge
{% endcomment %}

{% liquid
  assign s = section.settings

  # --- Map content placement to literal Tailwind tokens (mobile) ---
  assign align_m = 'items-center'
  assign justify_m = 'justify-center'
  case s.content_position_mobile
    when 'start_start'  assign align_m = 'items-start'  assign justify_m = 'justify-start'
    when 'start_center' assign align_m = 'items-start'  assign justify_m = 'justify-center'
    when 'start_end'    assign align_m = 'items-start'  assign justify_m = 'justify-end'
    when 'center_start' assign align_m = 'items-center' assign justify_m = 'justify-start'
    when 'center_center'assign align_m = 'items-center' assign justify_m = 'justify-center'
    when 'center_end'   assign align_m = 'items-center' assign justify_m = 'justify-end'
    when 'end_start'    assign align_m = 'items-end'    assign justify_m = 'justify-start'
    when 'end_center'   assign align_m = 'items-end'    assign justify_m = 'justify-center'
    when 'end_end'      assign align_m = 'items-end'    assign justify_m = 'justify-end'
  endcase

  # --- Map content placement to literal Tailwind tokens (desktop) ---
  assign align_d = 'md:items-center'
  assign justify_d = 'md:justify-center'
  case s.content_position
    when 'start_start'  assign align_d = 'md:items-start'  assign justify_d = 'md:justify-start'
    when 'start_center' assign align_d = 'md:items-start'  assign justify_d = 'md:justify-center'
    when 'start_end'    assign align_d = 'md:items-start'  assign justify_d = 'md:justify-end'
    when 'center_start' assign align_d = 'md:items-center' assign justify_d = 'md:justify-start'
    when 'center_center'assign align_d = 'md:items-center' assign justify_d = 'md:justify-center'
    when 'center_end'   assign align_d = 'md:items-center' assign justify_d = 'md:justify-end'
    when 'end_start'    assign align_d = 'md:items-end'    assign justify_d = 'md:justify-start'
    when 'end_center'   assign align_d = 'md:items-end'    assign justify_d = 'md:justify-center'
    when 'end_end'      assign align_d = 'md:items-end'    assign justify_d = 'md:justify-end'
  endcase

  # --- Map text alignment to literal Tailwind tokens ---
  assign text_class = 'text-center'
  case s.text_alignment
    when 'left'  assign text_class = 'text-left'
    when 'right' assign text_class = 'text-right'
  endcase

  # --- Container width (Tailwind tokens already literal in schema) ---
  assign max_w = s.content_max_w | default: 'max-w-4xl'

  # --- Side padding container for "contained" mode ---
  assign container_pad = ''
  if s.container_mode == 'contained'
    assign container_pad = 'px-4 md:px-6'
  endif

  # --- Visibility toggles ---
  assign visibility_classes = ''
  if s.hide_on_mobile
    assign visibility_classes = visibility_classes | append: ' hidden md:block'
  endif
  if s.hide_on_desktop
    assign visibility_classes = visibility_classes | append: ' md:hidden'
  endif

  # --- Heading level ---
  assign heading_level = s.heading_level | default: 'h1'

  # --- CTA group alignment map ---
  assign cta_justify = 'justify-center'
  case s.cta_group_align
    when 'left'  assign cta_justify = 'justify-start'
    when 'right' assign cta_justify = 'justify-end'
  endcase

  # --- CTA presence flags ---
  assign has_cta1 = false
  if s.cta_text != blank and s.cta_link != blank
    assign has_cta1 = true
  endif
  assign has_cta2 = false
  if s.cta2_text != blank and s.cta2_link != blank
    assign has_cta2 = true
  endif

  # --- Button mode flag (solid/outline) for class switching ---
  assign btn_mode_class = 'q-btn--solid'
  if s.button_mode == 'outline'
    assign btn_mode_class = 'q-btn--outline'
  endif
%}

<section id="{{ s.anchor_id | default: 'section-' | append: section.id }}" class="q-hero-classic banner-section relative overflow-hidden {{ s.min_height | default: 'min-h-[75vh]' }}{{ visibility_classes }}">
  {%- if s.background_video != blank -%}
    <video
      class="absolute inset-0 w-full h-full object-cover z-0"
      autoplay loop muted playsinline preload="none"
      {% if s.background_image != blank %}poster="{{ s.background_image | image_url: width: 1600 }}"{% endif %}>
      <source src="{{ s.background_video }}" type="video/mp4">
    </video>
  {%- elsif s.background_image != blank -%}
    {{ s.background_image
      | image_url: width: 2880
      | image_tag:
        widths: '960,1440,1920,2560,2880',
        sizes: '100vw',
        loading: 'eager',
        fetchpriority: 'high',
        class: 'absolute inset-0 w-full h-full object-cover z-0',
        alt: '' }}
  {%- endif -%}

  <div class="absolute inset-0 z-0" aria-hidden="true"
       style="background-color: {{ s.overlay_color }}; opacity: {{ s.overlay_opacity | divided_by: 100.0 }};"></div>

  <div class="relative z-10 w-full h-full flex {{ align_m }} {{ justify_m }} {{ align_d }} {{ justify_d }}">
    <div class="w-full {{ max_w }} {{ container_pad }} {{ text_class }}
         mt-[{{ s.margin_top }}px]
         mb-[{{ s.margin_bottom }}px]
         pt-[{{ s.padding_top }}px]
         pb-[{{ s.padding_bottom }}px]">

      {%- if s.accent_heading != blank -%}
        <p class="uppercase tracking-wide mb-2 font-semibold text-{{ s.accent_size }}" style="color: {{ s.accent_color }};">
          {{ s.accent_heading }}
        </p>
      {%- endif -%}

      {%- if s.heading != blank -%}
        {%- case heading_level -%}
          {%- when 'h2' -%}
            <h2 class="font-bold mb-4 text-{{ s.heading_size }}" style="color: {{ s.heading_color }};">{{ s.heading }}</h2>
          {%- else -%}
            <h1 class="font-bold mb-4 text-{{ s.heading_size }}" style="color: {{ s.heading_color }};">{{ s.heading }}</h1>
        {%- endcase -%}
      {%- endif -%}

      {%- if s.subheading != blank -%}
        <p class="mb-6 text-{{ s.subheading_size }}" style="color: {{ s.subheading_color }};">{{ s.subheading }}</p>
      {%- endif -%}

      {%- if has_cta1 or has_cta2 -%}
        <div class="mt-2 flex flex-wrap gap-3 {{ cta_justify }}">
          {%- if has_cta1 -%}
            <a href="{{ s.cta_link }}"
               aria-label="{{ s.cta_aria_label | escape }}"
               class="q-btn {{ btn_mode_class }}"
               style="
                 --q-btn-bg: {{ s.button_bg_color }};
                 --q-btn-text: {{ s.button_text_color }};
                 --q-btn-border: {{ s.button_border_color }};
                 --q-btn-bw: {{ s.button_border_width }}px;
                 --q-btn-br: {{ s.button_radius }}px;
                 --q-btn-px: {{ s.button_padding_horizontal }}px;
                 --q-btn-py: {{ s.button_padding_vertical }}px;
               ">
              {{ s.cta_text }}
            </a>
          {%- endif -%}

          {%- if has_cta2 -%}
            <a href="{{ s.cta2_link }}"
               aria-label="{{ s.cta2_aria_label | escape }}"
               class="q-btn {{ btn_mode_class }}"
               style="
                 --q-btn-bg: {{ s.button_bg_color }};
                 --q-btn-text: {{ s.button_text_color }};
                 --q-btn-border: {{ s.button_border_color }};
                 --q-btn-bw: {{ s.button_border_width }}px;
                 --q-btn-br: {{ s.button_radius }}px;
                 --q-btn-px: {{ s.button_padding_horizontal }}px;
                 --q-btn-py: {{ s.button_padding_vertical }}px;
               ">
              {{ s.cta2_text }}
            </a>
          {%- endif -%}
        </div>
      {%- endif -%}
    </div>
  </div>
</section>

<style>
  /* Scoped button styles so dynamic colors/radius/padding work without global CSS */
  .q-hero-classic .q-btn{
    display:inline-block; font-weight:600;
    transition:transform .15s ease, box-shadow .15s ease, background-color .2s ease, color .2s ease, border-color .2s ease;
    border-radius:var(--q-btn-br,6px);
    padding:var(--q-btn-py,12px) var(--q-btn-px,24px);
    color:var(--q-btn-text,#000);
    text-decoration:none;
    box-shadow:0 1px 2px rgb(0 0 0 / 0.08);
  }
  .q-hero-classic .q-btn--solid{ background:var(--q-btn-bg,#fff); border:none; }
  .q-hero-classic .q-btn--outline{
    background:transparent;
    border-style:solid;
    border-color:var(--q-btn-border,#111);
    border-width:var(--q-btn-bw,1px);
  }
  .q-hero-classic .q-btn:focus-visible{
    outline:2px solid rgba(0,0,0,.45);
    outline-offset:2px;
  }
  .q-hero-classic .q-btn:hover{ transform:translateY(-1px); box-shadow:0 4px 14px rgb(0 0 0 / 0.12); }
  .q-hero-classic .q-btn:active{ transform:translateY(0); box-shadow:0 2px 8px rgb(0 0 0 / 0.12); }
</style>

{% schema %}
{
  "name": "Hero Banner • Classic",
  "tag": "section",
  "class": "q-hero-classic",
  "settings": [
    { "type": "header", "content": "About this section" },
    { "type": "paragraph", "content": "A full-bleed hero for page intros or campaigns. Supports image or looping video backgrounds with an adjustable overlay, plus heading, subheading, and one or two CTAs. Use it once per page at the top." },

    { "type": "header", "content": "Background media" },
    { "type": "image_picker", "id": "background_image", "label": "Background image" },
    { "type": "text", "id": "background_video", "label": "Background video URL (MP4)", "info": "If set, video is used with preload=\"none\". Image (if provided) is used as poster/fallback." },

    { "type": "color", "id": "overlay_color", "label": "Overlay color", "default": "#000000" },
    { "type": "range", "id": "overlay_opacity", "label": "Overlay opacity", "min": 0, "max": 100, "step": 5, "default": 40, "unit": "%" },

    { "type": "header", "content": "Layout & spacing" },
    { "type": "select", "id": "min_height", "label": "Minimum height", "default": "min-h-[75vh]", "options": [
      { "value": "min-h-[50vh]", "label": "50% viewport" },
      { "value": "min-h-[60vh]", "label": "60% viewport" },
      { "value": "min-h-[75vh]", "label": "75% viewport" },
      { "value": "min-h-screen", "label": "Full screen" }
    ]},
    { "type": "select", "id": "container_mode", "label": "Container", "default": "contained", "options": [
      { "value": "contained", "label": "Contained (side padding)" },
      { "value": "full", "label": "Full-bleed (edge to edge)" }
    ]},
    { "type": "select", "id": "content_max_w", "label": "Content width", "default": "max-w-4xl", "options": [
      { "value": "max-w-2xl", "label": "Narrow" },
      { "value": "max-w-3xl", "label": "Comfort" },
      { "value": "max-w-4xl", "label": "Wide" }
    ]},
    { "type": "range", "id": "padding_top", "label": "Padding top", "min": 0, "max": 200, "step": 10, "default": 60 },
    { "type": "range", "id": "padding_bottom", "label": "Padding bottom", "min": 0, "max": 200, "step": 10, "default": 60 },
    { "type": "range", "id": "margin_top", "label": "Margin top", "min": 0, "max": 100, "step": 10, "default": 0 },
    { "type": "range", "id": "margin_bottom", "label": "Margin bottom", "min": 0, "max": 100, "step": 10, "default": 0 },

    { "type": "header", "content": "Content" },
    { "type": "text", "id": "accent_heading", "label": "Accent heading (kicker)", "default": "Featured collection" },
    { "type": "color", "id": "accent_color", "label": "Accent color", "default": "#ffffff" },
    { "type": "select", "id": "accent_size", "label": "Accent size", "options": [
      { "value": "sm", "label": "Small" },
      { "value": "base", "label": "Normal" },
      { "value": "lg", "label": "Large" },
      { "value": "xl", "label": "XL" }
    ], "default": "lg" },

    { "type": "text", "id": "heading", "label": "Heading", "default": "Welcome to our store" },
    { "type": "select", "id": "heading_level", "label": "Heading level", "default": "h1", "options": [
      { "value": "h1", "label": "H1 (page headline)" },
      { "value": "h2", "label": "H2 (sub-headline)" }
    ]},
    { "type": "color", "id": "heading_color", "label": "Heading color", "default": "#ffffff" },
    { "type": "select", "id": "heading_size", "label": "Heading size", "options": [
      { "value": "3xl", "label": "3XL" },
      { "value": "4xl", "label": "4XL" },
      { "value": "5xl", "label": "5XL" },
      { "value": "6xl", "label": "6XL" }
    ], "default": "5xl" },

    { "type": "textarea", "id": "subheading", "label": "Subheading", "default": "Discover your new favorite products." },
    { "type": "color", "id": "subheading_color", "label": "Subheading color", "default": "#ffffff" },
    { "type": "select", "id": "subheading_size", "label": "Subheading size", "options": [
      { "value": "base", "label": "Base" },
      { "value": "lg", "label": "Large" },
      { "value": "xl", "label": "XL" }
    ], "default": "lg" },

    { "type": "header", "content": "CTA group" },
    { "type": "select", "id": "cta_group_align", "label": "CTA alignment", "default": "center", "options": [
      { "value": "left", "label": "Left" },
      { "value": "center", "label": "Center" },
      { "value": "right", "label": "Right" }
    ]},

    { "type": "text", "id": "cta_text", "label": "Primary button text", "default": "Shop now" },
    { "type": "url", "id": "cta_link", "label": "Primary button link", "default": "/collections/all" },
    { "type": "text", "id": "cta_aria_label", "label": "Primary ARIA label", "default": "Shop now" },

    { "type": "text", "id": "cta2_text", "label": "Secondary button text", "default": "Learn more" },
    { "type": "url", "id": "cta2_link", "label": "Secondary button link", "default": "/collections/all" },
    { "type": "text", "id": "cta2_aria_label", "label": "Secondary ARIA label", "default": "Learn more" },

    { "type": "select", "id": "button_mode", "label": "Button style (both buttons)", "options": [
      { "value": "solid", "label": "Solid" },
      { "value": "outline", "label": "Outline" }
    ], "default": "solid" },
    { "type": "color", "id": "button_bg_color", "label": "Button background (solid)", "default": "#ffffff" },
    { "type": "color", "id": "button_text_color", "label": "Button text color", "default": "#000000" },
    { "type": "color", "id": "button_border_color", "label": "Button border color (outline)", "default": "#000000" },
    { "type": "range", "id": "button_border_width", "label": "Button border width (outline)", "min": 0, "max": 10, "step": 1, "default": 1 },
    { "type": "range", "id": "button_radius", "label": "Button radius", "min": 0, "max": 50, "step": 2, "default": 6 },
    { "type": "range", "id": "button_padding_vertical", "label": "Button padding vertical", "min": 0, "max": 40, "step": 2, "default": 12 },
    { "type": "range", "id": "button_padding_horizontal", "label": "Button padding horizontal", "min": 0, "max": 40, "step": 2, "default": 24 },

    { "type": "header", "content": "Alignment" },
    { "type": "select", "id": "text_alignment", "label": "Text alignment", "options": [
      { "value": "left", "label": "Left" },
      { "value": "center", "label": "Center" },
      { "value": "right", "label": "Right" }
    ], "default": "center" },
    { "type": "select", "id": "content_position_mobile", "label": "Content placement (mobile)", "default": "center_center", "options": [
      { "value": "start_start", "label": "Top left" },
      { "value": "start_center", "label": "Top center" },
      { "value": "start_end", "label": "Top right" },
      { "value": "center_start", "label": "Middle left" },
      { "value": "center_center", "label": "Middle center" },
      { "value": "center_end", "label": "Middle right" },
      { "value": "end_start", "label": "Bottom left" },
      { "value": "end_center", "label": "Bottom center" },
      { "value": "end_end", "label": "Bottom right" }
    ]},
    { "type": "select", "id": "content_position", "label": "Content placement (desktop)", "default": "center_center", "options": [
      { "value": "start_start", "label": "Top left" },
      { "value": "start_center", "label": "Top center" },
      { "value": "start_end", "label": "Top right" },
      { "value": "center_start", "label": "Middle left" },
      { "value": "center_center", "label": "Middle center" },
      { "value": "center_end", "label": "Middle right" },
      { "value": "end_start", "label": "Bottom left" },
      { "value": "end_center", "label": "Bottom center" },
      { "value": "end_end", "label": "Bottom right" }
    ]},

    { "type": "header", "content": "Visibility & anchors" },
    { "type": "text", "id": "anchor_id", "label": "Optional anchor ID", "info": "Used for in-page links (e.g., #intro)." },
    { "type": "checkbox", "id": "hide_on_mobile", "label": "Hide on mobile", "default": false },
    { "type": "checkbox", "id": "hide_on_desktop", "label": "Hide on desktop", "default": false }
  ],
  "presets": [
    { "name": "Hero Banner • Classic", "category": "Hero" }
  ]
}
{% endschema %}
