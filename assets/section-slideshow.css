/* ===== Core slider (transform-based) ===== */
.q-hero{ position:relative; width:100%; overflow:hidden; }
.q-track-outer{ position:relative; height:100%; min-height: var(--min-h, 75vh); }
.q-track{ display:flex; align-items:stretch; height:100%; overflow:hidden; transform: translateX(0); will-change: transform; }
.q-slide{ position:relative; flex:0 0 100%; width:100%; height:100%; min-height: var(--min-h, 75vh); }

/* Ensure split grid inherits min-height too */
.q-split{ min-height: var(--min-h, 75vh); }

/* ===== Media ===== */
.q-bg, .q-split__media{ position:absolute; inset:0; z-index:0; }
.q-layer{ position:relative; z-index:1; width:100%; height:100%; display:flex; }
.q-img, .q-video, .q-placeholder{ width:100%; height:100%; object-fit:cover; display:block; }
.q-overlay{ position:absolute; inset:0; pointer-events:none; }

/* ===== Split layout ===== */
.q-split{ position:relative; z-index:0; display:grid; grid-template-columns: 1fr; height:100%; }
.q-split__media{ overflow:hidden; }
.q-split__content{ position:relative; z-index:1; background: rgba(0,0,0,0); backdrop-filter: var(--panel-blur, none); }
.q-split__content::before{
  content:""; position:absolute; inset: clamp(6px, 1vw, 14px);
  background: var(--panel-bg, transparent);
  opacity: var(--panel-o, 0);
  border-radius: var(--panel-r, 0);
  border: var(--panel-bw, 0) solid var(--panel-bc, transparent);
  box-shadow: var(--panel-shadow, none);
  z-index:-1;
}
@media (min-width:768px){ .q-split{ grid-template-columns: 1fr 1fr; } }

/* ===== Content placement ===== */
.q-content{ display:flex; width:100%; padding-left: clamp(16px, 4vw, 40px); padding-right: clamp(16px, 4vw, 40px); }
.q-content > .q-stack{ margin-left:auto; margin-right:auto; }
.q-content{ align-items: var(--v-m, center); justify-content: var(--h-m, center); }
@media (min-width:768px){ .q-content{ align-items: var(--v-d, center); justify-content: var(--h-d, center); } }

/* ===== Type scale & cosmetics ===== */
.q-type-sm{ font-size: .875rem; line-height: 1.25rem; }
.q-type-base{ font-size: 1rem; line-height: 1.5rem; }
.q-type-lg{ font-size: 1.125rem; line-height: 1.75rem; }
.q-type-xl{ font-size: 1.25rem; line-height: 1.75rem; }
.q-type-2xl{ font-size: 1.5rem; line-height: 2rem; }
.q-type-3xl{ font-size: 1.875rem; line-height: 2.25rem; }
.q-type-4xl{ font-size: 2.25rem; line-height: 2.5rem; }
.q-type-5xl{ font-size: 3rem; line-height: 1.1; }
.q-type-6xl{ font-size: 3.75rem; line-height: 1.05; }
.q-text-left{ text-align:left; } .q-text-center{ text-align:center; } .q-text-right{ text-align:right; }
.q-kicker{ letter-spacing: .08em; text-transform: uppercase; font-weight:600; margin:0 0 .25rem; }
.q-heading{ font-weight: 800; margin: .25rem 0 .5rem; }
.q-sub{ margin: 0 0 1rem; }
.q-text-shadow{ text-shadow: 0 2px 16px rgba(0,0,0,.45); }

/* ===== Buttons ===== */
.q-ctas{ display:flex; flex-wrap:wrap; gap:.75rem; margin-top:.25rem; }
.q-btn{
  display:inline-flex; align-items:center; justify-content:center;
  border-radius: var(--btn-r, 6px); padding: var(--btn-py, 12px) var(--btn-px, 24px);
  font-weight: var(--btn-fw, 600); text-decoration:none;
  transition: transform .15s ease, box-shadow .2s ease, opacity .2s ease, background-color .2s ease, border-color .2s ease;
  outline: none; text-transform: var(--btn-tt, none);
}
.q-btn--solid{ color: var(--btn-fg, #000); background: var(--btn-bg, #fff); border: 0; }
.q-btn--outline{ color: var(--btn-fg, #000); background: transparent; border: var(--btn-bw,1px) solid var(--btn-bc,#fff); }
.q-btn--soft:hover{ transform: translateY(-1px); box-shadow: 0 8px 24px rgba(0,0,0,.15); }
.q-btn--hard:hover{ transform: translateY(-2px); box-shadow: 0 14px 34px rgba(0,0,0,.22); }
.q-btn--none:hover{ transform:none; box-shadow:none; }
.q-btn:focus-visible{ outline:2px solid rgba(255,255,255,.8); outline-offset:2px; }

/* ===== Nav: arrows / dots / progress ===== */
.q-arrows{ position:absolute; inset-inline:0; display:flex; justify-content:space-between; pointer-events:none; z-index:12; }
.q-arrows-pos--centered{ top:50%; transform: translateY(-50%); }
.q-arrows-pos--edges{ top: 12px; }
.q-arrow{
  pointer-events:auto; width:var(--arr-size, 40px); height:var(--arr-size, 40px);
  border-radius:var(--arr-radius, 9999px);
  background: var(--arr-bg, rgba(0,0,0,.4));
  color: var(--arr-fg, #fff);
  display:inline-flex; align-items:center; justify-content:center; border:0; cursor:pointer;
  box-shadow: var(--arr-shadow, none);
}
.q-arrows--light .q-arrow{ background: rgba(255,255,255,.7); color:#111; }
.q-arrows--dark .q-arrow{ background: rgba(0,0,0,.4); color:#fff; }

.q-dots{ position:absolute; left:0; right:0; display:flex; justify-content:center; gap:var(--dots-gap, 8px); z-index:12; }
.q-dots-pos--inside{ bottom:14px; }
.q-dots-pos--outside{ bottom:-18px; }
.q-dot{
  width:var(--dots-size, 10px); height:var(--dots-size, 10px);
  border-radius:var(--dots-radius, 9999px);
  background: var(--dots-color, rgba(255,255,255,.55)); border:0; cursor:pointer;
}
.q-dot[aria-current="true"], .q-dot.is-active{ background: var(--dots-active, #ffffff); }

.q-progress-wrap{ position:absolute; left:0; right:0; z-index:13; }
.q-progress--top{ top:0; }
.q-progress--bottom{ bottom:0; }
.q-progress-bar{ width:0; }

/* ===== Toggle (Pause/Play) ===== */
.q-toggle{
  position:absolute; right:12px; bottom:12px;
  font-size:.75rem; padding:.375rem .625rem; border-radius:.375rem; border:0;
  background: rgba(0,0,0,.45); color:#fff; cursor:pointer; z-index:12;
}
.q-toggle:focus-visible{ outline:2px solid rgba(255,255,255,.8); outline-offset:2px; }

/* ===== Transitions ===== */
[data-q-carousel][data-transition="fade"] .q-track{ position:relative; }
[data-q-carousel][data-transition="fade"] .q-slide{
  position:absolute; inset:0; transition: opacity 500ms ease;
  pointer-events:none; /* default off; JS enables on active */
}

/* ===== Ken Burns ===== */
@keyframes qKen { 0%{transform:scale(1)} 100%{transform:scale(1.06)} }
.q-ken-burns{ animation: qKen 20s linear infinite alternate; will-change: transform; }
@media (prefers-reduced-motion: reduce){ .q-ken-burns{ animation:none !important; } }

/* ===== Text motion ===== */
.q-anim{ opacity:0; transform: translateY(6px); transition: opacity .45s ease, transform .45s ease; }
.q-anim--slide-up{ transform: translateY(16px); }
.q-anim.is-in{ opacity:1; transform: none; }

/* Safety nets */
.q-slide.is-active .q-anim{ opacity:1; transform:none; }
[data-q-carousel][data-transition="fade"] .q-slide[style*="opacity: 1"] .q-anim{ opacity:1; transform:none; }

/* before: .q-hero{ position:relative; width:100%; overflow:hidden; } */
.q-hero{ position:relative; width:100%; overflow:hidden; min-height: var(--min-h, 75vh); }

/* Ensure real height even if Tailwind utilities are missing */
.q-hero{ position:relative; width:100%; overflow:hidden; min-height: var(--min-h, 75vh); }

/* Propagate min-height to inner containers so fades don't collapse */
.q-track-outer, .q-track, .q-slide{ min-height: inherit; }

/* Fade mode stacking stays absolute and interactive only on active */
[data-q-carousel][data-transition="fade"] .q-track{ position:relative; }
[data-q-carousel][data-transition="fade"] .q-slide{ position:absolute; inset:0; transition: opacity 500ms ease; }
@media (prefers-reduced-motion: reduce){
  [data-q-carousel][data-transition="fade"] .q-slide{ transition: none; }
}

.q-track-outer { position: relative; overflow: hidden; }
.q-track { display: flex; will-change: transform; }
.q-slide { flex: 0 0 100%; width: 100%; min-width: 100%; }

/* If JS hasn't marked the carousel ready, don't hide any slides in fade mode */
[data-q-carousel][data-transition="fade"]:not([data-q-ready="true"]) [data-q-slide] {
  opacity: 1 !important; pointer-events: auto !important;
}
