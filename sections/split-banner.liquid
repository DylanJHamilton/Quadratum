{% comment %}
  Quadratum • Split Banner (Pro) — purge-proof spacing + valid Liquid
{% endcomment %}

{% liquid
  assign s = section.settings

  # Direction for desktop
  assign dir_css = 'row'
  if s.image_position == 'right'
    assign dir_css = 'row-reverse'
  endif

  # Mobile order
  assign img_order_m = 1
  assign content_order_m = 2
  if s.mobile_image_first == false
    assign img_order_m = 2
    assign content_order_m = 1
  endif

  # Container side padding (contained vs full)
  assign container_pad_m = 0
  assign container_pad_d = 0
  if s.container_mode == 'contained'
    assign container_pad_m = 16
    assign container_pad_d = 24
  endif

  # Max width fallback (if Tailwind max-w-* is purged)
  assign max_w_token = s.content_max_w | default: 'max-w-3xl'
  assign max_w_px = '768px'
  case max_w_token
    when 'max-w-2xl'
      assign max_w_px = '672px'
    when 'max-w-3xl'
      assign max_w_px = '768px'
    when 'max-w-4xl'
      assign max_w_px = '896px'
  endcase

  # Visibility utilities (still added), but we’ll also render core layout via CSS
  assign visibility_classes = ''
  if s.hide_on_mobile
    assign visibility_classes = visibility_classes | append: ' hidden md:block'
  endif
  if s.hide_on_desktop
    assign visibility_classes = visibility_classes | append: ' md:hidden'
  endif

  # Min-height map
  assign min_h_value = '60vh'
  case s.min_height
    when 'min-h-[40vh]'
      assign min_h_value = '40vh'
    when 'min-h-[50vh]'
      assign min_h_value = '50vh'
    when 'min-h-[60vh]'
      assign min_h_value = '60vh'
    when 'min-h-[75vh]'
      assign min_h_value = '75vh'
  endcase

  # Text alignment
  assign text_align_value = 'left'
  case s.text_alignment
    when 'center'
      assign text_align_value = 'center'
    when 'right'
      assign text_align_value = 'right'
  endcase

  # Parse padding tokens to px fallbacks
  assign cpy_m = 48
  assign cpy_d = 64
  assign cpx_m = 24
  assign cpx_d = 40

  assign pad_y_tokens = s.content_pad_y | default: 'py-12 md:py-16'
  if pad_y_tokens contains 'py-0'
    assign cpy_m = 0
  elsif pad_y_tokens contains 'py-2'
    assign cpy_m = 8
  elsif pad_y_tokens contains 'py-3'
    assign cpy_m = 12
  elsif pad_y_tokens contains 'py-4'
    assign cpy_m = 16
  elsif pad_y_tokens contains 'py-5'
    assign cpy_m = 20
  elsif pad_y_tokens contains 'py-6'
    assign cpy_m = 24
  elsif pad_y_tokens contains 'py-8'
    assign cpy_m = 32
  elsif pad_y_tokens contains 'py-10'
    assign cpy_m = 40
  elsif pad_y_tokens contains 'py-12'
    assign cpy_m = 48
  elsif pad_y_tokens contains 'py-16'
    assign cpy_m = 64
  elsif pad_y_tokens contains 'py-20'
    assign cpy_m = 80
  endif

  if pad_y_tokens contains 'md:py-0'
    assign cpy_d = 0
  elsif pad_y_tokens contains 'md:py-2'
    assign cpy_d = 8
  elsif pad_y_tokens contains 'md:py-3'
    assign cpy_d = 12
  elsif pad_y_tokens contains 'md:py-4'
    assign cpy_d = 16
  elsif pad_y_tokens contains 'md:py-5'
    assign cpy_d = 20
  elsif pad_y_tokens contains 'md:py-6'
    assign cpy_d = 24
  elsif pad_y_tokens contains 'md:py-8'
    assign cpy_d = 32
  elsif pad_y_tokens contains 'md:py-10'
    assign cpy_d = 40
  elsif pad_y_tokens contains 'md:py-12'
    assign cpy_d = 48
  elsif pad_y_tokens contains 'md:py-16'
    assign cpy_d = 64
  elsif pad_y_tokens contains 'md:py-20'
    assign cpy_d = 80
  endif

  assign pad_x_tokens = s.content_pad_x | default: 'px-6 md:px-10'
  if pad_x_tokens contains 'px-0'
    assign cpx_m = 0
  elsif pad_x_tokens contains 'px-2'
    assign cpx_m = 8
  elsif pad_x_tokens contains 'px-3'
    assign cpx_m = 12
  elsif pad_x_tokens contains 'px-4'
    assign cpx_m = 16
  elsif pad_x_tokens contains 'px-5'
    assign cpx_m = 20
  elsif pad_x_tokens contains 'px-6'
    assign cpx_m = 24
  elsif pad_x_tokens contains 'px-8'
    assign cpx_m = 32
  elsif pad_x_tokens contains 'px-10'
    assign cpx_m = 40
  elsif pad_x_tokens contains 'px-12'
    assign cpx_m = 48
  endif

  if pad_x_tokens contains 'md:px-0'
    assign cpx_d = 0
  elsif pad_x_tokens contains 'md:px-2'
    assign cpx_d = 8
  elsif pad_x_tokens contains 'md:px-3'
    assign cpx_d = 12
  elsif pad_x_tokens contains 'md:px-4'
    assign cpx_d = 16
  elsif pad_x_tokens contains 'md:px-5'
    assign cpx_d = 20
  elsif pad_x_tokens contains 'md:px-6'
    assign cpx_d = 24
  elsif pad_x_tokens contains 'md:px-8'
    assign cpx_d = 32
  elsif pad_x_tokens contains 'md:px-10'
    assign cpx_d = 40
  elsif pad_x_tokens contains 'md:px-12'
    assign cpx_d = 48
  endif

  # Font-size fallbacks
  assign kicker_fs = '0.875rem'
  case s.kicker_size
    when 'base'
      assign kicker_fs = '1rem'
    when 'lg'
      assign kicker_fs = '1.125rem'
  endcase

  assign heading_fs = '1.875rem'
  case s.heading_size
    when '2xl'
      assign heading_fs = '1.5rem'
    when '3xl'
      assign heading_fs = '1.875rem'
    when '4xl'
      assign heading_fs = '2.25rem'
  endcase

  assign sub_fs = '1rem'
  case s.subheading_size
    when 'lg'
      assign sub_fs = '1.125rem'
    when 'xl'
      assign sub_fs = '1.25rem'
  endcase

  assign heading_level = s.heading_level | default: 'h2'
  assign desc_id = 'split-desc-' | append: section.id
%}

<section id="{{ s.anchor_id | default: 'section-' | append: section.id }}"
         class="q-split-banner{{ visibility_classes }}"
         role="region"
         aria-label="{{ s.region_label | default: 'Promotional banner' }}"
         data-q-observe="reveal"
         style="min-height: {{ min_h_value }}; background-color: {{ s.section_bg | default: 'transparent' }};">

  <div class="q-container">
    <div class="q-row">

      <div class="q-col q-img">
        {% if s.mobile_image != blank %}
          <div class="q-show-m">
            {{ s.mobile_image
              | image_url: width: 1536
              | image_tag:
                widths: '640,960,1280,1536',
                sizes: '100vw',
                loading: 'eager',
                fetchpriority: 'high',
                class: 'q-img-el',
                alt: s.mobile_image_alt | default: '' }}
          </div>
          <div class="q-show-d">
            {{ s.image
              | image_url: width: 2048
              | image_tag:
                widths: '960,1280,1536,2048',
                sizes: '(min-width: 768px) 50vw, 100vw',
                loading: 'eager',
                fetchpriority: 'high',
                class: 'q-img-el',
                alt: s.image_alt | default: '' }}
          </div>
        {% else %}
          {% if s.image != blank %}
            {{ s.image
              | image_url: width: 2048
              | image_tag:
                widths: '640,960,1280,1536,2048',
                sizes: '(min-width: 768px) 50vw, 100vw',
                loading: 'eager',
                fetchpriority: 'high',
                class: 'q-img-el',
                alt: s.image_alt | default: '' }}
          {% endif %}
        {% endif %}

        {% if s.image_caption != blank %}
          <figcaption class="q-cap">
            {{ s.image_caption }}
          </figcaption>
        {% endif %}
      </div>

      <div class="q-col q-content-side">
        <div class="q-panel" style="background-color: {{ s.content_bg_color }}; text-align: {{ text_align_value }}; max-width: {{ max_w_px }};">

          {% if s.kicker != blank %}
            <p class="uppercase tracking-wide mb-2" style="font-size: {{ kicker_fs }}; line-height: 1.2; color: {{ s.kicker_color | default: '#111827' }}; font-weight:600;">
              {{ s.kicker }}
            </p>
          {% endif %}

          {% if s.heading != blank %}
            {% case heading_level %}
              {% when 'h1' %}
                <h1 class="mb-3" style="font-size: {{ heading_fs }}; line-height: 1.2; color: {{ s.heading_color | default: '#111827' }}; font-weight:700;">
                  {{ s.heading }}
                </h1>
              {% else %}
                <h2 class="mb-3" style="font-size: {{ heading_fs }}; line-height: 1.2; color: {{ s.heading_color | default: '#111827' }}; font-weight:700;">
                  {{ s.heading }}
                </h2>
            {% endcase %}
          {% endif %}

          {% if s.subheading != blank %}
            <p id="{{ desc_id }}" class="mb-6" style="font-size: {{ sub_fs }}; line-height: 1.6; color: {{ s.subheading_color | default: '#374151' }};">
              {{ s.subheading }}
            </p>
          {% endif %}

          {% if s.show_rating %}
            {% liquid
              assign full_stars = s.rating | default: 5 | plus: 0
              if full_stars > 5
                assign full_stars = 5
              endif
            %}
            <div class="q-stars">
              <div class="q-stars-row">
                {% for i in (1..5) %}
                  {% if i <= full_stars %}
                    <span aria-hidden="true">★</span>
                  {% else %}
                    <span class="q-star-fade" aria-hidden="true">★</span>
                  {% endif %}
                {% endfor %}
              </div>
              <span class="q-stars-text">{{ s.rating_count | default: 128 }} reviews</span>
            </div>
          {% endif %}

          {% if section.blocks.size > 0 %}
            <div class="q-btns" {% if s.subheading != blank %}aria-describedby="{{ desc_id }}"{% endif %}>
              {% for block in section.blocks %}
                {% assign b = block.settings %}
                {% assign outline_flag = '' %}
                {% if b.button_mode == 'outline' %}
                  {% assign outline_flag = 'true' %}
                {% endif %}

                {% assign btn_size = b.size | default: 'md' %}
                {% assign pad_y = 12 %}{% assign pad_x = 20 %}
                {% if btn_size == 'sm' %}{% assign pad_y = 10 %}{% assign pad_x = 16 %}
                {% elsif btn_size == 'lg' %}{% assign pad_y = 14 %}{% assign pad_x = 24 %}{% endif %}

                <a href="{{ b.link | default: '#' }}"
                   {% if b.new_tab %}target="_blank" rel="noopener"{% endif %}
                   aria-label="{{ b.aria_label | default: b.label | escape }}"
                   class="q-btn"
                   style="
                     {% if outline_flag == 'true' %}
                       color: {{ b.text_color }};
                       background-color: transparent;
                       border-style: solid;
                       border-color: {{ b.border_color }};
                       border-width: {{ b.border_width }}px;
                     {% else %}
                       color: {{ b.text_color }};
                       background-color: {{ b.bg_color }};
                     {% endif %}
                     border-radius: {{ b.radius }}px;
                     padding-left: {{ pad_x }}px; padding-right: {{ pad_x }}px;
                     padding-top: {{ pad_y }}px;  padding-bottom: {{ pad_y }}px;
                   "
                   {{ block.shopify_attributes }}>
                  {% if b.icon != blank %}<span aria-hidden="true">{{ b.icon }}</span>{% endif %}
                  <span>{{ b.label }}</span>
                </a>
              {% endfor %}
            </div>
          {% endif %}

          {% assign has_badges = false %}
          {% for block in section.blocks %}
            {% if block.type == 'badge' %}{% assign has_badges = true %}{% endif %}
          {% endfor %}
          {% if has_badges %}
            <div class="q-badges">
              {% for block in section.blocks %}
                {% if block.type == 'badge' %}
                  {% assign bb = block.settings %}
                  <span class="q-badge" {{ block.shopify_attributes }}>
                    {% if bb.badge_icon != blank %}<span aria-hidden="true">{{ bb.badge_icon }}</span>{% endif %}
                    <span>{{ bb.badge_text }}</span>
                  </span>
                {% endif %}
              {% endfor %}
            </div>
          {% endif %}

        </div>
      </div>

    </div>
  </div>
</section>

<style>
  /* Container side padding */
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-container{
    margin-left:auto; margin-right:auto; width:100%;
    padding-left: {{ container_pad_m }}px; padding-right: {{ container_pad_m }}px;
  }
  @media (min-width:768px){
    #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-container{
      padding-left: {{ container_pad_d }}px; padding-right: {{ container_pad_d }}px;
    }
  }

  /* Row/columns and desktop direction */
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-row{ display:flex; flex-direction: column; align-items: stretch; gap:0; }
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-col{ width:100%; }
  @media (min-width:768px){
    #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-row{ flex-direction: {{ dir_css }}; }
    #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-col{ width:50%; }
  }

  /* Mobile order; reset on desktop */
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-img{ order: {{ img_order_m }}; }
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-content-side{ order: {{ content_order_m }}; }
  @media (min-width:768px){
    #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-img,
    #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-content-side{ order: initial; }
  }

  /* Mobile/desktop image toggles without Tailwind */
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-show-m{ display:block; }
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-show-d{ display:none; }
  @media (min-width:768px){
    #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-show-m{ display:none; }
    #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-show-d{ display:block; }
  }

  /* Content panel padding fallbacks */
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-panel{
    margin-left:auto; margin-right:auto;
    padding-top: {{ cpy_m }}px; padding-bottom: {{ cpy_m }}px;
    padding-left: {{ cpx_m }}px; padding-right: {{ cpx_m }}px;
  }
  @media (min-width:768px){
    #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-panel{
      padding-top: {{ cpy_d }}px; padding-bottom: {{ cpy_d }}px;
      padding-left: {{ cpx_d }}px; padding-right: {{ cpx_d }}px;
    }
  }

  /* Images */
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-img{ position:relative; }
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-img-el{ width:100%; height:100%; object-fit:cover; display:block; }

  /* Figcaption */
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-cap{
    position:absolute; right:8px; bottom:8px;
    font-size:11px; color:#fff; background:rgba(0,0,0,.4);
    padding:4px 8px; border-radius:6px;
  }

  /* Buttons/badges basic layout */
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-btns{ display:flex; flex-wrap:wrap; gap:12px; margin-top:8px; }
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-btn{
    display:inline-flex; align-items:center; gap:8px; font-weight:500; text-decoration:none;
    transition:transform .15s ease, box-shadow .15s ease, background-color .2s ease, color .2s ease, border-color .2s ease;
  }
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-btn:focus-visible{ outline:2px solid rgba(0,0,0,.45); outline-offset:2px; }
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-btn:hover{ transform:translateY(-1px); box-shadow:0 4px 14px rgb(0 0 0 / 0.12); }

  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-badges{ margin-top:16px; display:flex; flex-wrap:wrap; gap:12px; opacity:.85; font-size:12px; }
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-stars{ margin-bottom:16px; display:flex; align-items:center; gap:8px; }
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-stars-row{ display:flex; gap:2px; }
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-star-fade{ opacity:.3; }
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-stars-text{ font-size:14px; }
</style>

{% schema %}
{
  "name": "Split Banner • Pro",
  "tag": "section",
  "class": "q-split-banner",
  "settings": [
    { "type": "header", "content": "About this section" },
    { "type": "paragraph", "content": "Two-column banner with an image and a content panel. Add multiple buttons and optional badges. The content side can have its own background color. Mobile image override and mobile order controls included." },

    { "type": "header", "content": "Media" },
    { "type": "image_picker", "id": "image", "label": "Desktop image" },
    { "type": "text", "id": "image_alt", "label": "Image alt text (desktop)" },
    { "type": "image_picker", "id": "mobile_image", "label": "Mobile image (optional)" },
    { "type": "text", "id": "mobile_image_alt", "label": "Image alt text (mobile)" },
    { "type": "text", "id": "image_caption", "label": "Image caption (optional)" },
    { "type": "select", "id": "image_position", "label": "Image position (desktop)", "options": [{ "value": "left", "label": "Left" }, { "value": "right", "label": "Right" }], "default": "left" },
    { "type": "checkbox", "id": "mobile_image_first", "label": "Show image above content on mobile", "default": true },

    { "type": "header", "content": "Layout & spacing" },
    { "type": "select", "id": "min_height", "label": "Minimum height", "default": "min-h-[60vh]", "options": [
      { "value": "min-h-[40vh]", "label": "40% viewport" },
      { "value": "min-h-[50vh]", "label": "50% viewport" },
      { "value": "min-h-[60vh]", "label": "60% viewport" },
      { "value": "min-h-[75vh]", "label": "75% viewport" }
    ]},
    { "type": "select", "id": "container_mode", "label": "Container", "default": "contained", "options": [
      { "value": "contained", "label": "Contained (side padding)" },
      { "value": "full", "label": "Full-bleed (edge to edge)" }
    ]},
    { "type": "select", "id": "content_max_w", "label": "Content width", "default": "max-w-3xl", "options": [
      { "value": "max-w-2xl", "label": "Narrow" },
      { "value": "max-w-3xl", "label": "Comfort" },
      { "value": "max-w-4xl", "label": "Wide" }
    ]},
    { "type": "text", "id": "content_pad_y", "label": "Content vertical padding (Tailwind utilities)", "default": "py-12 md:py-16" },
    { "type": "text", "id": "content_pad_x", "label": "Content horizontal padding (Tailwind utilities)", "default": "px-6 md:px-10" },

    { "type": "header", "content": "Content panel" },
    { "type": "color", "id": "content_bg_color", "label": "Content background color", "default": "#ffffff" },
    { "type": "text", "id": "kicker", "label": "Kicker", "default": "Featured" },
    { "type": "color", "id": "kicker_color", "label": "Kicker color", "default": "#111827" },
    { "type": "select", "id": "kicker_size", "label": "Kicker size", "options": [
      { "value": "sm", "label": "Small" }, { "value": "base", "label": "Normal" }, { "value": "lg", "label": "Large" }], "default": "sm"
    },

    { "type": "text", "id": "heading", "label": "Heading", "default": "Discover the collection" },
    { "type": "select", "id": "heading_level", "label": "Heading level", "default": "h2", "options": [{ "value": "h1", "label": "H1 (page headline)" }, { "value": "h2", "label": "H2 (section headline)" }] },
    { "type": "color", "id": "heading_color", "label": "Heading color", "default": "#111827" },
    { "type": "select", "id": "heading_size", "label": "Heading size", "options": [
      { "value": "2xl", "label": "2XL" }, { "value": "3xl", "label": "3XL" }, { "value": "4xl", "label": "4XL" }], "default": "3xl"
    },

    { "type": "textarea", "id": "subheading", "label": "Subheading", "default": "Crafted for style. Built for performance." },
    { "type": "color", "id": "subheading_color", "label": "Subheading color", "default": "#374151" },
    { "type": "select", "id": "subheading_size", "label": "Subheading size", "options": [
      { "value": "base", "label": "Base" }, { "value": "lg", "label": "Large" }, { "value": "xl", "label": "XL" }], "default": "base"
    },

    { "type": "header", "content": "Social proof (optional)" },
    { "type": "checkbox", "id": "show_rating", "label": "Show rating stars", "default": false },
    { "type": "range", "id": "rating", "label": "Rating (0–5)", "min": 0, "max": 5, "step": 1, "default": 5 },
    { "type": "number", "id": "rating_count", "label": "Review count", "default": 128 },

    { "type": "header", "content": "Alignment & visibility" },
    { "type": "select", "id": "text_alignment", "label": "Text alignment", "options": [
      { "value": "left", "label": "Left" }, { "value": "center", "label": "Center" }, { "value": "right", "label": "Right" }], "default": "left"
    },
    { "type": "text", "id": "anchor_id", "label": "Optional anchor ID", "default": "features" },
    { "type": "text", "id": "region_label", "label": "Accessible region label", "default": "Promotional banner" },
    { "type": "checkbox", "id": "hide_on_mobile", "label": "Hide on mobile", "default": false },
    { "type": "checkbox", "id": "hide_on_desktop", "label": "Hide on desktop", "default": false },

    { "type": "header", "content": "Section background (rarely needed)" },
    { "type": "text", "id": "section_bg", "label": "Section background (Tailwind arbitrary color)", "default": "transparent", "info": "Advanced: sets background of the outer section. Use CSS color or Tailwind arbitrary color syntax." }
  ],
  "blocks": [
    {
      "type": "button",
      "name": "Button",
      "settings": [
        { "type": "text", "id": "label", "label": "Label", "default": "Shop now" },
        { "type": "url", "id": "link", "label": "Link", "default": "/collections/all" },
        { "type": "text", "id": "aria_label", "label": "ARIA label", "default": "Shop now" },
        { "type": "select", "id": "size", "label": "Size", "default": "md", "options": [{ "value": "sm", "label": "Small" }, { "value": "md", "label": "Medium" }, { "value": "lg", "label": "Large" }] },
        { "type": "checkbox", "id": "new_tab", "label": "Open in new tab", "default": false },
        { "type": "select", "id": "button_mode", "label": "Style", "options": [{ "value": "solid", "label": "Solid" }, { "value": "outline", "label": "Outline" }], "default": "solid" },
        { "type": "text", "id": "icon", "label": "Icon (SVG/HTML)" },
        { "type": "color", "id": "bg_color", "label": "Background (solid)", "default": "#111111" },
        { "type": "color", "id": "text_color", "label": "Text color", "default": "#ffffff" },
        { "type": "color", "id": "border_color", "label": "Border color (outline)", "default": "#111111" },
        { "type": "range", "id": "border_width", "label": "Border width (outline)", "min": 0, "max": 8, "step": 1, "default": 1 },
        { "type": "range", "id": "radius", "label": "Radius", "min": 0, "max": 50, "step": 2, "default": 6 }
      ]
    },
    {
      "type": "badge",
      "name": "Badge",
      "settings": [
        { "type": "text", "id": "badge_text", "label": "Badge text", "default": "Free shipping over $50" },
        { "type": "text", "id": "badge_icon", "label": "Icon (SVG/HTML)" }
      ]
    }
  ],
  "max_blocks": 8,
  "presets": [
    { "name": "Split Banner • Pro", "category": "Banner", "blocks": [{ "type": "button" }, { "type": "button" }, { "type": "badge" }] }
  ]
}
{% endschema %}
