{% comment %}
  Quadratum — CTA: Web3 (HOTFIX • self-contained CSS + background image)
  • Adds optional background image on the root <section> (decorative), per Quadratum rulebook.
  • Background media on root; content and overlays are siblings. Fully tokenized with safe fallbacks.
{% endcomment %}

{% liquid
  assign s = section.settings
  assign connected = s.simulate_connected

  assign align_class = 'align-center'
  if s.alignment == 'start'
    assign align_class = 'align-start'
  endif

  capture bg_color
    if s.background_style == 'accent'
      echo 'var(--surface-accent, rgba(0,0,0,0.03))'
    elsif s.background_style == 'dark'
      echo 'var(--surface-inverse, #111)'
    else
      echo 'var(--surface, #fff)'
    endif
  endcapture

  capture primary_label
    if connected
      echo 'Connected ✅'
    else
      echo s.primary_label | default: 'Connect Wallet'
    endif
  endcapture

  assign icon_count = 0
  for block in section.blocks
    if block.type == 'wallet_icon'
      assign icon_count = icon_count | plus: 1
    endif
  endfor
%}

<section id="cta-web3-{{ section.id }}" class="q-section q-cta-web3" role="region" aria-label="Web3 call to action" style="background-color: {{ bg_color }}; position: relative;">
  {% if s.bg_image != blank %}
    <div class="qw3-bg" aria-hidden="true" style="background-image: url({{ s.bg_image | image_url: width: 2400 }});"></div>
  {% endif %}

  <div class="qw3-container">
    <div class="qw3-card">
      <div class="qw3-content {{ align_class }}">
        {% if s.eyebrow != blank %}<p class="qw3-eyebrow">{{ s.eyebrow }}</p>{% endif %}
        {% if s.headline != blank %}<h2 class="qw3-title">{{ s.headline }}</h2>{% endif %}
        {% if s.subheading != blank %}<p class="qw3-sub">{{ s.subheading }}</p>{% endif %}

        {% if s.show_icons %}
          <ul class="qw3-icons" aria-label="Supported wallets">
            {% if icon_count > 0 %}
              {% for block in section.blocks %}
                {% if block.type == 'wallet_icon' %}
                  <li {{ block.shopify_attributes }}>
                    {% if block.settings.icon_svg != blank %}
                      {{ block.settings.icon_svg }}
                    {% else %}
                      <span class="qw3-badge">{{ block.settings.alt_text | default: 'Wallet' }}</span>
                    {% endif %}
                  </li>
                {% endif %}
              {% endfor %}
            {% else %}
              <li><span class="qw3-badge">MetaMask</span></li>
              <li><span class="qw3-badge">WalletConnect</span></li>
              <li><span class="qw3-badge">Coinbase</span></li>
            {% endif %}
          </ul>
        {% endif %}

        <div class="qw3-actions">
          {% if connected %}
            <button class="btn btn-primary is-connected" aria-disabled="true" tabindex="-1">{{ primary_label }}</button>
          {% else %}
            {% if s.primary_url != blank %}
              <a class="btn btn-primary" href="{{ s.primary_url }}">{{ primary_label }}</a>
            {% else %}
              <button class="btn btn-primary js-connect" type="button" aria-pressed="false">{{ primary_label }}</button>
            {% endif %}
          {% endif %}

          {% if s.secondary_label != blank and s.secondary_url != blank %}
            <a class="btn btn-secondary" href="{{ s.secondary_url }}">{{ s.secondary_label }}</a>
          {% endif %}
        </div>
      </div>

      <div class="qw3-media">
        {% if s.image != blank %}
          <div class="qw3-media-wrap">
            {{ s.image | image_url: width: 1600 | image_tag: loading: 'lazy', alt: s.headline, sizes: "(min-width: 990px) 560px, 100vw", widths: "560,840,1120,1600" }}
          </div>
        {% endif %}
      </div>
    </div>
  </div>

  <style>
    /* Decorative background on root section (behind content) */
    #cta-web3-{{ section.id }} .qw3-bg{
      position:absolute; inset:0;
      background-repeat:no-repeat; background-position:center; background-size:cover;
      opacity: var(--qw3-bg-opacity, 0.12);
      filter: var(--qw3-bg-filter, none);
      pointer-events:none;
      z-index:0;
    }
    #cta-web3-{{ section.id }} .qw3-container{ position:relative; z-index:1; }

    /* Container lane */
    #cta-web3-{{ section.id }} .qw3-container{
      margin-inline:auto;
      width:min(100%, var(--container-xl, 1200px));
      padding-block: var(--space-xl, 4rem);
      padding-inline: var(--space-lg, 1.5rem);
    }

    /* Card */
    #cta-web3-{{ section.id }} .qw3-card{
      display:grid;
      gap: var(--space-lg, 1.5rem);
      grid-template-columns: 1fr;
      align-items:center;
      background: var(--surface, #fff);
      border-radius: var(--radius-2xl, 24px);
      box-shadow: var(--shadow-lg, 0 10px 30px rgba(0,0,0,.05));
      padding: var(--space-2xl, 3rem);
    }

    /* Content */
    #cta-web3-{{ section.id }} .qw3-content.align-center{ text-align:center; }
    #cta-web3-{{ section.id }} .qw3-content.align-start{ text-align:start; }

    #cta-web3-{{ section.id }} .qw3-eyebrow{
      color: var(--text-secondary, #666);
      letter-spacing: var(--tracking-wide, .02em);
      margin: 0 0 var(--space-lg, 1.5rem) 0;
      font-size: var(--type-sm, .875rem);
    }
    #cta-web3-{{ section.id }} .qw3-title{
      color: var(--text-primary, #111);
      font-family: var(--font-heading, inherit);
      font-size: var(--type-3xl, 2rem);
      line-height: var(--leading-tight, 1.2);
      margin: 0 0 var(--space-lg, 1.5rem) 0;
    }
    #cta-web3-{{ section.id }} .qw3-sub{
      color: var(--text-secondary, #555);
      font-family: var(--font-body, inherit);
      font-size: var(--type-base, 1rem);
      line-height: var(--leading-relaxed, 1.7);
      margin: 0 0 var(--space-lg, 1.5rem) 0;
    }

    /* Icons */
    #cta-web3-{{ section.id }} .qw3-icons{
      display:flex; flex-wrap:wrap; align-items:center;
      gap: var(--space-lg, 1.5rem); margin:0 0 var(--space-lg, 1.5rem) 0; padding:0; list-style:none;
    }
    #cta-web3-{{ section.id }} .qw3-icons li{ line-height:0; }
    #cta-web3-{{ section.id }} .qw3-icons svg{
      width: var(--size-8, 2rem); height: var(--size-8, 2rem);
      color: var(--text-primary, #111);
      display:inline-block;
    }
    #cta-web3-{{ section.id }} .qw3-badge{
      display:inline-flex; align-items:center; justify-content:center;
      padding-inline: var(--space-md, 1rem);
      height: var(--control-lg, 2.75rem);
      border-radius: var(--radius-sm, 10px);
      background: var(--surface-muted, #f0f0f0);
      color: var(--text-secondary, #555);
      font: inherit;
    }

    /* Actions */
    #cta-web3-{{ section.id }} .qw3-actions{ display:flex; gap: var(--space-lg, 1.5rem); flex-wrap:wrap; }
    #cta-web3-{{ section.id }} .btn.is-connected{ opacity:.7; pointer-events:none; }

    /* Media */
    #cta-web3-{{ section.id }} .qw3-media-wrap{
      aspect-ratio: 4/3;
      overflow: clip;
      border-radius: var(--radius-xl, 18px);
      box-shadow: var(--shadow-md, 0 6px 20px rgba(0,0,0,.06));
    }

    /* Split at desktop */
    @media (min-width: 48rem){
      #cta-web3-{{ section.id }} .qw3-card{ grid-template-columns: 1.1fr 0.9fr; }
    }

    /* Optional compact knobs (example) */
    #cta-web3-{{ section.id }}{ --qw3-maxw: var(--container-md); --qw3-pad: var(--space-lg); }
  </style>

  {% if s.primary_url == blank and connected == false %}
  <script>
    (function(){
      var root=document.getElementById('cta-web3-{{ section.id }}');
      if(!root) return;
      var btn=root.querySelector('.js-connect');
      if(!btn) return;
      btn.addEventListener('click',function(){
        btn.classList.add('is-connected');
        btn.setAttribute('aria-disabled','true');
        btn.setAttribute('aria-pressed','true');
        btn.textContent='Connected ✅';
        root.style.transition='opacity 160ms ease';
        root.style.opacity='0.98';
        setTimeout(function(){root.style.opacity='';},200);
        try{window.dispatchEvent(new CustomEvent('quadratum:cta-web3:connected',{detail:{sectionId:'{{ section.id }}'}}));}catch(e){}
      },{passive:true});
    })();
  </script>
  {% endif %}
</section>

{% schema %}
{
  "name": "CTA — Web3",
  "tag": "section",
  "class": "q-section q-cta-web3",
  "settings": [
    { "type": "text", "id": "eyebrow", "label": "Eyebrow", "default": "Web3 Ready" },
    { "type": "text", "id": "headline", "label": "Headline", "default": "Connect Your Wallet" },
    { "type": "textarea", "id": "subheading", "label": "Subheading", "default": "Experience on-chain shopping securely." },
    { "type": "text", "id": "primary_label", "label": "Primary button label", "default": "Connect Wallet" },
    { "type": "url",  "id": "primary_url", "label": "Primary button link" },
    { "type": "text", "id": "secondary_label", "label": "Secondary button label", "default": "Learn More" },
    { "type": "url",  "id": "secondary_url", "label": "Secondary button link" },
    { "type": "image_picker", "id": "image", "label": "Right-side illustration" },
    { "type": "image_picker", "id": "bg_image", "label": "Background image (optional)" },
    { "type": "checkbox", "id": "show_icons", "label": "Show wallet icons row", "default": true },
    { "type": "checkbox", "id": "simulate_connected", "label": "Simulate connected state", "default": false },
    {
      "type": "select",
      "id": "background_style",
      "label": "Background style",
      "default": "accent",
      "options": [
        { "value": "default", "label": "Default surface" },
        { "value": "accent",  "label": "Accent surface" },
        { "value": "dark",    "label": "Dark surface" }
      ]
    },
    {
      "type": "select",
      "id": "alignment",
      "label": "Text alignment",
      "default": "center",
      "options": [
        { "value": "start",  "label": "Start" },
        { "value": "center", "label": "Center" }
      ]
    }
  ],
  "blocks": [
    {
      "type": "wallet_icon",
      "name": "Wallet icon",
      "limit": 6,
      "settings": [
        { "type": "html", "id": "icon_svg", "label": "Icon SVG" },
        { "type": "text", "id": "alt_text", "label": "Alt text / name" }
      ]
    }
  ],
  "presets": [

    { "name": "Connect Wallet" },
    { "name": "Join the Network" },
    { "name": "Build Onchain" }
  ]
}
{% endschema %}
