{% comment %}
  Quadratum • Sub Page Banner — Breadcrumb
  Modes:
    - "media": compact sub-page banner with optional background + gradient.
    - "plain": static section (no background image), just breadcrumb + title + optional CTAs.

  A11y: nav[aria-label="Breadcrumb"], aria-current on last crumb, JSON-LD.
  Perf: single image, lazy. CTAs optional (max 2). No JS.

  Centering:
    - Breadcrumb aligns via --crumb-justify.
    - Whole block centers via auto margins on .q-inner (both modes).

  All schema defaults are non-empty to avoid upload errors.
{% endcomment %}

{% liquid
  assign s = section.settings
  assign t = settings

  # Anchor (non-empty)
  assign anchor_raw = s.anchor_id | default: 'auto'
  assign anchor_id = anchor_raw
  if anchor_raw == 'auto'
    assign anchor_id = section.id
  endif

  # Layout
  assign layout_style = s.layout_style | default: 'media'
  assign is_plain = false
  if layout_style == 'plain'
    assign is_plain = true
  endif

  # Sizing
  assign min_h_vh = s.min_height_vh | default: 40
  assign min_h_mobile_vh = s.min_height_vh_mobile | default: 36

  # Plain paddings
  assign pad_y_d = s.plain_pad_y_desktop | default: 48
  assign pad_y_m = s.plain_pad_y_mobile  | default: 32

  # Content width
  assign max_w_token = s.content_max_w | default: 'max-w-3xl'
  assign max_w_px = '768px'
%}
{% case max_w_token %}
  {% when 'max-w-2xl' %}{% assign max_w_px = '672px' %}
  {% when 'max-w-3xl' %}{% assign max_w_px = '768px' %}
  {% when 'max-w-4xl' %}{% assign max_w_px = '896px' %}
  {% when 'max-w-5xl' %}{% assign max_w_px = '1024px' %}
  {% when 'max-w-6xl' %}{% assign max_w_px = '1200px' %}
{% endcase %}

{% liquid
  # Alignment
  assign text_align_value = s.text_alignment | default: 'left'
  assign cta_justify_css = 'flex-start'
  if text_align_value == 'center'
    assign cta_justify_css = 'center'
  elsif text_align_value == 'right'
    assign cta_justify_css = 'flex-end'
  endif

  # Typography
  assign heading_level = s.heading_level | default: 'h2'
  assign heading_fs = '1.875rem'
  if s.heading_size == '2xl'
    assign heading_fs = '1.5rem'
  elsif s.heading_size == '3xl'
    assign heading_fs = '1.875rem'
  elsif s.heading_size == '4xl'
    assign heading_fs = '2.25rem'
  else
    if heading_level == 'h1'
      assign heading_fs = t.type_h1_size | default: 240
    else
      assign heading_fs = t.type_h2_size | default: 200
    endif
    assign heading_fs = heading_fs | divided_by: 100.0 | append: 'rem'
  endif

  assign sub_fs = '1rem'
  if s.subheading_size == 'lg'
    assign sub_fs = '1.125rem'
  elsif s.subheading_size == 'xl'
    assign sub_fs = '1.25rem'
  endif

  assign head_ls = t.headings_letterspacing | default: 0
  assign head_ls_em = head_ls | divided_by: 1000.0 | append: 'em'

  # Colors
  assign col_heading = s.heading_color | default: t.text_base
  assign col_sub     = s.subheading_color | default: t.text_muted
  assign col_crumb   = s.crumb_color | default: t.text_muted
  assign col_crumb_active = s.crumb_active_color | default: t.text_base

  # Media filter (simple mode softens)
  assign media_filter = 'saturate(1.04) contrast(1.02)'
  if s.simple_mode
    assign media_filter = 'none'
  endif
%}

<section id="{{ anchor_id }}"
  class="q-sub-banner-breadcrumb{% if is_plain %} is-plain{% endif %}"
  role="region"
  aria-label="{{ s.region_label | default: 'Breadcrumb banner' }}"
  style="
    --q-min-h: {{ min_h_vh }}vh;
    --q-min-h-m: {{ min_h_mobile_vh }}vh;
    --q-safe-offset: {{ s.safe_offset_px | default: 0 }}px;

    --pad-y-d: {{ pad_y_d }}px;
    --pad-y-m: {{ pad_y_m }}px;

    --cta-justify: {{ cta_justify_css }};
    --crumb-justify: {% if text_align_value == 'center' %}center{% elsif text_align_value == 'right' %}flex-end{% else %}flex-start{% endif %};

    --d-heading: {{ col_heading }};
    --d-sub: {{ col_sub }};
    --crumb: {{ col_crumb }};
    --crumb-active: {{ col_crumb_active }};

    --sec-bg: {{ s.section_bg_color }};
    --sec-bg-o: {{ s.section_bg_opacity | default: 0 | divided_by: 100.0 }};
  "
>
  <div class="q-wrap">
    {% unless is_plain %}
      <!-- Media (inert) -->
      <div class="q-media" aria-hidden="true">
        {% if s.image != blank %}
          {{ s.image
            | image_url: width: 2560
            | image_tag:
              widths: '960,1280,1536,1920,2560',
              sizes: '100vw',
              loading: 'lazy',
              fetchpriority: 'low',
              class: 'q-media-el',
              alt: s.image_alt | default: 'Breadcrumb banner image' }}
        {% endif %}

        {% if s.overlay_mode == 'solid' %}
          <span class="q-overlay"
            style="--ov: {{ s.overlay_color | default: '#000000' }}; --ov-o: {{ s.overlay_opacity | default: 0 | divided_by: 100.0 }};"></span>
        {% elsif s.overlay_mode == 'gradient' %}
          <span class="q-gradient"
            style="
              --g-a: {{ s.grad_angle | default: 135 }}deg;
              --g-s: {{ s.grad_start | default: '#000000' }};
              --g-so: {{ s.grad_start_opacity | default: 0 | divided_by: 100.0 }};
              --g-e: {{ s.grad_end | default: '#000000' }};
              --g-eo: {{ s.grad_end_opacity | default: 0 | divided_by: 100.0 }};
            "></span>
        {% endif %}
      </div>
    {% endunless %}

    <!-- Content -->
    <div class="q-content" style="text-align: {{ text_align_value }};">
      <div class="q-inner" style="max-width: {{ max_w_px }};">
        {% if s.show_breadcrumb %}
          <nav class="q-breadcrumb" aria-label="Breadcrumb">
            <ol class="q-crumbs" itemscope itemtype="https://schema.org/BreadcrumbList">
              {% assign position = 1 %}
              <li class="q-crumb" itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem">
                <a href="{{ routes.root_url }}" itemprop="item" class="q-crumb-link"><span itemprop="name">{{ s.home_label | default: 'Home' }}</span></a>
                <meta itemprop="position" content="{{ position }}">{% assign position = position | plus: 1 %}
              </li>

              {%- comment -%} Page-context crumbs {%- endcomment -%}
              {% if template contains 'product' %}
                {% if collection %}
                  <li class="q-crumb" itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem">
                    <a href="{{ collection.url }}" itemprop="item" class="q-crumb-link"><span itemprop="name">{{ collection.title }}</span></a>
                    <meta itemprop="position" content="{{ position }}">{% assign position = position | plus: 1 %}
                  </li>
                {% endif %}
                <li class="q-crumb q-crumb--current" aria-current="page" itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem">
                  <span class="q-crumb-current" itemprop="name">{{ product.title }}</span>
                  <meta itemprop="position" content="{{ position }}">
                </li>

              {% elsif template contains 'collection' %}
                <li class="q-crumb q-crumb--current" aria-current="page" itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem">
                  <span class="q-crumb-current" itemprop="name">{{ collection.title }}</span>
                  <meta itemprop="position" content="{{ position }}">
                </li>

              {% elsif template contains 'blog' and article %}
                <li class="q-crumb" itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem">
                  <a href="{{ blog.url }}" itemprop="item" class="q-crumb-link"><span itemprop="name">{{ blog.title }}</span></a>
                  <meta itemprop="position" content="{{ position }}">{% assign position = position | plus: 1 %}
                </li>
                <li class="q-crumb q-crumb--current" aria-current="page" itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem">
                  <span class="q-crumb-current" itemprop="name">{{ article.title }}</span>
                  <meta itemprop="position" content="{{ position }}">
                </li>

              {% elsif template contains 'blog' %}
                <li class="q-crumb q-crumb--current" aria-current="page" itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem">
                  <span class="q-crumb-current" itemprop="name">{{ blog.title }}</span>
                  <meta itemprop="position" content="{{ position }}">
                </li>

              {% elsif template contains 'page' %}
                <li class="q-crumb q-crumb--current" aria-current="page" itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem">
                  <span class="q-crumb-current" itemprop="name">{{ page.title }}</span>
                  <meta itemprop="position" content="{{ position }}">
                </li>

              {% elsif template contains 'cart' %}
                <li class="q-crumb q-crumb--current" aria-current="page" itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem">
                  <span class="q-crumb-current" itemprop="name">{{ 'cart.general.title' | t }}</span>
                  <meta itemprop="position" content="{{ position }}">
                </li>

              {% elsif template contains 'search' %}
                <li class="q-crumb q-crumb--current" aria-current="page" itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem">
                  <span class="q-crumb-current" itemprop="name">{{ 'general.search.title' | t }}</span>
                  <meta itemprop="position" content="{{ position }}">
                </li>

              {% else %}
                <li class="q-crumb q-crumb--current" aria-current="page" itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem">
                  <span class="q-crumb-current" itemprop="name">{{ request.page_type | capitalize }}</span>
                  <meta itemprop="position" content="{{ position }}">
                </li>
              {% endif %}
            </ol>
          </nav>
        {% endif %}

        {% if s.show_heading %}
          {% case heading_level %}
            {% when 'h1' %}
              <h1 class="q-heading"
                style="margin:6px 0 8px 0; font-size: {{ heading_fs }}; line-height:1.2; font-weight:700; letter-spacing: {{ head_ls_em }}; color: var(--d-heading); {% if t.headings_uppercase and s.heading_uppercase %}text-transform:uppercase;{% endif %}">{{ s.heading | default: page.title }}</h1>
            {% else %}
              <h2 class="q-heading"
                style="margin:6px 0 8px 0; font-size: {{ heading_fs }}; line-height:1.2; font-weight:700; letter-spacing: {{ head_ls_em }}; color: var(--d-heading); {% if t.headings_uppercase and s.heading_uppercase %}text-transform:uppercase;{% endif %}">{{ s.heading | default: page.title }}</h2>
          {% endcase %}
        {% endif %}

        {% if s.subheading != blank %}
          <p class="q-sub" style="margin:0 0 10px 0; font-size: {{ sub_fs }}; line-height:1.6; color: var(--d-sub);">{{ s.subheading }}</p>
        {% endif %}

        {% if section.blocks.size > 0 %}
          <div class="q-btns">
            {% for block in section.blocks %}
              {% if block.type == 'button' %}
                {% assign b = block.settings %}
                {% liquid
                  assign variant = b.button_mode | default: t.button_variant_default | default: 'solid'
                  assign btn_text = t.text_on_color
                  assign btn_bg = t.color_primary
                  assign btn_border = t.color_primary
                  if variant == 'outline'
                    assign btn_text = t.color_primary
                    assign btn_bg = 'transparent'
                    assign btn_border = t.color_primary
                  elsif variant == 'ghost'
                    assign btn_text = t.color_primary
                    assign btn_bg = 'transparent'
                    assign btn_border = 'transparent'
                  endif
                  assign bw = b.border_width | default: t.button_border_width | default: 1
                  assign radius_px = b.radius | default: t.button_radius | default: 12
                  if b.use_theme_colors == false
                    if b.text_color != blank
                      assign btn_text = b.text_color
                    endif
                    if b.bg_color != blank
                      assign btn_bg = b.bg_color
                    endif
                    if b.border_color != blank
                      assign btn_border = b.border_color
                    endif
                  endif
                  assign btn_size = b.size | default: 'md'
                  assign pad_y = 12
                  assign pad_x = 20
                  if btn_size == 'sm'
                    assign pad_y = 10
                    assign pad_x = 16
                  elsif btn_size == 'lg'
                    assign pad_y = 14
                    assign pad_x = 24
                  endif
                %}
                <a href="{{ b.link | default: '/' }}"
                  {% if b.new_tab %}target="_blank" rel="noopener"{% endif %}
                  aria-label="{{ b.aria_label | default: b.label | escape }}"
                  class="q-btn"
                  style="
                    --btn-text: {{ btn_text }};
                    --btn-bg: {{ btn_bg }};
                    --btn-border: {{ btn_border }};
                    --btn-bw: {{ bw }}px;
                    --btn-radius: {{ radius_px }}px;
                    --btn-px: {{ pad_x }}px; --btn-py: {{ pad_y }}px;
                  "
                  {{ block.shopify_attributes }}>
                  {% if b.icon != blank and b.icon != 'none' %}<span aria-hidden="true">{{ b.icon }}</span>{% endif %}
                  <span>{% if t.buttons_uppercase %}{{ b.label | upcase }}{% else %}{{ b.label }}{% endif %}</span>
                </a>
              {% endif %}
            {% endfor %}
          </div>
        {% endif %}
      </div>
    </div>
  </div>

  {% if s.show_breadcrumb %}
  <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "BreadcrumbList",
      "itemListElement": [
        { "@type": "ListItem", "position": 1, "name": {{ s.home_label | default: 'Home' | json }}, "item": {{ routes.root_url | json }} }
        {% if template contains 'product' %}
          {% assign pos = 2 %}
          {% if collection %}
            ,{ "@type": "ListItem", "position": {{ pos }}, "name": {{ collection.title | json }}, "item": {{ collection.url | json }} }
            {% assign pos = pos | plus: 1 %}
          {% endif %}
          ,{ "@type": "ListItem", "position": {{ pos }}, "name": {{ product.title | json }} }
        {% elsif template contains 'collection' %}
          ,{ "@type": "ListItem", "position": 2, "name": {{ collection.title | json }} }
        {% elsif template contains 'blog' and article %}
          ,{ "@type": "ListItem", "position": 2, "name": {{ blog.title | json }}, "item": {{ blog.url | json }} }
          ,{ "@type": "ListItem", "position": 3, "name": {{ article.title | json }} }
        {% elsif template contains 'blog' %}
          ,{ "@type": "ListItem", "position": 2, "name": {{ blog.title | json }} }
        {% elsif template contains 'page' %}
          ,{ "@type": "ListItem", "position": 2, "name": {{ page.title | json }} }
        {% elsif template contains 'cart' %}
          ,{ "@type": "ListItem", "position": 2, "name": {{ 'cart.general.title' | t | json }} }
        {% elsif template contains 'search' %}
          ,{ "@type": "ListItem", "position": 2, "name": {{ 'general.search.title' | t | json }} }
        {% endif %}
      ]
    }
  </script>
  {% endif %}
</section>

<style>
  #{{ anchor_id }} * { box-sizing: border-box; }

  /* Section background (applies in both modes) */
  #{{ anchor_id }} .q-wrap{
    background: color-mix(in srgb, var(--sec-bg, #ffffff) calc(var(--sec-bg-o, 0) * 100%), transparent);
  }

  /* MEDIA MODE (background image) */
  #{{ anchor_id }}:not(.is-plain) .q-wrap{
    position: relative;
    min-height: var(--q-min-h, 40vh);
  }
  @media (max-width:767.98px){
    #{{ anchor_id }}:not(.is-plain) .q-wrap{ min-height: var(--q-min-h-m, 36vh); }
  }
  #{{ anchor_id }}:not(.is-plain) .q-media{ position:absolute; inset:0; pointer-events:none; overflow:hidden; }
  #{{ anchor_id }}:not(.is-plain) .q-media-el{
    position:absolute; inset:0; width:100%; height:100%; object-fit:cover; display:block;
    filter: {{ media_filter }};
  }
  #{{ anchor_id }}:not(.is-plain) .q-overlay,
  #{{ anchor_id }}:not(.is-plain) .q-gradient{ position:absolute; inset:0; pointer-events:none; }
  #{{ anchor_id }}:not(.is-plain) .q-overlay{ background-color: var(--ov, #000); opacity: var(--ov-o, 0); }
  #{{ anchor_id }}:not(.is-plain) .q-gradient{
    background-image:
      linear-gradient(var(--g-a, 135deg),
        color-mix(in srgb, var(--g-s, #000) calc(var(--g-so, 0) * 100%), transparent) 0%,
        color-mix(in srgb, var(--g-e, #000) calc(var(--g-eo, 0) * 100%), transparent) 100%);
  }
  #{{ anchor_id }}:not(.is-plain) .q-content{
    position:relative; z-index:1; width:100%;
    min-height: inherit;
    display:grid; place-items:center;
    padding-left: 20px; padding-right: 20px;
  }
  #{{ anchor_id }}:not(.is-plain) .q-inner{
    width:100%; max-width: {{ max_w_px }};
    margin-left:auto; margin-right:auto; /* center the block */
    background: {{ s.panel_bg_color | default: 'rgba(255,255,255,0.10)' }};
    border: 1px solid {{ s.panel_border_color | default: 'rgba(255,255,255,0.22)' }};
    border-radius: {{ s.panel_radius | default: 12 }}px;
    backdrop-filter: blur({{ s.panel_backdrop_blur | default: 4 }}px);
    -webkit-backdrop-filter: blur({{ s.panel_backdrop_blur | default: 4 }}px);
    padding: clamp(14px, 4.5vw, 28px);
    box-shadow: 0 10px 26px rgba(0,0,0,.09);
    text-align: inherit;
  }

  /* PLAIN MODE (no image) */
  #{{ anchor_id }}.is-plain .q-wrap{
    position: relative;
    min-height: auto;
    padding-top: var(--pad-y-d, 48px);
    padding-bottom: var(--pad-y-d, 48px);
  }
  @media (max-width:767.98px){
    #{{ anchor_id }}.is-plain .q-wrap{
      padding-top: var(--pad-y-m, 32px);
      padding-bottom: var(--pad-y-m, 32px);
    }
  }
  #{{ anchor_id }}.is-plain .q-content{
    position: relative; z-index: 1; width: 100%;
    display: block; padding-left: 20px; padding-right: 20px;
  }
  #{{ anchor_id }}.is-plain .q-inner{
    width: 100%; max-width: {{ max_w_px }};
    margin-left:auto; margin-right:auto; /* center the block */
    background: transparent; border: none; box-shadow: none;
    backdrop-filter: none; -webkit-backdrop-filter: none;
    padding: 0; text-align: inherit;
  }

  /* Shared */
  #{{ anchor_id }} .q-breadcrumb{ display:flex; width:100%; } /* enable centering container */
  #{{ anchor_id }} .q-crumbs{
    margin-left:auto; margin-right:auto; /* center the list block */
    margin-top:0; margin-bottom:0; padding:0; list-style:none;
    display:flex; flex-wrap:wrap; gap:6px; align-items:center;
    justify-content: var(--crumb-justify, center); /* left/center/right via setting */
    color: var(--crumb);
    font-size: 0.875rem; line-height: 1.2;
  }
  #{{ anchor_id }} .q-crumb{ display:flex; align-items:center; gap:6px; }
  #{{ anchor_id }} .q-crumb + .q-crumb::before{
    content: "{{ s.separator | default: '/' }}";
    opacity:.6;
  }
  #{{ anchor_id }} .q-crumb-link{ color: var(--crumb); text-decoration:none; }
  #{{ anchor_id }} .q-crumb-link:hover{ text-decoration: underline; }
  #{{ anchor_id }} .q-crumb-current{ color: var(--crumb-active); }

  #{{ anchor_id }} .q-heading { color: var(--d-heading); }
  #{{ anchor_id }} .q-sub     { color: var(--d-sub); }

  #{{ anchor_id }} .q-btns{ display:flex; flex-wrap:wrap; gap:12px; margin-top:8px; justify-content: var(--cta-justify, flex-start); }
  #{{ anchor_id }} .q-btn{
    display:inline-flex; align-items:center; gap:8px; font-weight:600; text-decoration:none;
    color: var(--btn-text) !important; background-color: var(--btn-bg) !important;
    border: var(--btn-bw, 1px) solid var(--btn-border) !important;
    border-radius: var(--btn-radius, 12px);
    padding-left: var(--btn-px); padding-right: var(--btn-px);
    padding-top: var(--btn-py); padding-bottom: var(--btn-py);
    transition: transform .15s ease, opacity .15s ease;
  }
  #{{ anchor_id }} .q-btn:focus-visible{ outline:2px solid rgba(0,0,0,.35); outline-offset:2px; }
  #{{ anchor_id }} .q-btn:hover{ transform: translateY(-1px); opacity: {{ t.button_hover_opacity | default: 92 }}%; }
  #{{ anchor_id }} .q-btn:active{ transform: scale({{ t.button_active_scale | default: 98 | divided_by: 100.0 }}); }
</style>

{% schema %}
{
  "name": "Sub Banner — Breadcrumb",
  "tag": "section",
  "class": "q-sub-banner-breadcrumb",
  "settings": [
    { "type": "text", "id": "anchor_id", "label": "Anchor ID", "default": "auto" },
    { "type": "text", "id": "region_label", "label": "Accessible region label", "default": "Breadcrumb banner" },

    { "type": "header", "content": "Layout" },
    { "type": "select", "id": "layout_style", "label": "Layout style", "default": "media", "options": [
      { "value": "media", "label": "Background (image/gradient)" },
      { "value": "plain", "label": "Plain (no background image)" }
    ]},

    { "type": "header", "content": "Media (Background mode)" },
    { "type": "image_picker", "id": "image", "label": "Background image" },
    { "type": "text", "id": "image_alt", "label": "Image alt", "default": "Breadcrumb banner image" },

    { "type": "header", "content": "Overlay (Background mode)" },
    { "type": "select", "id": "overlay_mode", "label": "Overlay type", "default": "gradient", "options": [
      { "value": "none", "label": "None" },
      { "value": "solid", "label": "Solid color" },
      { "value": "gradient", "label": "Gradient" }
    ]},
    { "type": "color", "id": "overlay_color", "label": "Solid color", "default": "#000000" },
    { "type": "range", "id": "overlay_opacity", "label": "Solid opacity (%)", "min": 0, "max": 100, "step": 2, "default": 0 },

    { "type": "color", "id": "grad_start", "label": "Gradient start", "default": "#000000" },
    { "type": "range", "id": "grad_start_opacity", "label": "Start opacity (%)", "min": 0, "max": 100, "step": 2, "default": 28 },
    { "type": "color", "id": "grad_end", "label": "Gradient end", "default": "#000000" },
    { "type": "range", "id": "grad_end_opacity", "label": "End opacity (%)", "min": 0, "max": 100, "step": 2, "default": 0 },
    { "type": "range", "id": "grad_angle", "label": "Gradient angle (°)", "min": 0, "max": 360, "step": 5, "default": 135 },

    { "type": "header", "content": "Layout & sizing (Background mode)" },
    { "type": "range", "id": "min_height_vh", "label": "Min height (vh, desktop)", "min": 28, "max": 80, "step": 1, "default": 40 },
    { "type": "range", "id": "min_height_vh_mobile", "label": "Min height (vh, mobile)", "min": 28, "max": 80, "step": 1, "default": 36 },

    { "type": "header", "content": "Layout & spacing (Plain mode)" },
    { "type": "range", "id": "plain_pad_y_desktop", "label": "Vertical padding (desktop, px)", "min": 0, "max": 200, "step": 2, "default": 48 },
    { "type": "range", "id": "plain_pad_y_mobile", "label": "Vertical padding (mobile, px)", "min": 0, "max": 200, "step": 2, "default": 32 },

    { "type": "header", "content": "Section background" },
    { "type": "color", "id": "section_bg_color", "label": "Background color", "default": "#ffffff" },
    { "type": "range", "id": "section_bg_opacity", "label": "Background opacity (%)", "min": 0, "max": 100, "step": 2, "default": 0 },

    { "type": "header", "content": "Width & alignment" },
    { "type": "select", "id": "content_max_w", "label": "Content width", "default": "max-w-5xl", "options": [
      { "value": "max-w-2xl", "label": "Narrow" },
      { "value": "max-w-3xl", "label": "Comfort" },
      { "value": "max-w-4xl", "label": "Wide" },
      { "value": "max-w-5xl", "label": "Wider" },
      { "value": "max-w-6xl", "label": "Max (~1200px)" }
    ]},
    { "type": "select", "id": "text_alignment", "label": "Text alignment", "default": "left", "options": [
      { "value": "left", "label": "Left" }, { "value": "center", "label": "Center" }, { "value": "right", "label": "Right" }
    ]},

    { "type": "header", "content": "Breadcrumb" },
    { "type": "checkbox", "id": "show_breadcrumb", "label": "Show breadcrumb", "default": true },
    { "type": "text", "id": "home_label", "label": "Home label", "default": "Home" },
    { "type": "text", "id": "separator", "label": "Separator symbol", "default": "/" },
    { "type": "color", "id": "crumb_color", "label": "Crumb color", "default": "#9ca3af" },
    { "type": "color", "id": "crumb_active_color", "label": "Active crumb color", "default": "#111827" },

    { "type": "header", "content": "Heading & copy" },
    { "type": "checkbox", "id": "show_heading", "label": "Show page title", "default": true },
    { "type": "text", "id": "heading", "label": "Heading (optional)", "default": "Page title" },
    { "type": "checkbox", "id": "heading_uppercase", "label": "Force uppercase (uses theme’s heading setting)", "default": false },
    { "type": "select", "id": "heading_level", "label": "Heading level", "default": "h2", "options": [
      { "value": "h1", "label": "H1" }, { "value": "h2", "label": "H2" }
    ]},
    { "type": "select", "id": "heading_size", "label": "Heading size", "default": "theme", "options": [
      { "value": "theme", "label": "Use Theme size" },
      { "value": "2xl", "label": "2XL" }, { "value": "3xl", "label": "3XL" }, { "value": "4xl", "label": "4XL" }
    ]},
    { "type": "textarea", "id": "subheading", "label": "Subheading", "default": "Subheading text goes here" },
    { "type": "color", "id": "heading_color", "label": "Heading color", "default": "#111827" },
    { "type": "color", "id": "subheading_color", "label": "Subheading color", "default": "#374151" },

    { "type": "header", "content": "Header overlap (Background mode)" },
    { "type": "checkbox", "id": "enable_overlap", "label": "Enable safe header overlap (manual offset)", "default": false },
    { "type": "range", "id": "safe_offset_px", "label": "Header safe offset (px)", "min": 0, "max": 200, "step": 2, "default": 0 },

    { "type": "header", "content": "Mode" },
    { "type": "checkbox", "id": "simple_mode", "label": "Simple mode (reduce image filters)", "default": true }
  ],
  "blocks": [
    {
      "type": "button",
      "name": "Button",
      "limit": 2,
      "settings": [
        { "type": "text", "id": "label", "label": "Label", "default": "Learn more" },
        { "type": "url",  "id": "link",  "label": "Link",  "default": "/" },
        { "type": "text", "id": "aria_label", "label": "ARIA label", "default": "Learn more" },

        { "type": "select", "id": "size", "label": "Size", "default": "md", "options": [
          { "value": "sm", "label": "Small" }, { "value": "md", "label": "Medium" }, { "value": "lg", "label": "Large" }
        ]},
        { "type": "checkbox", "id": "new_tab", "label": "Open in new tab", "default": false },

        { "type": "select", "id": "button_mode", "label": "Style", "options": [
          { "value": "solid", "label": "Solid" },
          { "value": "outline", "label": "Outline" },
          { "value": "ghost", "label": "Ghost" }
        ], "default": "solid" },

        { "type": "header", "content": "Color overrides (optional)" },
        { "type": "checkbox", "id": "use_theme_colors", "label": "Use Theme colors", "default": true },
        { "type": "color", "id": "bg_color", "label": "Background (solid)", "default": "#2563eb" },
        { "type": "color", "id": "text_color", "label": "Text color", "default": "#ffffff" },
        { "type": "color", "id": "border_color", "label": "Border color", "default": "#2563eb" },

        { "type": "text", "id": "icon", "label": "Icon (SVG/HTML)", "default": "none" },

        { "type": "range", "id": "border_width", "label": "Border width (px)", "min": 0, "max": 8, "step": 1, "default": 1 },
        { "type": "range", "id": "radius", "label": "Radius (px)", "min": 0, "max": 50, "step": 1, "default": 12 }
      ]
    }
  ],
  "max_blocks": 2,
  "presets": [
    {
      "name": "Sub Page Banner — Breadcrumb (Background)",
      "category": "Sub Page Banners",
      "settings": {
        "layout_style": "media",
        "show_breadcrumb": true,
        "grad_start_opacity": 28,
        "grad_end_opacity": 0,
        "text_alignment": "left",
        "min_height_vh": 40,
        "min_height_vh_mobile": 36,
        "heading": "Page title",
        "subheading": "Subheading text goes here"
      },
      "blocks": [{ "type": "button" }]
    },
    {
      "name": "Sub Page Banner — Breadcrumb (Plain)",
      "category": "Sub Page Banners",
      "settings": {
        "layout_style": "plain",
        "show_breadcrumb": true,
        "text_alignment": "left",
        "content_max_w": "max-w-5xl",
        "plain_pad_y_desktop": 48,
        "plain_pad_y_mobile": 32,
        "heading": "Page title",
        "subheading": "Subheading text goes here",
        "section_bg_color": "#ffffff",
        "section_bg_opacity": 0
      },
      "blocks": [{ "type": "button" }]
    }
  ]
}
{% endschema %}
