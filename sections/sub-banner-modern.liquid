{% comment %}
  Quadratum • Sub Page Banner — Modern (Strict Center Option)
  File: sections/sub-banner-modern.liquid

  - Minimal, centered content with optional image + solid/gradient overlay.
  - Background/overlays are inert; CTAs stay clickable.
  - No JS; safe header overlap via CSS var.
  - Two CTAs max; schema-safe defaults; valid range steps.
  - Added: strict_center_mode (removes +40px buffer) & center_nudge_px (fine-tune vertical centering).
{% endcomment %}

{% liquid
  assign s = section.settings
  assign t = settings

  # ---- Anchor (non-empty) ----
  assign anchor_raw = s.anchor_id | default: 'auto'
  assign anchor_id = anchor_raw
  if anchor_raw == 'auto'
    assign anchor_id = section.id
  endif

  # ---- Min-height tokens ----
  assign min_h_vh = s.min_height_vh | default: 60
  assign min_h_mobile_vh = s.min_height_vh_mobile | default: 52

  # ---- Text alignment + CTA justification ----
  assign text_align_value = 'center'
%}
{% case s.text_alignment %}
  {% when 'left'  %}{% assign text_align_value = 'left'  %}
  {% when 'right' %}{% assign text_align_value = 'right' %}
  {% else %}{% assign text_align_value = 'center' %}
{% endcase %}
{% liquid assign cta_justify_css = 'center' %}
{% case text_align_value %}
  {% when 'left'  %}{% assign cta_justify_css = 'flex-start' %}
  {% when 'right' %}{% assign cta_justify_css = 'flex-end' %}
  {% else %}{% assign cta_justify_css = 'center' %}
{% endcase %}

{% liquid
  # ---- Visibility toggles ----
  assign visibility_classes = ''
  if s.hide_on_mobile
    assign visibility_classes = visibility_classes | append: ' hidden md:block'
  endif
  if s.hide_on_desktop
    assign visibility_classes = visibility_classes | append: ' md:hidden'
  endif

  # ---- Content width cap ----
  assign max_w_token = s.content_max_w | default: 'max-w-3xl'
  assign max_w_px = '768px'
%}
{% case max_w_token %}
  {% when 'max-w-2xl' %}{% assign max_w_px = '672px' %}
  {% when 'max-w-3xl' %}{% assign max_w_px = '768px' %}
  {% when 'max-w-4xl' %}{% assign max_w_px = '896px' %}
{% endcase %}

{% liquid
  # ---- Typography (theme-aware) ----
  assign heading_level = s.heading_level | default: 'h2'
  assign heading_fs = '1.875rem'
  if s.heading_size == '2xl'
    assign heading_fs = '1.5rem'
  elsif s.heading_size == '3xl'
    assign heading_fs = '1.875rem'
  elsif s.heading_size == '4xl'
    assign heading_fs = '2.25rem'
  else
    if heading_level == 'h1'
      assign heading_fs = t.type_h1_size | default: 240
    else
      assign heading_fs = t.type_h2_size | default: 200
    endif
    assign heading_fs = heading_fs | divided_by: 100.0 | append: 'rem'
  endif

  assign sub_fs = '1rem'
  if s.subheading_size == 'lg'
    assign sub_fs = '1.125rem'
  elsif s.subheading_size == 'xl'
    assign sub_fs = '1.25rem'
  endif

  assign head_ls = t.headings_letterspacing | default: 0
  assign head_ls_em = head_ls | divided_by: 1000.0 | append: 'em'

  # ---- Colors ----
  assign col_heading = s.heading_color | default: t.text_base
  assign col_sub     = s.subheading_color | default: t.text_muted

  # ---- Media filter for simple mode ----
  assign media_filter = 'saturate(1.05) contrast(1.02)'
  if s.simple_mode
    assign media_filter = 'none'
  endif

  # ---- Strict center + nudge ----
  assign nudge_px = s.center_nudge_px | default: 0
%}

<section id="{{ anchor_id }}"
         class="q-sub-banner-modern{{ visibility_classes }}{% if s.enable_overlap %} q-overlap{% endif %}"
         role="region"
         aria-label="{{ s.region_label | default: 'Sub page banner (modern)' }}"
         style="
           --q-min-h: {{ min_h_vh }}vh;
           --q-min-h-m: {{ min_h_mobile_vh }}vh;
           --q-safe-offset: {{ s.safe_offset_px | default: 0 }}px;

           --cta-justify: {{ cta_justify_css }};
           --d-heading: {{ col_heading }};
           --d-sub: {{ col_sub }};

           --glass-bg: {{ s.panel_bg_color | default: 'rgba(255,255,255,0.14)' }};
           --glass-br: {{ s.panel_border_color | default: 'rgba(255,255,255,0.28)' }};
           --glass-blur: {{ s.panel_backdrop_blur | default: 8 }}px;
           --glass-radius: {{ s.panel_radius | default: 16 }}px;
         ">

  <div class="q-wrap">
    <!-- Media background (inert) -->
    <div class="q-media" aria-hidden="true">
      {% if s.image != blank %}
        {{ s.image
          | image_url: width: 2560
          | image_tag:
            widths: '960,1280,1536,1920,2560',
            sizes: '100vw',
            loading: 'lazy',
            fetchpriority: 'low',
            class: 'q-media-el',
            alt: s.image_alt | default: 'Modern sub banner image' }}
      {% endif %}

      {% if s.overlay_mode == 'solid' %}
        <span class="q-overlay"
              style="--ov: {{ s.overlay_color | default: '#000000' }}; --ov-o: {{ s.overlay_opacity | default: 0 | divided_by: 100.0 }}"></span>
      {% elsif s.overlay_mode == 'gradient' %}
        <span class="q-gradient"
              style="
                --g-a: {{ s.grad_angle | default: 135 }}deg;
                --g-s: {{ s.grad_start | default: '#000000' }};
                --g-so: {{ s.grad_start_opacity | default: 0 | divided_by: 100.0 }};
                --g-e: {{ s.grad_end | default: '#000000' }};
                --g-eo: {{ s.grad_end_opacity | default: 0 | divided_by: 100.0 }};
              "></span>
      {% endif %}
    </div>

    <!-- Content layer -->
    <div class="q-content" style="text-align: {{ text_align_value }}; transform: translateY({{ nudge_px }}px);">
      <div class="q-inner" style="max-width: {{ max_w_px }};">
        {% if s.kicker != blank %}
          <p class="q-kicker"
             style="margin:0 0 6px 0; font-size:.875rem; line-height:1.2; font-weight:600; letter-spacing: {{ head_ls_em }};">
            {{ s.kicker }}
          </p>
        {% endif %}

        {% if s.heading != blank %}
          {% case heading_level %}
            {% when 'h1' %}
              <h1 class="q-heading"
                  style="margin:0 0 10px 0; font-size: {{ heading_fs }}; line-height:1.12; font-weight:700; letter-spacing: {{ head_ls_em }}; {% if t.headings_uppercase %}text-transform:uppercase;{% endif %}; color: var(--d-heading);">
                {{ s.heading }}
              </h1>
            {% else %}
              <h2 class="q-heading"
                  style="margin:0 0 10px 0; font-size: {{ heading_fs }}; line-height:1.12; font-weight:700; letter-spacing: {{ head_ls_em }}; {% if t.headings_uppercase %}text-transform:uppercase;{% endif %}; color: var(--d-heading);">
                {{ s.heading }}
              </h2>
          {% endcase %}
        {% endif %}

        {% if s.subheading != blank %}
          <p id="modern-desc-{{ section.id }}" class="q-sub" style="margin:0 0 16px 0; font-size: {{ sub_fs }}; line-height:1.6; color: var(--d-sub);">
            {{ s.subheading }}
          </p>
        {% endif %}

        {% if section.blocks.size > 0 %}
          <div class="q-btns" {% if s.subheading != blank %}aria-describedby="modern-desc-{{ section.id }}"{% endif %}>
            {% for block in section.blocks %}
              {% if block.type == 'button' %}
                {% assign b = block.settings %}
                {% liquid
                  assign variant = b.button_mode | default: t.button_variant_default | default: 'solid'

                  assign btn_text = t.text_on_color
                  assign btn_bg = t.color_primary
                  assign btn_border = t.color_primary

                  if variant == 'outline'
                    assign btn_text = t.color_primary
                    assign btn_bg = 'transparent'
                    assign btn_border = t.color_primary
                  elsif variant == 'ghost'
                    assign btn_text = t.color_primary
                    assign btn_bg = 'transparent'
                    assign btn_border = 'transparent'
                  endif

                  assign bw = b.border_width | default: t.button_border_width | default: 1
                  assign radius_px = b.radius | default: t.button_radius | default: 12

                  if b.use_theme_colors == false
                    if b.text_color != blank
                      assign btn_text = b.text_color
                    endif
                    if b.bg_color != blank
                      assign btn_bg = b.bg_color
                    endif
                    if b.border_color != blank
                      assign btn_border = b.border_color
                    endif
                  endif

                  assign btn_size = b.size | default: 'md'
                  assign pad_y = 12
                  assign pad_x = 20
                  if btn_size == 'sm'
                    assign pad_y = 10
                    assign pad_x = 16
                  elsif btn_size == 'lg'
                    assign pad_y = 14
                    assign pad_x = 24
                  endif
                %}
                <a href="{{ b.link | default: '/' }}"
                   {% if b.new_tab %}target="_blank" rel="noopener"{% endif %}
                   aria-label="{{ b.aria_label | default: b.label | escape }}"
                   class="q-btn"
                   style="
                     --btn-text: {{ btn_text }};
                     --btn-bg: {{ btn_bg }};
                     --btn-border: {{ btn_border }};
                     --btn-bw: {{ bw }}px;
                     --btn-radius: {{ radius_px }}px;
                     --btn-px: {{ pad_x }}px; --btn-py: {{ pad_y }}px;
                   "
                   {{ block.shopify_attributes }}>
                  {% if b.icon != blank and b.icon != 'none' %}
                    <span aria-hidden="true">{{ b.icon }}</span>
                  {% endif %}
                  <span>{% if t.buttons_uppercase %}{{ b.label | upcase }}{% else %}{{ b.label }}{% endif %}</span>
                </a>
              {% endif %}
            {% endfor %}
          </div>
        {% endif %}
      </div>
    </div>
  </div>
</section>

<style>
  /* Scope */
  #{{ anchor_id }} * { box-sizing: border-box; }
  #{{ anchor_id }}.q-overlap {
    margin-top: calc(var(--q-safe-offset, 0px) * -1);
    padding-top: var(--q-safe-offset, 0px);
  }

  /* Wrapper establishes min-height */
  #{{ anchor_id }} .q-wrap{
    position: relative;
    min-height:
      {% if s.strict_center_mode %}
        var(--q-min-h, 60vh)
      {% else %}
        calc(var(--q-min-h, 60vh) + 40px)
      {% endif %};
  }
  @media (max-width:767.98px){
    #{{ anchor_id }} .q-wrap{
      min-height:
        {% if s.strict_center_mode %}
          var(--q-min-h-m, 52vh)
        {% else %}
          calc(var(--q-min-h-m, 52vh) + 40px)
        {% endif %};
    }
  }

  /* Media layer (inert) */
  #{{ anchor_id }} .q-media{
    position:absolute; inset:0; pointer-events:none; overflow:hidden;
  }
  #{{ anchor_id }} .q-media-el{
    position:absolute; inset:0; width:100%; height:100%; object-fit:cover; display:block;
    filter: {{ media_filter }};
  }
  #{{ anchor_id }} .q-overlay,
  #{{ anchor_id }} .q-gradient{
    position:absolute; inset:0; pointer-events:none;
  }
  #{{ anchor_id }} .q-overlay{
    background-color: var(--ov, #000);
    opacity: var(--ov-o, 0);
  }
  #{{ anchor_id }} .q-gradient{
    background-image:
      linear-gradient(var(--g-a, 135deg),
        color-mix(in srgb, var(--g-s, #000) calc(var(--g-so, 0) * 100%), transparent) 0%,
        color-mix(in srgb, var(--g-e, #000) calc(var(--g-eo, 0) * 100%), transparent) 100%);
  }

  /* Content layer (glass card) */
  #{{ anchor_id }} .q-content{
    position:relative; z-index:1; width:100%; min-height: inherit;
    display:grid; place-items:center;
    padding-left: 20px; padding-right: 20px;
  }
  #{{ anchor_id }} .q-inner{
    width:100%;
    max-width: {{ max_w_px }};
    background: var(--glass-bg);
    border: 1px solid var(--glass-br);
    border-radius: var(--glass-radius);
    backdrop-filter: blur(var(--glass-blur));
    -webkit-backdrop-filter: blur(var(--glass-blur));
    padding: clamp(16px, 5vw, 36px);
    box-shadow: 0 10px 30px rgba(0,0,0,.08);
    text-align: inherit;
  }

  #{{ anchor_id }} .q-kicker  { color: {{ s.kicker_color | default: t.text_muted }}; opacity:.96; }
  #{{ anchor_id }} .q-heading { color: var(--d-heading); }
  #{{ anchor_id }} .q-sub     { color: var(--d-sub); }

  /* CTAs */
  #{{ anchor_id }} .q-btns{
    margin-top: 10px;
    display:flex; flex-wrap:wrap; gap:12px;
    justify-content: var(--cta-justify, center);
  }
  #{{ anchor_id }} .q-btn{
    display:inline-flex; align-items:center; gap:8px;
    font-weight:600; text-decoration:none;
    color: var(--btn-text) !important;
    background-color: var(--btn-bg) !important;
    border: var(--btn-bw, 1px) solid var(--btn-border) !important;
    border-radius: var(--btn-radius, 12px);
    padding-left: var(--btn-px); padding-right: var(--btn-px);
    padding-top: var(--btn-py);  padding-bottom: var(--btn-py);
    transition: transform .15s ease, opacity .15s ease;
    will-change: transform;
  }
  #{{ anchor_id }} .q-btn:focus-visible{ outline:2px solid rgba(0,0,0,.35); outline-offset:2px; }
  #{{ anchor_id }} .q-btn:hover{ transform: translateY(-1px); opacity: {{ t.button_hover_opacity | default: 92 }}%; }
  #{{ anchor_id }} .q-btn:active{ transform: scale({{ t.button_active_scale | default: 98 | divided_by: 100.0 }}); }

  /* Visibility helpers */
  {% if s.hide_on_mobile %}#{{ anchor_id }} { display:none; } @media(min-width:768px){ #{{ anchor_id }}{ display:block; } }{% endif %}
  {% if s.hide_on_desktop %}@media(min-width:768px){ #{{ anchor_id }}{ display:none; } }{% endif %}
</style>

{% schema %}
{
  "name": "Sub Page Banner — Modern",
  "tag": "section",
  "class": "q-sub-banner-modern",
  "settings": [
    { "type": "text",  "id": "anchor_id",     "label": "Anchor ID",                 "default": "auto" },
    { "type": "text",  "id": "region_label",  "label": "Accessible region label",   "default": "Sub page banner (modern)" },

    { "type": "header", "content": "Media" },
    { "type": "image_picker", "id": "image", "label": "Background image" },
    { "type": "text",  "id": "image_alt",    "label": "Image alt",                  "default": "Modern sub banner image" },

    { "type": "header", "content": "Overlay" },
    { "type": "select", "id": "overlay_mode", "label": "Overlay type", "default": "none", "options": [
      { "value": "none",     "label": "None" },
      { "value": "solid",    "label": "Solid color" },
      { "value": "gradient", "label": "Gradient" }
    ]},
    { "type": "color",  "id": "overlay_color",        "label": "Solid color",        "default": "#000000" },
    { "type": "range",  "id": "overlay_opacity",      "label": "Solid opacity (%)",  "min": 0, "max": 100, "step": 2, "default": 0 },

    { "type": "color",  "id": "grad_start",           "label": "Gradient start",     "default": "#000000" },
    { "type": "range",  "id": "grad_start_opacity",   "label": "Start opacity (%)",  "min": 0, "max": 100, "step": 2, "default": 0 },
    { "type": "color",  "id": "grad_end",             "label": "Gradient end",       "default": "#000000" },
    { "type": "range",  "id": "grad_end_opacity",     "label": "End opacity (%)",    "min": 0, "max": 100, "step": 2, "default": 0 },
    { "type": "range",  "id": "grad_angle",           "label": "Gradient angle (°)", "min": 0, "max": 360, "step": 5, "default": 135 },

    { "type": "header", "content": "Layout & spacing" },
    { "type": "range",  "id": "min_height_vh",        "label": "Min height (vh, desktop)", "min": 30, "max": 100, "step": 1, "default": 60 },
    { "type": "range",  "id": "min_height_vh_mobile", "label": "Min height (vh, mobile)",  "min": 30, "max": 100, "step": 1, "default": 52 },

    { "type": "select", "id": "content_max_w",        "label": "Content width", "default": "max-w-3xl", "options": [
      { "value": "max-w-2xl", "label": "Narrow" },
      { "value": "max-w-3xl", "label": "Comfort" },
      { "value": "max-w-4xl", "label": "Wide" }
    ]},

    { "type": "header", "content": "Content" },
    { "type": "text",   "id": "kicker",         "label": "Kicker (optional)", "default": "Featured" },
    { "type": "color",  "id": "kicker_color",   "label": "Kicker color", "default": "#6b7280" },

    { "type": "text",   "id": "heading",        "label": "Heading", "default": "Modern sub-page banner" },
    { "type": "select", "id": "heading_level",  "label": "Heading level", "default": "h2", "options": [
      { "value": "h1", "label": "H1" }, { "value": "h2", "label": "H2" }
    ]},
    { "type": "select", "id": "heading_size",   "label": "Heading size", "default": "theme", "options": [
      { "value": "theme", "label": "Use Theme size" },
      { "value": "2xl",   "label": "2XL" },
      { "value": "3xl",   "label": "3XL" },
      { "value": "4xl",   "label": "4XL" }
    ]},
    { "type": "textarea", "id": "subheading",   "label": "Subheading", "default": "A clean, modern banner for interior pages with glass card content." },
    { "type": "color",    "id": "heading_color","label": "Heading color", "default": "#111827" },
    { "type": "color",    "id": "subheading_color", "label": "Subheading color", "default": "#374151" },

    { "type": "header", "content": "Glass panel (content card)" },
    { "type": "color",    "id": "panel_bg_color",   "label": "Panel background (rgba recommended)", "default": "rgba(255,255,255,0.14)" },
    { "type": "color",    "id": "panel_border_color","label": "Panel border color", "default": "rgba(255,255,255,0.28)" },
    { "type": "range",    "id": "panel_backdrop_blur","label": "Panel backdrop blur (px)", "min": 0, "max": 40, "step": 1, "default": 8 },
    { "type": "range",    "id": "panel_radius",     "label": "Panel radius (px)", "min": 0, "max": 48, "step": 1, "default": 16 },

    { "type": "header", "content": "Alignment & visibility" },
    { "type": "select", "id": "text_alignment", "label": "Text alignment", "default": "center", "options": [
      { "value": "left", "label": "Left" }, { "value": "center", "label": "Center" }, { "value": "right", "label": "Right" }
    ]},
    { "type": "checkbox", "id": "hide_on_mobile",  "label": "Hide on mobile",  "default": false },
    { "type": "checkbox", "id": "hide_on_desktop", "label": "Hide on desktop", "default": false },

    { "type": "header", "content": "Header overlap (manual)" },
    { "type": "checkbox", "id": "enable_overlap", "label": "Enable safe header overlap (manual offset)", "default": false },
    { "type": "range",    "id": "safe_offset_px","label": "Header safe offset (px)", "min": 0, "max": 200, "step": 2, "default": 0 },

    { "type": "header", "content": "Centering controls" },
    { "type": "checkbox", "id": "strict_center_mode", "label": "Strict center (remove extra buffer)", "default": false },
    { "type": "range",    "id": "center_nudge_px",    "label": "Center nudge (px)", "min": -80, "max": 80, "step": 2, "default": 0 },

    { "type": "header", "content": "Mode" },
    { "type": "checkbox", "id": "simple_mode", "label": "Simple mode (reduce image filters)", "default": true }
  ],
  "blocks": [
    {
      "type": "button",
      "name": "Button",
      "limit": 2,
      "settings": [
        { "type": "text", "id": "label", "label": "Label", "default": "Learn more" },
        { "type": "url",  "id": "link",  "label": "Link",  "default": "/" },
        { "type": "text", "id": "aria_label", "label": "ARIA label", "default": "Learn more" },

        { "type": "select", "id": "size", "label": "Size", "default": "md", "options": [
          { "value": "sm", "label": "Small" }, { "value": "md", "label": "Medium" }, { "value": "lg", "label": "Large" }
        ]},
        { "type": "checkbox", "id": "new_tab", "label": "Open in new tab", "default": false },

        { "type": "select", "id": "button_mode", "label": "Style", "options": [
          { "value": "solid", "label": "Solid" },
          { "value": "outline", "label": "Outline" },
          { "value": "ghost", "label": "Ghost" }
        ], "default": "solid" },

        { "type": "header", "content": "Color overrides (optional)" },
        { "type": "checkbox", "id": "use_theme_colors", "label": "Use Theme colors", "default": true },
        { "type": "color", "id": "bg_color",     "label": "Background (solid)", "default": "#2563eb" },
        { "type": "color", "id": "text_color",   "label": "Text color", "default": "#ffffff" },
        { "type": "color", "id": "border_color", "label": "Border color", "default": "#2563eb" },

        { "type": "text", "id": "icon", "label": "Icon (SVG/HTML)", "default": "none" },

        { "type": "range", "id": "border_width", "label": "Border width (px)", "min": 0, "max": 8,  "step": 1, "default": 1 },
        { "type": "range", "id": "radius",       "label": "Radius (px)",       "min": 0, "max": 50, "step": 1, "default": 12 }
      ]
    }
  ],
  "max_blocks": 2,
  "presets": [
    {
      "name": "Sub Page Banner — Modern",
      "category": "Sub Page Banners",
      "settings": {
        "overlay_mode": "gradient",
        "grad_start_opacity": 24,
        "grad_end_opacity": 0,
        "heading": "Modernist clarity",
        "subheading": "A glass-card intro banner for sub pages.",
        "min_height_vh": 54,
        "min_height_vh_mobile": 50,
        "text_alignment": "center"
      },
      "blocks": [{ "type": "button" }, { "type": "button" }]
    }
  ]
}
{% endschema %}
 