{% comment %}
  Quadratum • Sub Banner — Split (Transparent DNA)
  File: sections/sub-banner-split.liquid
{% endcomment %}

{% liquid
  assign s = section.settings
  assign t = settings

  assign anchor_raw = s.anchor_id | default: 'auto'
  assign anchor_id = anchor_raw
  if anchor_raw == 'auto'
    assign anchor_id = section.id
  endif

  assign dir_css = 'row'
  if s.image_position == 'right'
    assign dir_css = 'row-reverse'
  endif

  assign img_order_m = 1
  assign content_order_m = 2
  if s.mobile_image_first == false
    assign img_order_m = 2
    assign content_order_m = 1
  endif

  assign container_pad_m = 16
  assign container_pad_d = 24
  if s.container_mode == 'full'
    assign container_pad_m = 0
    assign container_pad_d = 0
  endif

  assign max_w_token = s.content_max_w | default: 'max-w-3xl'
  assign max_w_px = '768px'
%}
{% case max_w_token %}
  {% when 'max-w-2xl' %}{% assign max_w_px = '672px' %}
  {% when 'max-w-3xl' %}{% assign max_w_px = '768px' %}
  {% when 'max-w-4xl' %}{% assign max_w_px = '896px' %}
{% endcase %}

{% liquid
  assign visibility_classes = ''
  if s.hide_on_mobile
    assign visibility_classes = visibility_classes | append: ' hidden md:block'
  endif
  if s.hide_on_desktop
    assign visibility_classes = visibility_classes | append: ' md:hidden'
  endif

  assign min_h_vh = s.min_height_vh | default: 60
  assign min_h_mobile_vh = s.min_height_vh_mobile | default: 52

  assign text_align_value = 'center'
%}
{% case s.text_alignment %}
  {% when 'left' %}{% assign text_align_value = 'left' %}
  {% when 'right' %}{% assign text_align_value = 'right' %}
{% endcase %}
{% liquid
  assign cta_justify_css = 'center'
%}
{% case text_align_value %}
  {% when 'left'  %}{% assign cta_justify_css = 'flex-start' %}
  {% when 'right' %}{% assign cta_justify_css = 'flex-end' %}
  {% else %}{% assign cta_justify_css = 'center' %}
{% endcase %}

{% liquid
  assign cpy_m = 40
  assign cpy_d = 56
  assign cpx_m = 20
  assign cpx_d = 32

  assign heading_level = s.heading_level | default: 'h2'
  assign heading_fs = '1.875rem'
  if s.heading_size == '2xl'
    assign heading_fs = '1.5rem'
  elsif s.heading_size == '3xl'
    assign heading_fs = '1.875rem'
  elsif s.heading_size == '4xl'
    assign heading_fs = '2.25rem'
  else
    if heading_level == 'h1'
      assign heading_fs = t.type_h1_size | default: 240
    else
      assign heading_fs = t.type_h2_size | default: 200
    endif
    assign heading_fs = heading_fs | divided_by: 100.0 | append: 'rem'
  endif

  assign sub_fs = '1rem'
  if s.subheading_size == 'lg'
    assign sub_fs = '1.125rem'
  elsif s.subheading_size == 'xl'
    assign sub_fs = '1.25rem'
  endif

  assign head_ls = t.headings_letterspacing | default: 0
  assign head_ls_em = head_ls | divided_by: 1000.0 | append: 'em'
%}

{% liquid
  assign col_heading = s.heading_color
  if col_heading == blank
    assign col_heading = t.text_base
  endif

  assign col_sub = s.subheading_color
  if col_sub == blank
    assign col_sub = t.text_muted
  endif

  assign panel_bg = 'transparent'
  if s.panel_bg_color != blank
    assign panel_bg = s.panel_bg_color
  endif
%}

<section id="{{ anchor_id }}"
         class="q-split-sub-banner{{ visibility_classes }}{% if s.enable_overlap %} q-overlap{% endif %}"
         role="region"
         aria-label="{{ s.region_label | default: 'Split sub page banner' }}"
         style="
           --q-min-h: {{ min_h_vh }}vh;
           --q-min-h-m: {{ min_h_mobile_vh }}vh;
           --q-safe-offset: {{ s.safe_offset_px | default: 0 }}px;
           --cta-justify: {{ cta_justify_css }};
           --d-heading: {{ col_heading }};
           --d-sub: {{ col_sub }};
         ">

  <div class="q-container">
    <div class="q-row" data-dir="{{ dir_css }}">
      <div class="q-col q-img">
        <div class="q-media" aria-hidden="true">
          {% if s.image != blank %}
            {{ s.image
              | image_url: width: 2048
              | image_tag:
                widths: '640,960,1280,1536,2048',
                sizes: '(min-width: 768px) 50vw, 100vw',
                loading: 'lazy',
                fetchpriority: 'low',
                class: 'q-media-el',
                alt: s.image_alt | default: 'Split banner image' }}
          {% else %}
            <div class="q-media-el q-media-fallback"></div>
          {% endif %}

          {% if s.overlay_mode == 'solid' %}
            <span class="q-overlay"
                  style="--ov: {{ s.overlay_color | default: '#000000' }}; --ov-o: {{ s.overlay_opacity | default: 0 | divided_by: 100.0 }}"></span>
          {% elsif s.overlay_mode == 'gradient' %}
            <span class="q-gradient"
                  style="
                    --g-a: {{ s.grad_angle | default: 135 }}deg;
                    --g-s: {{ s.grad_start | default: '#000000' }};
                    --g-so: {{ s.grad_start_opacity | default: 0 | divided_by: 100.0 }};
                    --g-e: {{ s.grad_end | default: '#000000' }};
                    --g-eo: {{ s.grad_end_opacity | default: 0 | divided_by: 100.0 }};
                  "></span>
          {% endif %}
        </div>
      </div>

      <div class="q-col q-content-side">
        <div class="q-panel" style="background-color: {{ panel_bg }}; text-align: {{ text_align_value }};">
          <div class="q-inner"
               style="
                 max-width: {{ max_w_px }};
                 padding-top: {{ cpy_m }}px; padding-bottom: {{ cpy_m }}px;
                 padding-left: {{ cpx_m }}px; padding-right: {{ cpx_m }}px;
               ">

            {% if s.heading != blank %}
              {% case heading_level %}
                {% when 'h1' %}
                  <h1 class="q-heading"
                      style="margin:0 0 8px 0; font-size: {{ heading_fs }}; line-height: 1.2; font-weight:700; letter-spacing: {{ head_ls_em }}; {% if t.headings_uppercase %}text-transform:uppercase;{% endif %}; color: var(--d-heading);">
                    {{ s.heading }}
                  </h1>
                {% else %}
                  <h2 class="q-heading"
                      style="margin:0 0 8px 0; font-size: {{ heading_fs }}; line-height: 1.2; font-weight:700; letter-spacing: {{ head_ls_em }}; {% if t.headings_uppercase %}text-transform:uppercase;{% endif %}; color: var(--d-heading);">
                    {{ s.heading }}
                  </h2>
              {% endcase %}
            {% endif %}

            {% if s.subheading != blank %}
              <p id="split-desc-{{ section.id }}" class="q-sub" style="margin:0 0 16px 0; font-size: {{ sub_fs }}; line-height: 1.6; color: var(--d-sub);">
                {{ s.subheading }}
              </p>
            {% endif %}

            {% if section.blocks.size > 0 %}
              <div class="q-btns" {% if s.subheading != blank %}aria-describedby="split-desc-{{ section.id }}"{% endif %}>
                {% for block in section.blocks %}
                  {% if block.type == 'button' %}
                    {% assign b = block.settings %}
                    {% liquid
                      assign variant = b.button_mode | default: t.button_variant_default | default: 'solid'

                      assign btn_text = t.text_on_color
                      assign btn_bg = t.color_primary
                      assign btn_border = t.color_primary

                      if variant == 'outline'
                        assign btn_text = t.color_primary
                        assign btn_bg = 'transparent'
                        assign btn_border = t.color_primary
                      elsif variant == 'ghost'
                        assign btn_text = t.color_primary
                        assign btn_bg = 'transparent'
                        assign btn_border = 'transparent'
                      endif

                      assign bw = b.border_width | default: t.button_border_width | default: 1
                      assign radius_px = b.radius | default: t.button_radius | default: 12

                      if b.use_theme_colors == false
                        if b.text_color != blank
                          assign btn_text = b.text_color
                        endif
                        if b.bg_color != blank
                          assign btn_bg = b.bg_color
                        endif
                        if b.border_color != blank
                          assign btn_border = b.border_color
                        endif
                      endif

                      assign btn_size = b.size | default: 'md'
                      assign pad_y = 12
                      assign pad_x = 18
                      if btn_size == 'sm'
                        assign pad_y = 10
                        assign pad_x = 16
                      elsif btn_size == 'lg'
                        assign pad_y = 14
                        assign pad_x = 24
                      endif
                    %}
                    <a href="{{ b.link | default: '/' }}"
                       {% if b.new_tab %}target="_blank" rel="noopener"{% endif %}
                       aria-label="{{ b.aria_label | default: b.label | escape }}"
                       class="q-btn"
                       style="
                         --btn-text: {{ btn_text }};
                         --btn-bg: {{ btn_bg }};
                         --btn-border: {{ btn_border }};
                         --btn-bw: {{ bw }}px;
                         --btn-radius: {{ radius_px }}px;
                         --btn-px: {{ pad_x }}px; --btn-py: {{ pad_y }}px;
                       "
                       {{ block.shopify_attributes }}>
                      {% if b.icon != blank and b.icon != 'none' %}<span aria-hidden="true">{{ b.icon }}</span>{% endif %}
                      <span>{% if t.buttons_uppercase %}{{ b.label | upcase }}{% else %}{{ b.label }}{% endif %}</span>
                    </a>
                  {% endif %}
                {% endfor %}
              </div>
            {% endif %}

          </div>
        </div>
      </div>

    </div>
  </div>
</section>

<style>
  #{{ anchor_id }} * { box-sizing: border-box; }
  #{{ anchor_id }}.q-split-sub-banner{ overflow-x: clip; }

  #{{ anchor_id }}.q-overlap {
    margin-top: calc(var(--q-safe-offset, 0px) * -1);
    padding-top: var(--q-safe-offset, 0px);
  }

  #{{ anchor_id }} .q-container{
    width:100%;
    margin-left:auto; margin-right:auto;
    padding-left: {{ container_pad_m }}px; padding-right: {{ container_pad_m }}px;
  }
  @media (min-width:768px){
    #{{ anchor_id }} .q-container{ padding-left: {{ container_pad_d }}px; padding-right: {{ container_pad_d }}px; }
  }

  #{{ anchor_id }} .q-row{
    display:flex; flex-direction: column; align-items: stretch; gap:0;
    min-height: calc(var(--q-min-h, 60vh) + 40px);
  }
  @media (max-width:767.98px){
    #{{ anchor_id }} .q-row{ min-height: calc(var(--q-min-h-m, 52vh) + 40px); }
  }

  #{{ anchor_id }} .q-col{ width:100%; display:flex; flex: 1 1 auto; min-height:0; }
  @media (min-width:768px){
    #{{ anchor_id }} .q-row{ flex-direction: {{ dir_css }}; }
    #{{ anchor_id }} .q-col{ width:50%; }
  }

  #{{ anchor_id }} .q-img{ order: {{ img_order_m }}; position:relative; }
  #{{ anchor_id }} .q-content-side{ order: {{ content_order_m }}; }
  @media (min-width:768px){
    #{{ anchor_id }} .q-img, #{{ anchor_id }} .q-content-side{ order: initial; }
  }

  #{{ anchor_id }} .q-media{ position:relative; width:100%; height:100%; pointer-events:none; border-radius: 16px; overflow: clip; }
  #{{ anchor_id }} .q-media-el{ width:100%; height:100%; object-fit:cover; display:block; border-radius: inherit; background:#0b0b0b; }
  #{{ anchor_id }} .q-media-fallback{ min-height: 220px; }

  #{{ anchor_id }} .q-overlay,
  #{{ anchor_id }} .q-gradient{
    position:absolute; inset:0; border-radius: inherit; pointer-events:none;
  }
  #{{ anchor_id }} .q-overlay{ background-color: var(--ov, #000); opacity: var(--ov-o, 0); }
  #{{ anchor_id }} .q-gradient{
    background-image:
      linear-gradient(var(--g-a, 135deg),
        color-mix(in srgb, var(--g-s, #000) calc(var(--g-so, 0) * 100%), transparent) 0%,
        color-mix(in srgb, var(--g-e, #000) calc(var(--g-eo, 0) * 100%), transparent) 100%);
  }

  #{{ anchor_id }} .q-panel{
    width:100%; height:100%;
    display:flex; align-items:center;
    background: transparent;
  }
  #{{ anchor_id }} .q-inner{
    margin-left:auto; margin-right:auto;
    display:flex; flex-direction:column; gap:12px;
    align-items: center;
  }

  #{{ anchor_id }} .q-heading{ color: var(--d-heading); }
  #{{ anchor_id }} .q-sub{ color: var(--d-sub); }

  #{{ anchor_id }} .q-btns{
    display:flex; flex-wrap:wrap; gap:12px; margin-top:8px;
    justify-content: var(--cta-justify, center);
  }

  #{{ anchor_id }} .q-btn{
    display:inline-flex; align-items:center; gap:8px; font-weight:600; text-decoration:none;
    color: var(--btn-text) !important;
    background-color: var(--btn-bg) !important;
    border: var(--btn-bw, 1px) solid var(--btn-border) !important;
    border-radius: var(--btn-radius, 12px);
    padding-left: var(--btn-px); padding-right: var(--btn-px);
    padding-top: var(--btn-py);  padding-bottom: var(--btn-py);
    transition: transform .15s ease, opacity .15s ease, background-color .2s ease, color .2s ease, border-color .2s ease;
    will-change: transform;
  }
  #{{ anchor_id }} .q-btn:focus-visible{ outline:2px solid rgba(0,0,0,.35); outline-offset:2px; }
  #{{ anchor_id }} .q-btn:hover{ transform: translateY(-1px); opacity: {{ t.button_hover_opacity | default: 92 }}%; }
  #{{ anchor_id }} .q-btn:active{ transform: scale({{ t.button_active_scale | default: 98 | divided_by: 100.0 }}); }
  
</style>

{% schema %}
{
  "name": "Sub Banner — Split",
  "tag": "section",
  "class": "q-split-sub-banner",
  "settings": [
    { "type": "text", "id": "anchor_id", "label": "Anchor ID", "default": "auto" },
    { "type": "text", "id": "region_label", "label": "Accessible region label", "default": "Split sub page banner" },

    { "type": "header", "content": "Media" },
    { "type": "image_picker", "id": "image", "label": "Image" },
    { "type": "text", "id": "image_alt", "label": "Image alt", "default": "Split banner image" },
    { "type": "select", "id": "image_position", "label": "Image position (desktop)", "options": [
      { "value": "left", "label": "Left" }, { "value": "right", "label": "Right" }
    ], "default": "left" },

    { "type": "header", "content": "Overlay (transparent DNA)" },
    { "type": "select", "id": "overlay_mode", "label": "Overlay type", "default": "none", "options": [
      { "value": "none", "label": "None" },
      { "value": "solid", "label": "Solid" },
      { "value": "gradient", "label": "Gradient" }
    ]},
    { "type": "color", "id": "overlay_color", "label": "Solid overlay color", "default": "#000000" },
    { "type": "range", "id": "overlay_opacity", "label": "Solid overlay opacity (%)", "min": 0, "max": 100, "step": 2, "default": 0 },
    { "type": "color", "id": "grad_start", "label": "Gradient start", "default": "#000000" },
    { "type": "range", "id": "grad_start_opacity", "label": "Gradient start opacity (%)", "min": 0, "max": 100, "step": 2, "default": 0 },
    { "type": "color", "id": "grad_end", "label": "Gradient end", "default": "#000000" },
    { "type": "range", "id": "grad_end_opacity", "label": "Gradient end opacity (%)", "min": 0, "max": 100, "step": 2, "default": 0 },
    { "type": "range", "id": "grad_angle", "label": "Gradient angle (deg)", "min": 0, "max": 360, "step": 5, "default": 135 },

    { "type": "header", "content": "Layout & spacing" },
    { "type": "range", "id": "min_height_vh", "label": "Min height (vh, desktop)", "min": 30, "max": 100, "step": 1, "default": 60 },
    { "type": "range", "id": "min_height_vh_mobile", "label": "Min height (vh, mobile)", "min": 30, "max": 100, "step": 1, "default": 52 },
    { "type": "select", "id": "container_mode", "label": "Container", "default": "contained", "options": [
      { "value": "contained", "label": "Contained (side padding)" },
      { "value": "full", "label": "Full-bleed" }
    ]},
    { "type": "select", "id": "content_max_w", "label": "Content width", "default": "max-w-3xl", "options": [
      { "value": "max-w-2xl", "label": "Narrow" },
      { "value": "max-w-3xl", "label": "Comfort" },
      { "value": "max-w-4xl", "label": "Wide" }
    ]},

    { "type": "header", "content": "Content" },
    { "type": "text", "id": "heading", "label": "Heading", "default": "Tell your story here" },
    { "type": "select", "id": "heading_level", "label": "Heading level", "default": "h2", "options": [
      { "value": "h1", "label": "H1" }, { "value": "h2", "label": "H2" }
    ]},
    { "type": "select", "id": "heading_size", "label": "Heading size", "options": [
      { "value": "theme", "label": "Use Theme size" },
      { "value": "2xl", "label": "2XL" }, { "value": "3xl", "label": "3XL" }, { "value": "4xl", "label": "4XL" }
    ], "default": "theme" },
    { "type": "textarea", "id": "subheading", "label": "Subheading", "default": "Use this split banner to introduce sub-pages with clarity and style." },
    { "type": "color", "id": "heading_color", "label": "Heading color (desktop)", "default": "#111827" },
    { "type": "color", "id": "subheading_color", "label": "Subheading color (desktop)", "default": "#374151" },
    { "type": "color", "id": "panel_bg_color", "label": "Panel background (optional)", "default": "transparent" },

    { "type": "header", "content": "Alignment & visibility" },
    { "type": "select", "id": "text_alignment", "label": "Text alignment", "options": [
      { "value": "left", "label": "Left" }, { "value": "center", "label": "Center" }, { "value": "right", "label": "Right" }], "default": "center"
    },
    { "type": "checkbox", "id": "hide_on_mobile", "label": "Hide on mobile", "default": false },
    { "type": "checkbox", "id": "hide_on_desktop", "label": "Hide on desktop", "default": false },

    { "type": "header", "content": "Header overlap (manual)" },
    { "type": "checkbox", "id": "enable_overlap", "label": "Enable safe header overlap (manual offset)", "default": false },
    { "type": "range", "id": "safe_offset_px", "label": "Header safe offset (px)", "min": 0, "max": 200, "step": 2, "default": 0 }
  ],
  "blocks": [
    {
      "type": "button",
      "name": "Button",
      "limit": 2,
      "settings": [
        { "type": "text", "id": "label", "label": "Label", "default": "Learn more" },
        { "type": "url", "id": "link", "label": "Link", "default": "/" },
        { "type": "text", "id": "aria_label", "label": "ARIA label", "default": "Learn more" },

        { "type": "select", "id": "size", "label": "Size", "default": "md", "options": [
          { "value": "sm", "label": "Small" }, { "value": "md", "label": "Medium" }, { "value": "lg", "label": "Large" }
        ]},
        { "type": "checkbox", "id": "new_tab", "label": "Open in new tab", "default": false },

        { "type": "select", "id": "button_mode", "label": "Style", "options": [
          { "value": "solid", "label": "Solid" },
          { "value": "outline", "label": "Outline" },
          { "value": "ghost", "label": "Ghost" }
        ], "default": "solid" },

        { "type": "header", "content": "Color overrides (optional)" },
        { "type": "checkbox", "id": "use_theme_colors", "label": "Use Theme colors", "default": true },
        { "type": "color", "id": "bg_color", "label": "Background (solid)", "default": "#2563eb" },
        { "type": "color", "id": "text_color", "label": "Text color", "default": "#ffffff" },
        { "type": "color", "id": "border_color", "label": "Border color", "default": "#2563eb" },

        { "type": "text", "id": "icon", "label": "Icon (SVG/HTML)", "default": "none" },

        { "type": "range", "id": "border_width", "label": "Border width (px)", "min": 0, "max": 8, "step": 1, "default": 1 },
        { "type": "range", "id": "radius", "label": "Radius (px)", "min": 0, "max": 50, "step": 1, "default": 12 }
      ]
    }
  ],
  "max_blocks": 2,
  "presets": [
    {
      "name": "Sub Banner — Split",
      "category": "Sub Page Banners",
      "settings": {
        "image_position": "left",
        "overlay_mode": "gradient",
        "grad_start_opacity": 30,
        "grad_end_opacity": 0,
        "text_alignment": "center",
        "heading": "Built for sub pages",
        "subheading": "Media on one side, content on the other—lightweight and accessible."
      },
      "blocks": [{ "type": "button" }, { "type": "button" }]
    }
  ]
}
{% endschema %}
