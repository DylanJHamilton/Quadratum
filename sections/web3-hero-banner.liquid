{% comment %}
  Quadratum â€¢ Web3 Banner (Futuristic FX, fixed)
  - Swiss-like rounded card hero in a container (theme/custom/full width)
  - Background as CSS cover + optional parallax, overlay, gradient glow
  - Reveal-on-scroll, tilt-on-hover, cursor glow, magnetic button (respects reduced motion)
  - Buttons use theme tokens; accessibility + analytics events wired
{% endcomment %}

{% assign s = section.settings %}

{%- comment -%} Visibility toggles {%- endcomment -%}
{% assign visibility_classes = '' %}
{% if s.hide_on_mobile %}{% assign visibility_classes = visibility_classes | append: ' hidden md:block' %}{% endif %}
{% if s.hide_on_desktop %}{% assign visibility_classes = visibility_classes | append: ' md:hidden' %}{% endif %}

{%- comment -%} Resolve background URL once {%- endcomment -%}
{% assign bg_url = '' %}
{% if s.background_image != blank %}
  {% assign bg_url = s.background_image | image_url: width: 2240 %}
{% endif %}

{%- comment -%} Content alignment helpers {%- endcomment -%}
{% assign just_x = 'justify-start' %}
{% if s.content_align_x == 'center' %}{% assign just_x = 'justify-center' %}{% endif %}
{% if s.content_align_x == 'end' %}{% assign just_x = 'justify-end' %}{% endif %}

{% assign align_y = 'items-start' %}
{% if s.content_align_y == 'center' %}{% assign align_y = 'items-center' %}{% endif %}
{% if s.content_align_y == 'end' %}{% assign align_y = 'items-end' %}{% endif %}

{%- comment -%} Media responsive sizes {%- endcomment -%}
{% assign sizes_media = '(min-width: 1024px) 50vw, 100vw' %}
{% assign widths_media = '640,750,828,960,1080,1280,1440,1600' %}

<section
  id="{{ s.anchor_id | default: 'section-' | append: section.id }}"
  class="q-web3-banner {{ visibility_classes }}"
  role="region"
  aria-label="{{ s.region_label | default: 'Web3 promotion' }}"
  style="margin-top: {{ s.margin_top | default: 0 }}px; margin-bottom: {{ s.margin_bottom | default: 0 }}px;"
>
  <div
    class="mx-auto {% if s.pad_x == 'contained' %}px-4 md:px-6{% endif %}"
    style="
      {% if s.width_mode == 'theme' %}max-width: {{ settings.container_lg | default: 1152 }}px;{% elsif s.width_mode == 'custom' %}max-width: {{ s.custom_max_w }}px;{% endif %}
    "
  >
    <div
      class="q-card group relative overflow-hidden w-full will-change-transform {% if s.scroll_reveal %}q-reveal{% endif %}"
      data-parallax="{{ s.enable_parallax }}"
      data-parallax-strength="{{ s.parallax_strength }}"
      data-tilt="{{ s.tilt_hover }}"
      data-tilt-max="{{ s.tilt_max }}"
      data-cursor-glow="{{ s.cursor_reactive_glow }}"
      data-reveal="{{ s.reveal_preset }}"
      style="
        {% if s.card_container %}border-radius: {{ s.card_radius | default: 36 }}px;{% endif %}
        {% if s.card_container and s.card_border_width > 0 %}border: {{ s.card_border_width }}px solid {{ s.card_border_color }};{% endif %}
        {% if s.card_container and s.card_shadow %}box-shadow: 0 20px 60px rgba(0,0,0,.25);{% endif %}
        min-height: {{ s.min_height_vh | default: 60 }}vh;
        {% if bg_url != blank %}background-image: url('{{ bg_url }}'); background-size: cover; background-position: center;{% endif %}
        transform-style: preserve-3d;
      "
    >
      {%- comment -%} Cursor reactive glow {%- endcomment -%}
      {% if s.cursor_reactive_glow %}
      <div class="q-cursor-glow pointer-events-none absolute -inset-40 opacity-0 transition-opacity duration-300" aria-hidden="true" style="border-radius: inherit;"></div>
      {% endif %}

      {%- comment -%} Overlay + blur (clipped by radius) {%- endcomment -%}
      <div class="absolute inset-0 z-0" aria-hidden="true"
           style="
             background-color: {{ s.overlay_color }};
             opacity: {{ s.overlay_opacity | divided_by: 100.0 }};
             {% if s.overlay_blur_px > 0 %}backdrop-filter: blur({{ s.overlay_blur_px }}px);{% endif %}
           ">
      </div>

      {%- comment -%} Gradient / glow layer {%- endcomment -%}
      <div class="absolute inset-0 z-0" aria-hidden="true"
           style="
            background:
              radial-gradient(40% 35% at 20% 20%, {{ s.glow_color_1 }} 0%, transparent 60%),
              radial-gradient(45% 40% at 80% 30%, {{ s.glow_color_2 }} 0%, transparent 65%),
              radial-gradient(50% 45% at 50% 80%, {{ s.glow_color_3 }} 0%, transparent 70%),
              linear-gradient(180deg, {{ s.gradient_top }} 0%, {{ s.gradient_bottom }} 100%);
            {% if s.animate_glow %}animation: qGlow 16s linear infinite alternate;{% endif %}
           ">
      </div>

      {%- comment -%} Content grid + alignment {%- endcomment -%}
      <div class="relative z-10">
        <div class="q-safe-inset">
          <div class="{% if s.card_inner_pad == 'comfortable' %}px-6 md:px-10{% elsif s.card_inner_pad == 'cozy' %}px-5 md:px-8{% else %}px-4 md:px-6{% endif %}">
            <div class="grid grid-cols-1 lg:grid-cols-12 gap-6 md:gap-8"
                 style="padding-top: {{ s.padding_top | default: 72 }}px; padding-bottom: {{ s.padding_bottom | default: 72 }}px;">

              {% liquid
                assign media_first = false
                if s.media_position == 'left'
                  assign media_first = true
                endif
                assign media_cols = 5
                assign content_cols = 7
                if s.media_width == '6'
                  assign media_cols = 6
                  assign content_cols = 6
                endif
                if s.media_width == '7'
                  assign media_cols = 7
                  assign content_cols = 5
                endif
                assign media_col_class = 'lg:col-span-' | append: media_cols
                assign content_col_class = 'lg:col-span-' | append: content_cols
              %}

              {% if media_first %}
                <div class="col-span-1 {{ media_col_class }}">
                  {% if s.media_video != blank %}
                    <video class="w-full h-auto rounded-2xl object-cover" autoplay muted loop playsinline preload="none"
                           {% if s.media_poster != blank %}poster="{{ s.media_poster | image_url: width: 1280 }}"{% endif %}>
                      <source src="{{ s.media_video }}" type="video/mp4">
                    </video>
                  {% elsif s.media_image != blank %}
                    {{ s.media_image
                      | image_url: width: 1600
                      | image_tag:
                        widths: widths_media,
                        sizes: sizes_media,
                        loading: 'lazy',
                        class: 'w-full h-auto object-cover rounded-2xl',
                        alt: s.media_alt }}
                  {% endif %}
                </div>
              {% endif %}

              <div class="col-span-1 {{ content_col_class }}">
                <div class="flex {{ just_x }} {{ align_y }} {{ s.text_align | default: 'text-left' }}">
                  <div class="w-full" style="max-width: {{ s.content_max_w | default: '72ch' }};">
                    {% if s.kicker != blank %}
                      <p class="text-sm font-semibold tracking-wide uppercase"
                         style="color: {{ s.kicker_color | default: '#e5e7eb' }};">{{ s.kicker }}</p>
                    {% endif %}

                    {% if s.heading != blank %}
                      {% assign heading_color = s.heading_color | default: '#ffffff' %}
                      {% if s.heading_level == 'h1' %}
                        <h1 class="mt-1 q-heading font-semibold leading-tight"
                            style="color: {{ heading_color }}; {% if s.text_shadow %}text-shadow: 0 1px 2px rgba(0,0,0,.35);{% endif %}">{{ s.heading | escape }}</h1>
                      {% else %}
                        <h2 class="mt-1 q-heading font-semibold leading-tight"
                            style="color: {{ heading_color }}; {% if s.text_shadow %}text-shadow: 0 1px 2px rgba(0,0,0,.35);{% endif %}">{{ s.heading | escape }}</h2>
                      {% endif %}
                    {% endif %}

                    {% if s.subheading != blank %}
                      <p class="mt-3 text-base md:text-lg {% if s.hide_sub_mobile %}hidden md:block{% endif %}"
                         style="color: {{ s.subheading_color | default: '#f3f4f6' }}; {% if s.text_shadow %}text-shadow: 0 1px 1px rgba(0,0,0,.25);{% endif %}">
                        {{ s.subheading }}
                      </p>
                    {% endif %}

                    {% if s.bullets_enable %}
                      <ul class="mt-4 space-y-2">
                        {% for block in section.blocks %}
                          {% if block.type == 'bullet' %}
                            {% assign b = block.settings %}
                            <li class="flex items-start gap-3" {{ block.shopify_attributes }}>
                              {% if b.icon == 'bolt' %}
                                <svg data-q-bullet-icon viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" width="16" height="16" style="color:#0ea5e9"><path d="M11.3 1L3 11h5l-.8 8L15 9h-5l1.3-8z"/></svg>
                              {% elsif b.icon == 'shield' %}
                                <svg data-q-bullet-icon viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" width="16" height="16" style="color:#059669"><path d="M10 2l7 3v5c0 5-3.5 7.5-7 8-3.5-.5-7-3-7-8V5l7-3z"/></svg>
                              {% else %}
                                <span data-q-bullet-icon class="inline-block rounded-full" style="width:8px;height:8px;background-color: var(--color-primary, {{ settings.color_accent | default: '#10b981' }});"></span>
                              {% endif %}
                              <span class="text-sm md:text-base" style="color: {{ s.bullet_text_color | default: '#e5e7eb' }};">{{ b.text }}</span>
                            </li>
                          {% endif %}
                        {% endfor %}
                      </ul>
                    {% endif %}

                    {%- comment -%} CTA row {%- endcomment -%}
                    {% assign has_secondary = false %}
                    {% assign href2 = s.cta2_link %}
                    {% if href2 == blank and s.cta2_collection %}{% assign href2 = s.cta2_collection.url %}{% endif %}
                    {% if href2 == blank and s.cta2_product %}{% assign href2 = s.cta2_product.url %}{% endif %}
                    {% if href2 == blank and s.cta2_article %}{% assign href2 = s.cta2_article.url %}{% endif %}
                    {% if s.cta2_text != blank and href2 != blank %}{% assign has_secondary = true %}{% endif %}

                    {% assign cta_justify = 'justify-start' %}
                    {% if s.cta_align == 'center' %}{% assign cta_justify = 'justify-center' %}{% endif %}
                    {% if s.cta_align == 'right' %}{% assign cta_justify = 'justify-end' %}{% endif %}

                    <div class="mt-5 flex flex-wrap gap-3 {{ cta_justify }}">
                      <button type="button"
                              class="q-btn q-btn--{{ s.button_fx | default: 'neon' }} {% if s.cta_full_width_mobile %}w-full sm:w-auto{% endif %}"
                              style="--q-btn-radius: {{ s.button_radius }}px; --q-btn-border-w: {{ s.button_border_width }}px;"
                              data-cta="primary"
                              data-q-wallet-connect
                              aria-label="{{ s.cta_aria_label | default: s.cta_text | escape }}">
                        {{ s.cta_text }}
                      </button>

                      {% if has_secondary %}
                        <a href="{{ href2 }}"
                           data-cta="secondary"
                           class="q-btn q-btn--secondary {% if s.cta_full_width_mobile %}w-full sm:w-auto{% endif %}"
                           style="--q-btn-radius: {{ s.button_radius }}px; --q-btn-border-w: 1px;"
                           aria-label="{{ s.cta2_aria_label | default: s.cta2_text | escape }}">
                          {{ s.cta2_text }}
                        </a>
                      {% endif %}
                    </div>

                    {% if s.disclaimer != blank %}
                      <p class="mt-3 text-xs" style="color:#cbd5e1">{{ s.disclaimer }}</p>
                    {% endif %}
                  </div>
                </div>
              </div>

              {% unless media_first %}
                <div class="col-span-1 {{ media_col_class }}">
                  {% if s.media_video != blank %}
                    <video class="w-full h-auto rounded-2xl object-cover" autoplay muted loop playsinline preload="none"
                           {% if s.media_poster != blank %}poster="{{ s.media_poster | image_url: width: 1280 }}"{% endif %}>
                      <source src="{{ s.media_video }}" type="video/mp4">
                    </video>
                  {% elsif s.media_image != blank %}
                    {{ s.media_image
                      | image_url: width: 1600
                      | image_tag:
                        widths: widths_media,
                        sizes: sizes_media,
                        loading: 'lazy',
                        class: 'w-full h-auto object-cover rounded-2xl',
                        alt: s.media_alt }}
                  {% endif %}
                </div>
              {% endunless %}
            </div>
          </div>
        </div>
      </div>

      {% if s.send_events %}
        <script>
          (function(){
            var root = document.getElementById('{{ s.anchor_id | default: 'section-' | append: section.id }}');
            if(!root) return;

            // Wallet connect analytics + event
            var btn = root.querySelector('[data-q-wallet-connect]');
            if (btn) {
              btn.addEventListener('click', function(){
                var payload = {
                  component: 'web3_banner',
                  chain: {{ s.chain | json }},
                  provider_hint: {{ s.provider_hint | json }}
                };
                window.dispatchEvent(new CustomEvent('quadratum:wallet_connect', { detail: payload }));
                if ({{ s.send_events | json }} && window.dataLayer && Array.isArray(window.dataLayer)) {
                  window.dataLayer.push({
                    event: 'quadratum_wallet_connect',
                    component: payload.component,
                    chain: payload.chain,
                    provider_hint: payload.provider_hint
                  });
                }
              });
            }

            // Secondary CTA analytics
            root.addEventListener('click', function(e){
              var a = e.target.closest('a[data-cta="secondary"]');
              if(!a || !{{ s.send_events | json }}) return;
              var href = a.getAttribute('href') || '';
              var payload = { component: 'web3_banner', cta_type: 'secondary', href: href };
              window.dispatchEvent(new CustomEvent('quadratum:cta', { detail: payload }));
              if(window.dataLayer && Array.isArray(window.dataLayer)){
                window.dataLayer.push({ event: 'quadratum_cta', component: payload.component, cta_type: payload.cta_type, href: payload.href });
              }
            });

            // ===== Motion & FX (respect reduced-motion) =====
            var reduce = window.matchMedia('(prefers-reduced-motion: reduce)').matches;

            // Reveal on scroll
            {% if s.scroll_reveal %}
            if(!reduce){
              var reveals = root.querySelectorAll('.q-reveal');
              var io = new IntersectionObserver(function(entries){
                entries.forEach(function(ent){
                  if(ent.isIntersecting){ ent.target.classList.add('is-revealed'); io.unobserve(ent.target); }
                });
              }, { threshold: 0.2 });
              reveals.forEach(function(el){ io.observe(el); });
            }
            {% endif %}

            // Parallax background
            {% if s.enable_parallax %}
            if(!reduce){
              var card = root.querySelector('.q-card');
              if(card){
                var str = parseFloat(card.dataset.parallaxStrength || '12');
                var rafId = null;
                var onScroll = function(){
                  if(!rafId){
                    rafId = requestAnimationFrame(function(){
                      var rect = card.getBoundingClientRect();
                      var mid = window.innerHeight * 0.5;
                      var delta = (rect.top + rect.height*0.5) - mid;
                      var offset = Math.max(Math.min(delta / 20, 50), -50);
                      card.style.backgroundPosition = 'center calc(50% + ' + (offset/str) + 'px)';
                      rafId = null;
                    });
                  }
                };
                document.addEventListener('scroll', onScroll, { passive: true });
                onScroll();
              }
            }
            {% endif %}

            // Tilt-on-hover
            {% if s.tilt_hover %}
            if(!reduce){
              var card2 = root.querySelector('.q-card');
              if(card2){
                var maxDeg = parseFloat(card2.dataset.tiltMax || '8');
                var rect, cx, cy;
                var enter = function(){
                  rect = card2.getBoundingClientRect();
                  cx = rect.left + rect.width/2;
                  cy = rect.top + rect.height/2;
                  card2.style.transition = 'transform 200ms ease';
                };
                var move = function(e){
                  var dx = (e.clientX - cx) / (rect.width/2);
                  var dy = (e.clientY - cy) / (rect.height/2);
                  var rx = (dy * -maxDeg).toFixed(2);
                  var ry = (dx *  maxDeg).toFixed(2);
                  card2.style.transform = 'rotateX('+rx+'deg) rotateY('+ry+'deg)';
                };
                var leave = function(){
                  card2.style.transition = 'transform 250ms ease';
                  card2.style.transform = 'rotateX(0deg) rotateY(0deg)';
                };
                card2.addEventListener('mouseenter', enter);
                card2.addEventListener('mousemove', move);
                card2.addEventListener('mouseleave', leave);
              }
            }
            {% endif %}

            // Magnetic primary button + cursor glow
            var primary = root.querySelector('.q-btn[data-cta="primary"]');
            {% if s.cursor_reactive_glow %}
            var glow = root.querySelector('.q-cursor-glow');
            if(glow && !reduce){
              var updateGlow = function(e){
                var r = root.getBoundingClientRect();
                var x = e.clientX - r.left;
                var y = e.clientY - r.top;
                glow.style.opacity = '1';
                glow.style.background = 'radial-gradient(160px 120px at '+x+'px '+y+'px, rgba(99,102,241,.28), rgba(16,185,129,.15) 40%, transparent 70%)';
              };
              root.addEventListener('mousemove', updateGlow);
              root.addEventListener('mouseleave', function(){ glow.style.opacity = '0'; });
            }
            {% endif %}

            {% if s.button_magnet %}
            if(primary && !reduce){
              var pRect, px, py;
              var pmove = function(e){
                pRect = primary.getBoundingClientRect();
                px = e.clientX - (pRect.left + pRect.width/2);
                py = e.clientY - (pRect.top + pRect.height/2);
                var damp = 24;
                primary.style.transform = 'translate('+ (px/damp) +'px,'+ (py/damp) +'px)';
              };
              var preset = function(){ primary.style.transform = 'translate(0,0)'; };
              primary.addEventListener('mousemove', pmove);
              primary.addEventListener('mouseleave', preset);
            }
            {% endif %}
          })();
        </script>
      {% endif %}
    </div>
  </div>

  <style>
    /* Safe inset to avoid cramped edges */
    .q-web3-banner .q-safe-inset{ padding: clamp(16px, 3vw, 40px); }

    /* Heading scales with theme tokens (H1/H2) */
    .q-web3-banner .q-heading{
      font-size: calc({{ settings.type_h1_size | default: 240 }} * 1%); /* rem Ã—100 â†’ % of base */
      letter-spacing: {{ settings.headings_letterspacing | default: 0 | divided_by: 1000.0 }}em;
      text-transform: {% if settings.headings_uppercase %}uppercase{% else %}none{% endif %};
    }

    /* Lock bullet icon sizing against global svg/img rules */
    .q-web3-banner [data-q-bullet-icon]{
      width:16px !important; height:16px !important; max-width:none !important;
      flex:none !important; display:inline-block;
    }

    /* Reveal on scroll presets */
    .q-web3-banner .q-reveal{opacity:0;transform:translate3d(0,12px,0) scale(.98);}
    .q-web3-banner .q-reveal.is-revealed{opacity:1;transform:none;transition:opacity .6s ease, transform .6s ease;}
    .q-web3-banner [data-reveal="fade-in"].is-revealed{transform:none;}
    .q-web3-banner [data-reveal="fade-up"]{transform:translate3d(0,18px,0);}
    .q-web3-banner [data-reveal="fade-up"].is-revealed{transform:none;}
    .q-web3-banner [data-reveal="slide-left"]{transform:translate3d(24px,0,0);}
    .q-web3-banner [data-reveal="slide-left"].is-revealed{transform:none;}
    .q-web3-banner [data-reveal="zoom-in"]{transform:scale(.96);}
    .q-web3-banner [data-reveal="zoom-in"].is-revealed{transform:none;}

    /* Buttons (theme-aware) */
    .q-web3-banner .q-btn{
      --btn-bg: {{ s.button_bg_color | default: settings.color_accent }};
      --btn-fg: {{ s.button_text_color | default: settings.text_on_color }};
      --btn-bd: {{ s.button_border_color | default: settings.color_accent }};
      border-radius: var(--q-btn-radius, {{ settings.button_radius | default: 12 }}px);
      border-width: var(--q-btn-border-w, {{ settings.button_border_width | default: 1 }}px);
      border-style: solid;
      display:inline-flex;align-items:center;justify-content:center;
      padding: 0.75rem 1.25rem;
      font-weight: 600;
      text-transform: {% if settings.buttons_uppercase %}uppercase{% else %}none{% endif %};
      transition: transform .12s ease, box-shadow .2s ease, opacity .2s ease, background-position .25s ease;
      user-select: none; -webkit-user-select:none;
      will-change: transform, box-shadow;
      position: relative; isolation:isolate;
      color: var(--btn-fg);
    }
    .q-web3-banner .q-btn--secondary{
      border-color: var(--btn-bd);
      background: transparent;
      color: var(--btn-bd);
    }
    .q-web3-banner .q-btn--neon{
      background: var(--btn-bg);
      border-color: transparent;
      box-shadow: 0 8px 24px rgba(16,185,129,.25), 0 0 0 rgba(99,102,241,0);
    }
    .q-web3-banner .q-btn--neon:hover{
      opacity: {{ settings.button_hover_opacity | default: 92 | divided_by: 100.0 }};
      box-shadow: 0 12px 36px rgba(16,185,129,.35), 0 0 24px rgba(99,102,241,.35);
      transform: scale({{ settings.button_active_scale | default: 98 | divided_by: 100.0 }});
    }
    .q-web3-banner .q-btn--gradient{
      border-color: transparent;
      background-image: linear-gradient(90deg, {{ settings.color_accent }} 0%, {{ settings.color_primary }} 100%);
      background-size: 200% 100%;
      background-position: 0% 50%;
    }
    .q-web3-banner .q-btn--gradient:hover{
      background-position: 100% 50%;
      transform: scale({{ settings.button_active_scale | default: 98 | divided_by: 100.0 }});
    }

    /* Cursor glow layer (animated by JS) */
    .q-web3-banner .q-cursor-glow{
      mix-blend-mode: screen;
      filter: blur(12px);
    }

    /* Subtle card glow on hover */
    .q-web3-banner .q-card:hover{
      box-shadow: 0 24px 90px rgba(16,185,129,.22), 0 10px 40px rgba(99,102,241,.18);
    }

    @keyframes qGlow {
      0%{ transform: translate3d(-2%,-1%,0) scale(1.02); filter:saturate(1); }
      100%{ transform: translate3d(2%,1%,0) scale(1.04); filter:saturate(1.05); }
    }
    @media (prefers-reduced-motion: reduce){
      .q-web3-banner .q-reveal{opacity:1!important;transform:none!important;}
      .q-web3-banner [style*="qGlow"]{ animation:none!important; }
      .q-web3-banner .q-card{ transform:none!important; }
    }
  </style>
</section>

{% render 'tw-safelist-banners' %}

{% schema %}
{
  "name": "Web3 Banner",
  "tag": "section",
  "class": "q-web3-banner",
  "settings": [
    { "type": "header", "content": "Layout & container" },
    { "type": "select", "id": "width_mode", "label": "Width mode", "default": "theme", "options": [
      { "value": "theme", "label": "Theme container" },
      { "value": "custom", "label": "Custom max-width" },
      { "value": "full", "label": "Full bleed" }
    ]},
    { "type": "range", "id": "custom_max_w", "label": "Custom max-width (px)", "min": 960, "max": 1920, "step": 10, "default": 1440 },
    { "type": "select", "id": "pad_x", "label": "Page side padding", "default": "contained", "options": [
      { "value": "contained", "label": "Contained (px-4 md:px-6)" },
      { "value": "none", "label": "None" }
    ]},
    { "type": "checkbox", "id": "card_container", "label": "Use rounded card container", "default": true },
    { "type": "range", "id": "card_radius", "label": "Card corner radius", "min": 0, "max": 64, "step": 1, "default": 36 },
    { "type": "checkbox", "id": "card_shadow", "label": "Card shadow", "default": true },
    { "type": "color", "id": "card_border_color", "label": "Card border color", "default": "#0000001a" },
    { "type": "range", "id": "card_border_width", "label": "Card border width", "min": 0, "max": 4, "step": 1, "default": 0 },

    { "type": "header", "content": "Content alignment" },
    { "type": "select", "id": "content_align_x", "label": "Horizontal align", "default": "start", "options": [
      { "value": "start", "label": "Start/Left" }, { "value": "center", "label": "Center" }, { "value": "end", "label": "End/Right" }
    ]},
    { "type": "select", "id": "content_align_y", "label": "Vertical align", "default": "start", "options": [
      { "value": "start", "label": "Top" }, { "value": "center", "label": "Center" }, { "value": "end", "label": "Bottom" }
    ]},

    { "type": "header", "content": "Content" },
    { "type": "text", "id": "kicker", "label": "Kicker", "default": "Be the first" },
    { "type": "color", "id": "kicker_color", "label": "Kicker color", "default": "#e5e7eb" },
    { "type": "text", "id": "heading", "label": "Heading", "default": "Redefine workouts with our activewear" },
    { "type": "color", "id": "heading_color", "label": "Heading color", "default": "#ffffff" },
    { "type": "textarea", "id": "subheading", "label": "Subheading", "default": "Exclusive drops and early access." },
    { "type": "color", "id": "subheading_color", "label": "Subheading color", "default": "#f3f4f6" },
    { "type": "checkbox", "id": "text_shadow", "label": "Subtle text shadow over busy images", "default": true },
    { "type": "select", "id": "heading_level", "label": "Heading level", "default": "h1", "options": [
      { "value": "h1", "label": "H1" }, { "value": "h2", "label": "H2" }
    ]},
    { "type": "checkbox", "id": "hide_sub_mobile", "label": "Hide subheading on mobile", "default": false },
    { "type": "select", "id": "text_align", "label": "Text alignment", "default": "text-left", "options": [
      { "value": "text-left", "label": "Left" }, { "value": "text-center", "label": "Center" }, { "value": "text-right", "label": "Right" }
    ]},
    { "type": "text", "id": "content_max_w", "label": "Max text width (e.g. 72ch)", "default": "72ch" },

    { "type": "header", "content": "Buttons" },
    { "type": "text", "id": "cta_text", "label": "Primary button", "default": "Shop now" },
    { "type": "text", "id": "cta_aria_label", "label": "Primary button ARIA label", "default": "Shop now" },
    { "type": "text", "id": "cta2_text", "label": "Secondary button text", "default": "View collection" },
    { "type": "url", "id": "cta2_link", "label": "Secondary URL" },
    { "type": "collection", "id": "cta2_collection", "label": "â€¦or link to collection" },
    { "type": "product", "id": "cta2_product", "label": "â€¦or link to product" },
    { "type": "article", "id": "cta2_article", "label": "â€¦or link to article" },
    { "type": "select", "id": "cta_align", "label": "CTA alignment", "default": "left", "options": [
      { "value": "left", "label": "Left" }, { "value": "center", "label": "Center" }, { "value": "right", "label": "Right" }
    ]},
    { "type": "checkbox", "id": "cta_full_width_mobile", "label": "Full-width buttons on mobile", "default": true },

    { "type": "header", "content": "Wallet options" },
    { "type": "select", "id": "chain", "label": "Preferred chain", "default": "ethereum", "options": [
      { "value": "ethereum", "label": "Ethereum" }, { "value": "polygon", "label": "Polygon" },
      { "value": "base", "label": "Base" }, { "value": "solana", "label": "Solana" }
    ]},
    { "type": "text", "id": "provider_hint", "label": "Provider hint (optional)", "default": "any" },

    { "type": "header", "content": "Media (optional)" },
    { "type": "image_picker", "id": "media_image", "label": "Side image" },
    { "type": "text", "id": "media_alt", "label": "Media alt", "default": "Artwork" },
    { "type": "text", "id": "media_video", "label": "Side video URL (MP4)" },
    { "type": "image_picker", "id": "media_poster", "label": "Side video poster" },
    { "type": "select", "id": "media_position", "label": "Media position", "default": "right", "options": [
      { "value": "left", "label": "Left" }, { "value": "right", "label": "Right" }
    ]},
    { "type": "select", "id": "media_width", "label": "Media width (desktop)", "default": "5", "options": [
      { "value": "5", "label": "5/12" }, { "value": "6", "label": "1/2" }, { "value": "7", "label": "7/12" }
    ]},

    { "type": "header", "content": "Background & overlay" },
    { "type": "image_picker", "id": "background_image", "label": "Background image" },
    { "type": "text", "id": "bg_image_alt", "label": "Background image alt", "default": "Decorative background" },
    { "type": "color", "id": "overlay_color", "label": "Overlay color", "default": "#000000" },
    { "type": "range", "id": "overlay_opacity", "label": "Overlay opacity", "min": 0, "max": 100, "step": 5, "default": 45, "unit": "%" },
    { "type": "range", "id": "overlay_blur_px", "label": "Overlay blur (px)", "min": 0, "max": 20, "step": 1, "default": 0 },

    { "type": "header", "content": "Gradient / glow" },
    { "type": "color", "id": "gradient_top", "label": "Gradient top", "default": "#0b0b12" },
    { "type": "color", "id": "gradient_bottom", "label": "Gradient bottom", "default": "#12121a" },
    { "type": "color", "id": "glow_color_1", "label": "Glow color 1", "default": "rgba(76, 29, 149, 0.35)" },
    { "type": "color", "id": "glow_color_2", "label": "Glow color 2", "default": "rgba(3, 105, 161, 0.30)" },
    { "type": "color", "id": "glow_color_3", "label": "Glow color 3", "default": "rgba(16, 185, 129, 0.25)" },
    { "type": "checkbox", "id": "animate_glow", "label": "Subtle glow animation", "default": true },

    { "type": "header", "content": "Motion & FX" },
    { "type": "checkbox", "id": "scroll_reveal", "label": "Reveal on scroll", "default": true },
    { "type": "select", "id": "reveal_preset", "label": "Reveal preset", "default": "fade-up", "options": [
      { "value": "fade-up", "label": "Fade up" }, { "value": "fade-in", "label": "Fade in" },
      { "value": "slide-left", "label": "Slide left" }, { "value": "zoom-in", "label": "Zoom in" }
    ]},
    { "type": "checkbox", "id": "enable_parallax", "label": "Parallax background on scroll", "default": true },
    { "type": "range", "id": "parallax_strength", "label": "Parallax strength", "min": 6, "max": 30, "step": 1, "default": 12 },
    { "type": "checkbox", "id": "tilt_hover", "label": "Tilt card on hover", "default": true },
    { "type": "range", "id": "tilt_max", "label": "Tilt max degrees", "min": 2, "max": 20, "step": 1, "default": 8 },
    { "type": "checkbox", "id": "cursor_reactive_glow", "label": "Cursor reactive glow", "default": true },

    { "type": "header", "content": "Button FX" },
    { "type": "select", "id": "button_fx", "label": "Primary button style", "default": "neon", "options": [
      { "value": "neon", "label": "Neon glow" }, { "value": "gradient", "label": "Animated gradient" }
    ]},
    { "type": "checkbox", "id": "button_magnet", "label": "Magnetic hover (primary button)", "default": true },
    { "type": "select", "id": "button_mode", "label": "Fallback primary style (if overriding colors)", "default": "solid", "options": [
      { "value": "solid", "label": "Solid" }, { "value": "outline", "label": "Outline" }
    ]},
    { "type": "color", "id": "button_bg_color", "label": "Primary background (override)", "default": "#10b981" },
    { "type": "color", "id": "button_text_color", "label": "Primary text color (override)", "default": "#ffffff" },
    { "type": "color", "id": "button_border_color", "label": "Secondary/outline border", "default": "#ffffff" },
    { "type": "range", "id": "button_border_width", "label": "Outline border width", "min": 0, "max": 6, "step": 1, "default": 1 },
    { "type": "range", "id": "button_radius", "label": "Button corner radius", "min": 0, "max": 36, "step": 1, "default": 12 },

    { "type": "header", "content": "Layout controls" },
    { "type": "range", "id": "min_height_vh", "label": "Min height (vh)", "min": 40, "max": 100, "step": 5, "default": 65 },
    { "type": "range", "id": "padding_top", "label": "Padding top (px)", "min": 0, "max": 240, "step": 8, "default": 96 },
    { "type": "range", "id": "padding_bottom", "label": "Padding bottom (px)", "min": 0, "max": 240, "step": 8, "default": 96 },

    { "type": "header", "content": "Visibility & analytics" },
    { "type": "text", "id": "anchor_id", "label": "Optional anchor ID" },
    { "type": "text", "id": "region_label", "label": "Accessible region label", "default": "Web3 promotion" },
    { "type": "checkbox", "id": "hide_on_mobile", "label": "Hide on mobile", "default": false },
    { "type": "checkbox", "id": "hide_on_desktop", "label": "Hide on desktop", "default": false },
    { "type": "checkbox", "id": "bullets_enable", "label": "Show bullet points", "default": true },
    { "type": "checkbox", "id": "send_events", "label": "Send analytics events on clicks", "default": true },
    { "type": "color", "id": "bullet_text_color", "label": "Bullet text color", "default": "#e5e7eb" },
    { "type": "range", "id": "margin_top", "label": "Margin top (px)", "min": 0, "max": 120, "step": 4, "default": 0 },
    { "type": "range", "id": "margin_bottom", "label": "Margin bottom (px)", "min": 0, "max": 120, "step": 4, "default": 0 }
  ],
  "blocks": [
    {
      "type": "bullet",
      "name": "Bullet",
      "settings": [
        { "type": "select", "id": "icon", "label": "Icon", "default": "dot", "options": [
          { "value": "dot", "label": "Dot" }, { "value": "bolt", "label": "Bolt" }, { "value": "shield", "label": "Shield" }
        ]},
        { "type": "text", "id": "text", "label": "Text", "default": "Holder-only discount & early access" }
      ]
    }
  ],
  "max_blocks": 6,
  "presets": [
    {
      "name": "Web3 Hero Banner",
      "category": "Hero Banners",
      "settings": {
        "width_mode": "custom",
        "custom_max_w": 1440,
        "card_container": true,
        "card_radius": 36,
        "card_shadow": true,
        "kicker": "Be the first",
        "heading": "Redefine workouts with our activewear",
        "subheading": "Exclusive drops and early access.",
        "animate_glow": true,
        "media_position": "right",
        "scroll_reveal": true,
        "reveal_preset": "fade-up",
        "enable_parallax": true,
        "tilt_hover": true,
        "cursor_reactive_glow": true,
        "button_fx": "neon",
        "button_magnet": true
      }
    }
  ]
}
{% endschema %}

{% render 'tw-safelist-banners' %}
