{% comment %}
  Transparent Hero Banner
  - Static or slideshow
  - Transparent-header aware (safe offset + header tone swap)
  - A11y-ready (ARIA, keyboard nav)
{% endcomment %}

{{ 'transparent-hero-banner.css' | asset_url | stylesheet_tag }}

{% liquid
  assign s = section.settings

  # Theme tokens
  assign T_font_heading = settings.font_heading
  assign T_font_body = settings.font_body
  assign T_head_letter = settings.headings_letterspacing | default: 0
  assign T_head_uppercase = settings.headings_uppercase
  assign T_btn_variant_default = settings.button_variant_default | default: 'solid'
  assign T_btn_radius = settings.button_radius | default: 12
  assign T_btn_bw = settings.button_border_width | default: 1

  assign C_primary = settings.color_primary | default: '#2563eb'
  assign C_text_on_color = settings.text_on_color | default: '#ffffff'

  assign slide_count = section.blocks | size

  assign is_slideshow = false
  if s.mode == 'slideshow' and section.blocks.size > 1
    assign is_slideshow = true
  endif

  assign show_arrows = false
  if is_slideshow and s.nav_arrows
    assign show_arrows = true
  endif

  assign show_dots = false
  if is_slideshow and s.nav_dots
    assign show_dots = true
  endif

  assign use_autoplay = false
  if is_slideshow and s.autoplay
    assign use_autoplay = true
  endif

  assign autoplay_ms = s.autoplay_delay_ms | default: 6000

  assign hero_classes = 'thb-hero'
  if is_slideshow
    assign hero_classes = hero_classes | append: ' thb-hero--slideshow'
  else
    assign hero_classes = hero_classes | append: ' thb-hero--static'
  endif
  if s.enable_header_overlap
    assign hero_classes = hero_classes | append: ' thb-hero--overlap'
  endif

  assign visibility_classes = ''
  if s.hide_on_mobile
    assign visibility_classes = visibility_classes | append: ' hidden md:block'
  endif
  if s.hide_on_desktop
    assign visibility_classes = visibility_classes | append: ' block md:hidden'
  endif

  # Height handling
  assign min_h_desktop = s.min_height | default: '75vh'
  assign min_h_mobile = s.min_height_mobile | default: '60vh'
%}

<style>
  /* ===================== Scoped variables & typography ===================== */
  #{{ s.anchor_id | default: section.id }}{
    /* Arrow/Dot design tokens (from settings) */
    --thb-arrow-size: {{ s.arrow_size | default: 42 }}px;
    --thb-arrow-bg: {{ s.arrow_bg | default: '#000000' }};
    --thb-arrow-bg-alpha: {{ s.arrow_bg_opacity | default: 35 | divided_by: 100.0 }};
    --thb-arrow-color: {{ s.arrow_color | default: '#ffffff' }};
    --thb-dot: {{ s.dot_color | default: '#ffffff99' }};
    --thb-dot-active: {{ s.dot_active_color | default: '#ffffff' }};

    /* Heading typography (per section) */
    --thb-head-w: {{ s.heading_weight | default: 700 }};
    --thb-head-letter: {{ s.heading_letter | default: 0 | divided_by: 1000.0 }}em;
    --thb-head-max: {{ s.heading_size_clamp | default: 64 }}px;

    /* Desktop min height (mobile set below) */
    --thb-min-h: {{ min_h_desktop }};
  }
  @media (max-width: 767px){
    #{{ s.anchor_id | default: section.id }}{ --thb-min-h: {{ min_h_mobile }}; }
  }

  /* ===================== Core layout ===================== */
  .thb-hero {
    position: relative;
    margin-top: {{ s.margin_top | default: 0 }}px;
    margin-bottom: {{ s.margin_bottom | default: 0 }}px;
    isolation: isolate;
  }

  /* When overlapping the header, pull hero up and add a content safe offset. JS sets --thb-header-h */
  #{{ s.anchor_id | default: section.id }}.thb-hero--overlap{
    margin-top: calc(var(--thb-header-h, 0px) * -1);
  }

  .thb-viewport{ position: relative; overflow: hidden; z-index: 0; }

  /* Slideshow track uses horizontal scroll-snap. Must be scrollable for scrollTo() to work. */
  #{{ s.anchor_id | default: section.id }} .thb-track{
    display: flex;
    overflow-x: auto;
    scroll-snap-type: x mandatory;
    scroll-behavior: smooth;
    overscroll-behavior: contain;
    -webkit-overflow-scrolling: touch;
    min-height: var(--thb-min-h);
  }

  /* Slides */
  #{{ s.anchor_id | default: section.id }} .thb-slide{
    flex: 0 0 100%;
    position: relative;
    min-height: var(--thb-min-h);
    scroll-snap-align: start;
    background: #000;
    display: flex;
    flex-direction: column;
    justify-content: center;
    z-index: 0;
  }

  .thb-media,.thb-colorfill{ position:absolute; inset:0; z-index:0; pointer-events:none; }
  .thb-img,.thb-video,.thb-colorfill{ width:100%; height:100%; object-fit:cover; display:block; }
  .thb-overlay{ position:absolute; inset:0; z-index:1; pointer-events:none; }

  .thb-content{
    position: relative;
    z-index: 2;
    display: grid;
    padding: 2rem;
    padding-top: calc(2rem + var(--thb-safe-offset, 0px));
    max-width: min(95%, 1400px);
    margin-inline: auto;
  }

  /* Alignment */
  .thb-content--top-left{ align-items:start; justify-items:start; }
  .thb-content--top-center{ align-items:start; justify-items:center; }
  .thb-content--top-right{ align-items:start; justify-items:end; }
  .thb-content--center-left{ align-items:center; justify-items:start; }
  .thb-content--center-center{ align-items:center; justify-items:center; }
  .thb-content--center-right{ align-items:center; justify-items:end; }
  .thb-content--bottom-left{ align-items:end; justify-items:start; }
  .thb-content--bottom-center{ align-items:end; justify-items:center; }
  .thb-content--bottom-right{ align-items:end; justify-items:end; }

  .thb-text-left{text-align:left;} .thb-text-center{text-align:center;} .thb-text-right{text-align:right;}

  /* Typography */
  #{{ s.anchor_id | default: section.id }} .thb-heading{
    {% if T_font_heading %}font-family: {{ T_font_heading.family }}, {{ T_font_heading.fallback_families }};{% endif %}
    {% if T_head_uppercase %}text-transform: uppercase;{% endif %}
    letter-spacing: var(--thb-head-letter);
    font-weight: var(--thb-head-w);
    font-size: clamp(28px, 3.5vw + 1rem, var(--thb-head-max));
  }
  #{{ s.anchor_id | default: section.id }} .thb-body{
    {% if T_font_body %}font-family: {{ T_font_body.family }}, {{ T_font_body.fallback_families }};{% endif %}
  }

  /* CTAs */
  .thb-ctas{ display:inline-flex; gap:.75rem; margin-top:1rem; flex-wrap:wrap; }
  .thb-btn{
    padding: .875rem 1.25rem;
    border-radius: var(--btn-radius, {{ T_btn_radius }}px);
    border: var(--btn-bw, {{ T_btn_bw }}px) solid var(--btn-border,currentColor);
    transition: transform .08s ease, opacity .2s ease;
    text-decoration:none; font-weight:500; cursor:pointer; pointer-events:auto;
  }
  .thb-btn--solid{ background: var(--btn-bg, {{ C_primary }}); color: var(--btn-color, {{ C_text_on_color }}); border-color: var(--btn-border, {{ C_primary }}); }
  .thb-btn--outline{ background: transparent; color: var(--btn-color, {{ C_text_on_color }}); border-color: var(--btn-border, rgba(255,255,255,.7)); }
  .thb-btn--ghost{ background: transparent; color: var(--btn-color, {{ C_text_on_color }}); border-color: transparent; }
  .thb-btn:hover{ opacity:.9; } .thb-btn:active{ transform: scale(.98); }

  /* Arrows (pointer-events container off, buttons on) */
  .thb-arrows{ position:absolute; inset:0; pointer-events:none; z-index:3; }
  #{{ s.anchor_id | default: section.id }} .thb-arrow{
    pointer-events:auto;
    position:absolute; top:50%; transform:translateY(-50%);
    width: var(--thb-arrow-size); height: var(--thb-arrow-size);
    display:grid; place-items:center; border-radius:999px;
    background: color-mix(in srgb, var(--thb-arrow-bg), transparent calc((1 - var(--thb-arrow-bg-alpha, .35)) * 100%));
    color: var(--thb-arrow-color);
    border: 1px solid rgba(255,255,255,0.14);
    box-shadow: 0 6px 18px rgba(0,0,0,0.35);
    transition: transform .2s ease, box-shadow .2s ease, background-color .2s ease, opacity .2s ease;
    cursor:pointer; opacity: max(var(--thb-arrow-bg-alpha,.35), .25);
    font-size: calc(var(--thb-arrow-size) * 0.72);
    line-height: 1;
  }
  .thb-arrow:hover{ transform: translateY(-50%) scale(1.05); opacity: 1; }
  .thb-arrow--prev{ left: 18px; } .thb-arrow--next{ right: 18px; }
  @media (max-width: 767px){ .thb-arrow--prev{ left:12px; } .thb-arrow--next{ right:12px; } }

  /* Dots */
  .thb-dots{
    position:absolute; left:50%; transform:translateX(-50%);
    bottom:24px; display:flex; gap:8px; padding:6px 10px;
    border-radius:999px; backdrop-filter:saturate(140%) blur(8px);
    background: rgba(0,0,0,.35); z-index:3; pointer-events:auto;
  }
  #{{ s.anchor_id | default: section.id }} .thb-dot{
    width:10px; height:10px; border-radius:50%;
    background: var(--thb-dot); border:0; cursor:pointer;
    transition: transform .2s ease, background-color .2s ease;
  }
  #{{ s.anchor_id | default: section.id }} .thb-dot.is-active{ background: var(--thb-dot-active); transform: scale(1.1); }

  /* Theme editor hint */
  .thb-note--editor{ position:absolute; top:8px; left:8px; background:rgba(0,0,0,.5); color:#fff; padding:.25rem .5rem; border-radius:6px; font-size:12px; z-index:4; }
</style>

<section
  id="{{ s.anchor_id | default: section.id }}"
  class="{{ hero_classes }} {{ visibility_classes }}"
  role="region"
  aria-label="{{ s.aria_label | default: 'Hero banner' }}"
  data-slideshow="{{ is_slideshow }}"
  data-has-arrows="{{ show_arrows }}"
  data-has-dots="{{ show_dots }}"
  data-autoplay="{{ use_autoplay }}"
  data-autoplay-ms="{{ autoplay_ms }}"
  data-header-sync="{{ s.enable_header_overlap }}"
  data-header-theme="{{ s.header_theme | default: 'dark' }}"
>

  {% if s.enable_header_overlap and request.design_mode %}
    <div class="thb-note thb-note--editor thb-body" aria-hidden="true">
      Header overlap is ON. Ensure Theme settings → Header → “Transparent over first hero” is enabled.
    </div>
  {% endif %}

  <div class="thb-viewport" tabindex="-1">
    <div class="thb-track thb-inner" role="{% if is_slideshow %}group{% else %}none{% endif %}" aria-roledescription="{% if is_slideshow %}carousel{% endif %}">

      {% if is_slideshow %}
        {% for block in section.blocks %}
          {% assign b = block.settings %}
          <article
            id="{{ section.id }}-slide-{{ forloop.index }}"
            class="thb-slide"
            role="group"
            aria-label="Slide {{ forloop.index }} of {{ slide_count }}"
            {% if forloop.first %}aria-current="true"{% endif %}
            {{ block.shopify_attributes }}
          >
            <div class="thb-media">
              {% if b.video_url != blank %}
                <video class="thb-video"
                  {% if settings.video_autoplay %}autoplay muted playsinline{% endif %}
                  {% if settings.video_loop %}loop{% endif %}
                  {% if settings.video_controls %}controls{% endif %}
                  preload="metadata"
                  poster="{% if b.image %}{{ b.image | image_url: width: 1920 }}{% endif %}">
                  <source src="{{ b.video_url | escape }}" type="video/mp4">
                </video>
              {% elsif b.image %}
                {% liquid
                  assign should_eager = false
                  if forloop.first and s.eager_load_first
                    assign should_eager = true
                  endif
                  assign alt_text = b.alt | default: b.heading
                  assign alt_text_safe = alt_text | escape
                %}
                {% if should_eager %}
                  {{ b.image
                    | image_url: width: 3200
                    | image_tag:
                      loading: 'eager',
                      sizes: '(min-width: 1024px) 100vw, 100vw',
                      alt: alt_text_safe,
                      class: 'thb-img'
                  }}
                {% else %}
                  {{ b.image
                    | image_url: width: 3200
                    | image_tag:
                      loading: 'lazy',
                      sizes: '(min-width: 1024px) 100vw, 100vw',
                      alt: alt_text_safe,
                      class: 'thb-img'
                  }}
                {% endif %}
              {% else %}
                <div class="thb-colorfill" style="background-color: {{ b.bg_color | default: '#000' }};"></div>
              {% endif %}

              {% if b.overlay_type != 'none' %}
                {% if b.overlay_type == 'solid' %}
                  <div class="thb-overlay" style="background-color: {{ b.overlay_color | default: '#000' }}; opacity: {{ b.overlay_opacity | default: 40 | divided_by: 100.0 }};"></div>
                {% else %}
                  <div class="thb-overlay thb-overlay--gradient" style="background: linear-gradient({{ b.grad_angle | default: 180 }}deg, rgba({{ b.grad_start | color_to_rgb }}, {{ b.grad_start_opacity | default: 60 | divided_by: 100.0 }}), rgba({{ b.grad_end | color_to_rgb }}, {{ b.grad_end_opacity | default: 0 | divided_by: 100.0 }}));"></div>
                {% endif %}
              {% endif %}
            </div>

            <div class="thb-content thb-content--{{ b.content_position | default: 'center-center' }} thb-text-{{ b.text_alignment | default: 'center' }}">
              {% if b.accent_text != blank %}
                <div class="thb-accent thb-body" style="color: {{ b.accent_color | default: C_text_on_color }};">{{ b.accent_text }}</div>
              {% endif %}
              {% assign heading_tag = s.heading_tag | default: 'h1' %}
              {% if b.heading != blank %}
                <{{ heading_tag }} class="thb-heading" style="color: {{ b.heading_color | default: C_text_on_color }};">{{ b.heading }}</{{ heading_tag }}>
              {% endif %}
              {% if b.subheading != blank %}
                <p class="thb-subheading thb-body" style="color: {{ b.subheading_color | default: C_text_on_color }};">{{ b.subheading }}</p>
              {% endif %}
              <div class="thb-ctas">
                {% if b.cta_text and b.cta_link %}
                  <a class="thb-btn thb-btn--{{ b.cta_variant | default: T_btn_variant_default }}" href="{{ b.cta_link }}" aria-label="{{ b.cta_text | escape }}">{{ b.cta_text }}</a>
                {% endif %}
                {% if b.cta2_text and b.cta2_link %}
                  <a class="thb-btn thb-btn--{{ b.cta2_variant | default: 'outline' }}" href="{{ b.cta2_link }}" aria-label="{{ b.cta2_text | escape }}">{{ b.cta2_text }}</a>
                {% endif %}
              </div>
            </div>
          </article>
        {% endfor %}
      {% else %}
        {% assign b = section.blocks.first.settings %}
        <article class="thb-slide thb-slide--single">
          <div class="thb-media">
            {% if b and b.video_url != blank %}
              <video class="thb-video"
                {% if settings.video_autoplay %}autoplay muted playsinline{% endif %}
                {% if settings.video_loop %}loop{% endif %}
                {% if settings.video_controls %}controls{% endif %}
                preload="metadata"
                poster="{% if b.image %}{{ b.image | image_url: width: 1920 }}{% endif %}">
                <source src="{{ b.video_url | escape }}" type="video/mp4">
              </video>
            {% elsif b and b.image %}
              {% assign static_alt = b.alt | default: b.heading %}
              {% assign static_alt_safe = static_alt | escape %}
              {{ b.image
                | image_url: width: 3200
                | image_tag:
                  loading: 'eager',
                  sizes: '(min-width: 1024px) 100vw, 100vw',
                  alt: static_alt_safe,
                  class: 'thb-img'
              }}
            {% else %}
              <div class="thb-colorfill" style="background-color: {{ s.fallback_bg | default: settings.bg_contrast | default: '#111' }};"></div>
            {% endif %}

            {% if b and b.overlay_type != 'none' %}
              {% if b.overlay_type == 'solid' %}
                <div class="thb-overlay" style="background-color: {{ b.overlay_color | default: '#000000' }}; opacity: {{ b.overlay_opacity | default: 40 | divided_by: 100.0 }};"></div>
              {% else %}
                <div class="thb-overlay thb-overlay--gradient" style="background: linear-gradient({{ b.grad_angle | default: 180 }}deg, rgba({{ b.grad_start | color_to_rgb }}, {{ b.grad_start_opacity | default: 60 | divided_by: 100.0 }}), rgba({{ b.grad_end | color_to_rgb }}, {{ b.grad_end_opacity | default: 0 | divided_by: 100.0 }}));"></div>
              {% endif %}
            {% endif %}
          </div>

          <div class="thb-content thb-content--{{ b.content_position | default: 'center-center' }} thb-text-{{ b.text_alignment | default: 'center' }}">
            {% if b and b.accent_text != blank %}
              <div class="thb-accent thb-body" style="color: {{ b.accent_color | default: C_text_on_color }};">{{ b.accent_text }}</div>
            {% endif %}
            {% if b and b.heading != blank %}
              <h1 class="thb-heading" style="color: {{ b.heading_color | default: C_text_on_color }};">{{ b.heading }}</h1>
            {% endif %}
            {% if b and b.subheading != blank %}
              <p class="thb-subheading thb-body" style="color: {{ b.subheading_color | default: C_text_on_color }};">{{ b.subheading }}</p>
            {% endif %}
            <div class="thb-ctas">
              {% if b and b.cta_text and b.cta_link %}
                <a class="thb-btn thb-btn--{{ b.cta_variant | default: T_btn_variant_default }}" href="{{ b.cta_link }}">{{ b.cta_text }}</a>
              {% endif %}
              {% if b and b.cta2_text and b.cta2_link %}
                <a class="thb-btn thb-btn--{{ b.cta2_variant | default: 'outline' }}" href="{{ b.cta2_link }}">{{ b.cta2_text }}</a>
              {% endif %}
            </div>
          </div>
        </article>
      {% endif %}
    </div>

    {% if show_arrows %}
      <div class="thb-arrows">
        <button class="thb-arrow thb-arrow--prev" type="button" aria-label="Previous slide" data-dir="-1">‹</button>
        <button class="thb-arrow thb-arrow--next" type="button" aria-label="Next slide" data-dir="1">›</button>
      </div>
    {% endif %}

    {% if show_dots %}
      <div class="thb-dots" role="tablist" aria-label="Slide navigation">
        {% for block in section.blocks %}
          <button
            class="thb-dot{% if forloop.first %} is-active{% endif %}"
            role="tab"
            aria-controls="{{ section.id }}-slide-{{ forloop.index }}"
            aria-selected="{% if forloop.first %}true{% else %}false{% endif %}"
            data-slide="{{ forloop.index0 }}">
          </button>
        {% endfor %}
      </div>
    {% endif %}
  </div>
</section>

<script>
(function() {
  var root = document.getElementById('{{ s.anchor_id | default: section.id }}');
  if (!root) return;

  /* ---------- True viewport height fallback (iOS address bar, old browsers) ---------- */
  try {
    if (!CSS.supports('height', '100svh')) {
      var setVH = function(){
        var vh = window.innerHeight * 0.01;
        root.style.setProperty('--thb-min-h', (vh * 100) + 'px');
      };
      setVH();
      window.addEventListener('resize', setVH, {passive:true});
      window.addEventListener('orientationchange', setVH, {passive:true});
    }
  } catch(e) {}

  /* ---------- Transparent header sync (measure + tone while hero visible) ---------- */
  var overlap = root.getAttribute('data-header-sync') === 'true';
  var header = document.querySelector('[data-header]') || document.querySelector('header');

  function setHeaderVars(){
    if (!header) return;
    var h = header.getBoundingClientRect().height || 0;
    root.style.setProperty('--thb-header-h', h + 'px');
    var safe = h + ({{ s.content_safe_offset_px | default: 0 }});
    root.style.setProperty('--thb-safe-offset', safe + 'px');
  }

  if (header && overlap){
    var io = new IntersectionObserver(function(entries){
      entries.forEach(function(e){
        header.classList.toggle('is-over-hero', e.isIntersecting && e.intersectionRatio > 0.1);
        header.dataset.theme = root.dataset.headerTheme || '{{ s.header_theme | default: "dark" }}';
      });
    }, { threshold: 0.1 });
    io.observe(root);
    setHeaderVars();
    window.addEventListener('resize', setHeaderVars, {passive:true});
    window.addEventListener('orientationchange', setHeaderVars, {passive:true});
  }

  /* ---------- Slideshow ---------- */
  var isSlideshow = root.dataset.slideshow === 'true';
  if (!isSlideshow) return;

  var track  = root.querySelector('.thb-track');
  var slides = Array.prototype.slice.call(root.querySelectorAll('.thb-slide'));
  var dots   = Array.prototype.slice.call(root.querySelectorAll('.thb-dot'));
  var prev   = root.querySelector('.thb-arrow--prev');
  var next   = root.querySelector('.thb-arrow--next');

  var current = 0;

  function setActive(i){
    slides.forEach(function(slide, idx){ slide.toggleAttribute('aria-current', idx === i); });
    dots.forEach(function(dot, idx){
      var on = (idx === i);
      dot.classList.toggle('is-active', on);
      dot.setAttribute('aria-selected', on ? 'true' : 'false');
    });
  }

  function goTo(i){
    i = (i + slides.length) % slides.length;
    var target = slides[i];
    if (track && target){
      track.scrollTo({ left: target.offsetLeft, behavior: 'smooth' });
    }
    current = i; setActive(current);
  }

  // Controls
  if (dots.length){
    dots.forEach(function(dot){
      dot.addEventListener('click', function(){
        var idx = parseInt(dot.getAttribute('data-slide'), 10) || 0;
        goTo(idx);
      });
    });
  }
  if (prev && next){
    prev.addEventListener('click', function(){ goTo(current - 1); });
    next.addEventListener('click', function(){ goTo(current + 1); });
  }

  // Autoplay (respect prefers-reduced-motion)
  var autoplay = root.dataset.autoplay === 'true';
  try {
    if (window.matchMedia && window.matchMedia('(prefers-reduced-motion: reduce)').matches) autoplay = false;
  } catch(e) {}
  var delay = parseInt(root.dataset.autoplayMs || '6000', 10);
  var timer = null;
  function start(){ if (!autoplay) return; stop(); timer = setInterval(function(){ goTo(current + 1); }, delay); }
  function stop(){ if (timer){ clearInterval(timer); timer = null; } }

  root.addEventListener('mouseenter', stop);
  root.addEventListener('mouseleave', start);
  document.addEventListener('visibilitychange', function(){ if (document.hidden) stop(); else start(); });

  setActive(0);
  start();
})();
</script>

{% schema %}
{
  "name": "Transparent Hero Banner",
  "tag": "section",
  "class": "thb-hero-section",
  "settings": [
    { "type": "header", "content": "Mode" },
    {
      "type": "select",
      "id": "mode",
      "label": "Banner mode",
      "default": "static",
      "options": [
        { "value": "static", "label": "Static (single banner)" },
        { "value": "slideshow", "label": "Slideshow (use slide blocks)" }
      ]
    },

    { "type": "header", "content": "Layout & Height" },
    {
      "type": "select",
      "id": "min_height",
      "label": "Minimum height (desktop)",
      "default": "75vh",
      "options": [
        { "value": "50vh", "label": "50% viewport" },
        { "value": "60vh", "label": "60% viewport" },
        { "value": "75vh", "label": "75% viewport" },
        { "value": "100vh", "label": "Full screen" },
        { "value": "auto", "label": "Auto" }
      ]
    },
    {
      "type": "select",
      "id": "min_height_mobile",
      "label": "Minimum height (mobile)",
      "default": "60vh",
      "options": [
        { "value": "50vh", "label": "50% viewport" },
        { "value": "60vh", "label": "60% viewport" },
        { "value": "75vh", "label": "75% viewport" },
        { "value": "100vh", "label": "Full screen" },
        { "value": "auto", "label": "Auto" }
      ]
    },

    { "type": "header", "content": "Transparent header sync" },
    {
      "type": "checkbox",
      "id": "enable_header_overlap",
      "label": "Let header sit over this hero",
      "default": true
    },
    {
      "type": "range",
      "id": "content_safe_offset_px",
      "label": "Extra content top offset (px)",
      "min": 0, "max": 160, "step": 4, "default": 0
    },
    {
      "type": "select",
      "id": "header_theme",
      "label": "Header tone while on hero",
      "default": "dark",
      "options": [
        { "value": "dark", "label": "Dark (for light media)" },
        { "value": "light", "label": "Light (for dark media)" }
      ]
    },

    { "type": "header", "content": "Slideshow controls" },
    { "type": "checkbox", "id": "nav_arrows", "label": "Show arrows", "default": true },
    { "type": "checkbox", "id": "nav_dots",   "label": "Show dots",   "default": true },
    { "type": "checkbox", "id": "autoplay",   "label": "Autoplay",    "default": false },
    {
      "type": "range",
      "id": "autoplay_delay_ms",
      "label": "Autoplay delay (ms)",
      "min": 2000, "max": 9000, "step": 500, "default": 6000
    },
    {
      "type": "checkbox",
      "id": "eager_load_first",
      "label": "Eager-load first slide image",
      "default": true
    },

    { "type": "header", "content": "Heading typography (this section)" },
    { "type": "range", "id": "heading_size_clamp", "label": "Heading max size (px)", "min": 28, "max": 96, "step": 1, "default": 64 },
    { "type": "range", "id": "heading_weight", "label": "Heading weight", "min": 300, "max": 900, "step": 50, "default": 700 },
    { "type": "range", "id": "heading_letter", "label": "Heading letter-spacing (×1000 em)", "min": -50, "max": 200, "step": 5, "default": 0 },

    { "type": "header", "content": "Content semantics" },
    {
      "type": "select",
      "id": "heading_tag",
      "label": "Heading HTML tag",
      "default": "h1",
      "options": [
        { "value": "h1", "label": "H1" },
        { "value": "h2", "label": "H2" },
        { "value": "div", "label": "DIV" },
        { "value": "p",  "label": "P" }
      ]
    },

    { "type": "header", "content": "Spacing (outside)" },
    { "type": "range", "id": "margin_top",    "label": "Margin top",    "min": 0, "max": 120, "step": 4, "default": 0, "unit": "px" },
    { "type": "range", "id": "margin_bottom", "label": "Margin bottom", "min": 0, "max": 120, "step": 4, "default": 0, "unit": "px" },

    { "type": "header", "content": "Visibility" },
    { "type": "text", "id": "anchor_id", "label": "Anchor ID (optional)" },
    { "type": "text", "id": "aria_label", "label": "ARIA label", "default": "Hero banner" },
    { "type": "checkbox", "id": "hide_on_mobile", "label": "Hide on mobile", "default": false },
    { "type": "checkbox", "id": "hide_on_desktop", "label": "Hide on desktop", "default": false },

    { "type": "header", "content": "Arrows & Dots" },
    { "type": "range", "id": "arrow_size", "label": "Arrow size (px)", "min": 28, "max": 80, "step": 2, "default": 42 },
    { "type": "color", "id": "arrow_bg", "label": "Arrow background", "default": "#000000" },
    { "type": "range", "id": "arrow_bg_opacity", "label": "Arrow background opacity (%)", "min": 0, "max": 100, "step": 1, "default": 35 },
    { "type": "color", "id": "arrow_color", "label": "Arrow icon color", "default": "#ffffff" },
    { "type": "color", "id": "dot_color", "label": "Dot color (idle)", "default": "#ffffff99" },
    { "type": "color", "id": "dot_active_color", "label": "Dot color (active)", "default": "#ffffffff" }
  ],
  "blocks": [
    {
      "type": "slide",
      "name": "Slide",
      "limit": 12,
      "settings": [
        { "type": "header", "content": "Media" },
        { "type": "image_picker", "id": "image", "label": "Image" },
        { "type": "text", "id": "alt", "label": "Accessible image alt (recommended)" },
        { "type": "text", "id": "video_url", "label": "Video URL (MP4)", "info": "Optional; image used as poster if provided" },
        { "type": "color", "id": "bg_color", "label": "Background (if no media)", "default": "#000000" },

        { "type": "header", "content": "Overlay" },
        { "type": "select", "id": "overlay_type", "label": "Overlay type", "default": "gradient",
          "options": [
            { "value": "none", "label": "None" },
            { "value": "solid", "label": "Solid color" },
            { "value": "gradient", "label": "Gradient" }
          ]
        },
        { "type": "color", "id": "overlay_color", "label": "Overlay color (solid)", "default": "#000000" },
        { "type": "range", "id": "overlay_opacity", "label": "Overlay opacity", "min": 0, "max": 100, "step": 5, "default": 40, "unit": "%" },
        { "type": "color", "id": "grad_start", "label": "Gradient start", "default": "#000000" },
        { "type": "range", "id": "grad_start_opacity", "label": "Gradient start opacity", "min": 0, "max": 100, "step": 5, "default": 60, "unit": "%" },
        { "type": "color", "id": "grad_end", "label": "Gradient end", "default": "#000000" },
        { "type": "range", "id": "grad_end_opacity", "label": "Gradient end opacity", "min": 0, "max": 100, "step": 5, "default": 0, "unit": "%" },
        { "type": "range", "id": "grad_angle", "label": "Gradient angle", "min": 0, "max": 360, "step": 15, "default": 180, "unit": "deg" },

        { "type": "header", "content": "Content" },
        { "type": "text", "id": "accent_text", "label": "Accent text" },
        { "type": "color", "id": "accent_color", "label": "Accent color", "default": "#ffffff" },
        { "type": "text", "id": "heading", "label": "Heading", "default": "Transparent Hero" },
        { "type": "color", "id": "heading_color", "label": "Heading color", "default": "#ffffff" },
        { "type": "textarea", "id": "subheading", "label": "Subheading" },
        { "type": "color", "id": "subheading_color", "label": "Subheading color", "default": "#ffffff" },

        { "type": "header", "content": "Layout" },
        { "type": "select", "id": "content_position", "label": "Content position", "default": "center-center",
          "options": [
            { "value": "top-left", "label": "Top left" },
            { "value": "top-center", "label": "Top center" },
            { "value": "top-right", "label": "Top right" },
            { "value": "center-left", "label": "Center left" },
            { "value": "center-center", "label": "Center center" },
            { "value": "center-right", "label": "Center right" },
            { "value": "bottom-left", "label": "Bottom left" },
            { "value": "bottom-center", "label": "Bottom center" },
            { "value": "bottom-right", "label": "Bottom right" }
          ]
        },
        { "type": "select", "id": "text_alignment", "label": "Text alignment", "default": "center",
          "options": [ { "value": "left", "label": "Left" }, { "value": "center", "label": "Center" }, { "value": "right", "label": "Right" } ]
        },

        { "type": "header", "content": "CTAs" },
        { "type": "text", "id": "cta_text", "label": "Primary button text" },
        { "type": "url", "id": "cta_link", "label": "Primary button link" },
        { "type": "select", "id": "cta_variant", "label": "Primary button style", "default": "solid",
          "options": [ { "value": "solid", "label": "Solid" }, { "value": "outline", "label": "Outline" }, { "value": "ghost", "label": "Ghost" } ]
        },
        { "type": "text", "id": "cta2_text", "label": "Secondary button text" },
        { "type": "url", "id": "cta2_link", "label": "Secondary button link" },
        { "type": "select", "id": "cta2_variant", "label": "Secondary button style", "default": "outline",
          "options": [ { "value": "solid", "label": "Solid" }, { "value": "outline", "label": "Outline" }, { "value": "ghost", "label": "Ghost" } ]
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Transparent Hero Banner",
      "category": "Hero Banners",
      "blocks": [ { "type": "slide" }, { "type": "slide" } ]
    }
  ]
}
{% endschema %}
