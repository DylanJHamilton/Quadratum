{% comment %}
  Quadratum • Split Content (Dynamic) — Button color hardening + mobile overrides
  - Button text/bg/border colors now win against global theme link rules.
  - Handles :visited and nested elements inside the button.
  - Keeps your existing mobile override knobs.
{% endcomment %}

{% liquid
  assign s = section.settings

  assign dir_css = 'row'
  if s.image_position == 'right'
    assign dir_css = 'row-reverse'
  endif

  assign img_order_m = 1
  assign content_order_m = 2
  if s.mobile_image_first == false
    assign img_order_m = 2
    assign content_order_m = 1
  endif

  assign container_pad_m = 0
  assign container_pad_d = 0
  if s.container_mode == 'contained'
    assign container_pad_m = 16
    assign container_pad_d = 24
  endif

  assign max_w_token = s.content_max_w | default: 'max-w-3xl'
  assign max_w_px = '768px'
%}
{% case max_w_token %}
  {% when 'max-w-2xl' %}{% assign max_w_px = '672px' %}
  {% when 'max-w-3xl' %}{% assign max_w_px = '768px' %}
  {% when 'max-w-4xl' %}{% assign max_w_px = '896px' %}
{% endcase %}

{% liquid
  assign visibility_classes = ''
  if s.hide_on_mobile
    assign visibility_classes = visibility_classes | append: ' hidden md:block'
  endif
  if s.hide_on_desktop
    assign visibility_classes = visibility_classes | append: ' md:hidden'
  endif

  assign min_h_value = '60vh'
%}
{% case s.min_height %}
  {% when 'min-h-[40vh]' %}{% assign min_h_value = '40vh' %}
  {% when 'min-h-[50vh]' %}{% assign min_h_value = '50vh' %}
  {% when 'min-h-[60vh]' %}{% assign min_h_value = '60vh' %}
  {% when 'min-h-[75vh]' %}{% assign min_h_value = '75vh' %}
{% endcase %}

{% liquid
  assign text_align_value = 'left'
%}
{% case s.text_alignment %}
  {% when 'center' %}{% assign text_align_value = 'center' %}
  {% when 'right'  %}{% assign text_align_value = 'right'  %}
{% endcase %}

{% liquid
  assign cta_justify_css = 'flex-start'
%}
{% case text_align_value %}
  {% when 'center' %}{% assign cta_justify_css = 'center' %}
  {% when 'right'  %}{% assign cta_justify_css = 'flex-end' %}
  {% else %}{% assign cta_justify_css = 'flex-start' %}
{% endcase %}

{% liquid
  assign cpy_m = 48
  assign cpy_d = 64
  assign cpx_m = 24
  assign cpx_d = 40

  assign pad_y_tokens = s.content_pad_y | default: 'py-12 md:py-16'
%}
{% if pad_y_tokens contains 'py-0' %}{% assign cpy_m = 0 %}
{% elsif pad_y_tokens contains 'py-2' %}{% assign cpy_m = 8 %}
{% elsif pad_y_tokens contains 'py-3' %}{% assign cpy_m = 12 %}
{% elsif pad_y_tokens contains 'py-4' %}{% assign cpy_m = 16 %}
{% elsif pad_y_tokens contains 'py-5' %}{% assign cpy_m = 20 %}
{% elsif pad_y_tokens contains 'py-6' %}{% assign cpy_m = 24 %}
{% elsif pad_y_tokens contains 'py-8' %}{% assign cpy_m = 32 %}
{% elsif pad_y_tokens contains 'py-10' %}{% assign cpy_m = 40 %}
{% elsif pad_y_tokens contains 'py-12' %}{% assign cpy_m = 48 %}
{% elsif pad_y_tokens contains 'py-16' %}{% assign cpy_m = 64 %}
{% elsif pad_y_tokens contains 'py-20' %}{% assign cpy_m = 80 %}
{% endif %}

{% if pad_y_tokens contains 'md:py-0' %}{% assign cpy_d = 0 %}
{% elsif pad_y_tokens contains 'md:py-2' %}{% assign cpy_d = 8 %}
{% elsif pad_y_tokens contains 'md:py-3' %}{% assign cpy_d = 12 %}
{% elsif pad_y_tokens contains 'md:py-4' %}{% assign cpy_d = 16 %}
{% elsif pad_y_tokens contains 'md:py-5' %}{% assign cpy_d = 20 %}
{% elsif pad_y_tokens contains 'md:py-6' %}{% assign cpy_d = 24 %}
{% elsif pad_y_tokens contains 'md:py-8' %}{% assign cpy_d = 32 %}
{% elsif pad_y_tokens contains 'md:py-10' %}{% assign cpy_d = 40 %}
{% elsif pad_y_tokens contains 'md:py-12' %}{% assign cpy_d = 48 %}
{% elsif pad_y_tokens contains 'md:py-16' %}{% assign cpy_d = 64 %}
{% elsif pad_y_tokens contains 'md:py-20' %}{% assign cpy_d = 80 %}
{% endif %}

{% liquid
  assign pad_x_tokens = s.content_pad_x | default: 'px-6 md:px-10'
%}
{% if pad_x_tokens contains 'px-0' %}{% assign cpx_m = 0 %}
{% elsif pad_x_tokens contains 'px-2' %}{% assign cpx_m = 8 %}
{% elsif pad_x_tokens contains 'px-3' %}{% assign cpx_m = 12 %}
{% elsif pad_x_tokens contains 'px-4' %}{% assign cpx_m = 16 %}
{% elsif pad_x_tokens contains 'px-5' %}{% assign cpx_m = 20 %}
{% elsif pad_x_tokens contains 'px-6' %}{% assign cpx_m = 24 %}
{% elsif pad_x_tokens contains 'px-8' %}{% assign cpx_m = 32 %}
{% elsif pad_x_tokens contains 'px-10' %}{% assign cpx_m = 40 %}
{% elsif pad_x_tokens contains 'px-12' %}{% assign cpx_m = 48 %}
{% endif %}

{% if pad_x_tokens contains 'md:px-0' %}{% assign cpx_d = 0 %}
{% elsif pad_x_tokens contains 'md:px-2' %}{% assign cpx_d = 8 %}
{% elsif pad_x_tokens contains 'md:px-3' %}{% assign cpx_d = 12 %}
{% elsif pad_x_tokens contains 'md:px-4' %}{% assign cpx_d = 16 %}
{% elsif pad_x_tokens contains 'md:px-5' %}{% assign cpx_d = 20 %}
{% elsif pad_x_tokens contains 'md:px-6' %}{% assign cpx_d = 24 %}
{% elsif pad_x_tokens contains 'md:px-8' %}{% assign cpx_d = 32 %}
{% elsif pad_x_tokens contains 'md:px-10' %}{% assign cpx_d = 40 %}
{% elsif pad_x_tokens contains 'md:px-12' %}{% assign cpx_d = 48 %}
{% endif %}

{% liquid
  assign kicker_fs = '0.875rem'
%}
{% case s.kicker_size %}
  {% when 'base' %}{% assign kicker_fs = '1rem' %}
  {% when 'lg'   %}{% assign kicker_fs = '1.125rem' %}
{% endcase %}

{% liquid
  assign heading_fs = '1.875rem'
%}
{% case s.heading_size %}
  {% when '2xl' %}{% assign heading_fs = '1.5rem' %}
  {% when '3xl' %}{% assign heading_fs = '1.875rem' %}
  {% when '4xl' %}{% assign heading_fs = '2.25rem' %}
{% endcase %}

{% liquid
  assign sub_fs = '1rem'
%}
{% case s.subheading_size %}
  {% when 'lg' %}{% assign sub_fs = '1.125rem' %}
  {% when 'xl' %}{% assign sub_fs = '1.25rem' %}
{% endcase %}

{% liquid
  assign heading_level = s.heading_level | default: 'h2'
  assign desc_id = 'split-desc-' | append: section.id

  assign mobile_mode = s.mobile_presentation | default: 'stack'
  assign mobile_has_bg = false
  if mobile_mode == 'bg'
    assign mobile_has_bg = true
  endif

  assign mobile_bg_img = ''
  if s.mobile_image != blank
    assign mobile_bg_img = s.mobile_image | image_url: width: 1536
  elsif s.image != blank
    assign mobile_bg_img = s.image | image_url: width: 1536
  endif

  assign mob_ov_color = s.mobile_overlay_color | default: '#000000'
  assign mob_ov_opacity = s.mobile_overlay_opacity | default: 35
%}

{%- comment -%}
  Resolve mobile color values (new + legacy keys)
{%- endcomment -%}
{% liquid
  assign m_heading = s.heading_color_mobile
  if m_heading == blank
    assign m_heading = s.mobile_heading_color
  endif

  assign m_text = s.text_color_mobile
  if m_text == blank
    assign m_text = s.mobile_subheading_color
  endif

  assign m_kicker = s.mobile_kicker_color
%}

<section id="{{ s.anchor_id | default: 'section-' | append: section.id }}"
         class="q-split-content{{ visibility_classes }}"
         role="region"
         aria-label="{{ s.region_label | default: 'Promotional banner' }}"
         style="
           --q-min-h: {{ min_h_value }};
           /* Desktop defaults */
           --d-kicker: {{ s.kicker_color | default: '#111827' }};
           --d-heading: {{ s.heading_color | default: '#111827' }};
           --d-sub: {{ s.subheading_color | default: '#374151' }};

           /* Optional mobile vars (applied in media queries below) */
           {% if m_kicker != blank %}--m-kicker: {{ m_kicker }};{% endif %}
           {% if m_heading != blank %}--m-heading: {{ m_heading }};{% endif %}
           {% if m_text   != blank %}--m-sub: {{ m_text }};{% endif %}
           {% if s.mobile_button_text_color != blank %}--m-btn-text: {{ s.mobile_button_text_color }};{% endif %}
           {% if s.mobile_button_bg_color   != blank %}--m-btn-bg: {{ s.mobile_button_bg_color }};{% endif %}
           {% if s.mobile_button_border_color != blank %}--m-btn-border: {{ s.mobile_button_border_color }};{% endif %}

           background-color: {{ s.section_bg | default: 'transparent' }};
         ">

  <div class="q-container">
    <div class="q-row" data-dir="{{ dir_css }}" data-mobile-mode="{{ mobile_mode }}">

      <div class="q-col q-img{% if mobile_has_bg %} q-hide-m{% endif %}">
        {% if s.mobile_image != blank %}
          <div class="q-show-m">
            {{ s.mobile_image
              | image_url: width: 1536
              | image_tag:
                widths: '640,960,1280,1536',
                sizes: '100vw',
                loading: 'eager',
                fetchpriority: 'high',
                class: 'q-img-el',
                alt: s.mobile_image_alt | default: '' }}
          </div>
          <div class="q-show-d">
            {{ s.image
              | image_url: width: 2048
              | image_tag:
                widths: '960,1280,1536,2048',
                sizes: '(min-width: 768px) 50vw, 100vw',
                loading: 'eager',
                fetchpriority: 'high',
                class: 'q-img-el',
                alt: s.image_alt | default: '' }}
          </div>
        {% else %}
          {% if s.image != blank %}
            {{ s.image
              | image_url: width: 2048
              | image_tag:
                widths: '640,960,1280,1536,2048',
                sizes: '(min-width: 768px) 50vw, 100vw',
                loading: 'eager',
                fetchpriority: 'high',
                class: 'q-img-el',
                alt: s.image_alt | default: '' }}
          {% endif %}
        {% endif %}

        {% if s.image_caption != blank %}
          <figcaption class="q-cap">{{ s.image_caption }}</figcaption>
        {% endif %}
      </div>

      <div class="q-col q-content-side"
           style="
             {% if mobile_has_bg and mobile_bg_img != blank %}
               --m-bg:url('{{ mobile_bg_img }}');
               --m-ov: {{ mob_ov_color }};
               --m-ov-o: {{ mob_ov_opacity | divided_by: 100.0 }};
             {% endif %}
           ">

        <div class="q-panel{% if mobile_has_bg %} q-panel--m-bg{% endif %}"
             style="background-color: {{ s.content_bg_color }}; text-align: {{ text_align_value }}; --content-align: {% if text_align_value == 'center' %}center{% elsif text_align_value == 'right' %}flex-end{% else %}flex-start{% endif %}; --cta-justify: {{ cta_justify_css }};">

          <div class="q-inner" style="max-width: {{ max_w_px }}; padding-top: {{ cpy_m }}px; padding-bottom: {{ cpy_m }}px; padding-left: {{ cpx_m }}px; padding-right: {{ cpx_m }}px;">
            {% if s.kicker != blank %}
              <p class="q-kicker uppercase tracking-wide" style="margin:0 0 6px 0; font-size: {{ kicker_fs }}; line-height: 1.2; font-weight:600;">
                {{ s.kicker }}
              </p>
            {% endif %}

            {% if s.heading != blank %}
              {% case heading_level %}
                {% when 'h1' %}
                  <h1 class="q-heading" style="margin:0 0 8px 0; font-size: {{ heading_fs }}; line-height: 1.2; font-weight:700;">
                    {{ s.heading }}
                  </h1>
                {% else %}
                  <h2 class="q-heading" style="margin:0 0 8px 0; font-size: {{ heading_fs }}; line-height: 1.2; font-weight:700;">
                    {{ s.heading }}
                  </h2>
              {% endcase %}
            {% endif %}

            {% if s.subheading != blank %}
              <p id="{{ desc_id }}" class="q-sub" style="margin:0 0 16px 0; font-size: {{ sub_fs }}; line-height: 1.6;">
                {{ s.subheading }}
              </p>
            {% endif %}

            {% if s.show_rating %}
              {% liquid
                assign full_stars = s.rating | default: 5 | plus: 0
                if full_stars > 5
                  assign full_stars = 5
                endif
              %}
              <div class="q-stars" aria-label="{{ full_stars }} out of 5 stars, {{ s.rating_count | default: 128 }} reviews">
                <div class="q-stars-row" aria-hidden="true">
                  {% for i in (1..5) %}
                    {% if i <= full_stars %}
                      <span>★</span>
                    {% else %}
                      <span class="q-star-fade">★</span>
                    {% endif %}
                  {% endfor %}
                </div>
                <span class="q-stars-text">{{ s.rating_count | default: 128 }} reviews</span>
              </div>
            {% endif %}

            {% if section.blocks.size > 0 %}
              <div class="q-btns" {% if s.subheading != blank %}aria-describedby="{{ desc_id }}"{% endif %}>
                {% for block in section.blocks %}
                  {% assign b = block.settings %}
                  {% assign is_outline = false %}
                  {% if b.button_mode == 'outline' %}
                    {% assign is_outline = true %}
                  {% endif %}

                  {% assign btn_size = b.size | default: 'md' %}
                  {% assign pad_y = 12 %}{% assign pad_x = 20 %}
                  {% if btn_size == 'sm' %}
                    {% assign pad_y = 10 %}{% assign pad_x = 16 %}
                  {% elsif btn_size == 'lg' %}
                    {% assign pad_y = 14 %}{% assign pad_x = 24 %}
                  {% endif %}

                  <a href="{{ b.link | default: '#' }}"
                     {% if b.new_tab %}target="_blank" rel="noopener"{% endif %}
                     aria-label="{{ b.aria_label | default: b.label | escape }}"
                     class="q-btn"
                     style="
                       /* per-button base tokens */
                       --btn-text-base: {{ b.text_color | default: '#ffffff' }};
                       --btn-bg-base: {% if is_outline %}transparent{% else %}{{ b.bg_color | default: '#111111' }}{% endif %};
                       --btn-border-base: {{ b.border_color | default: '#111111' }};
                       --btn-bw: {{ b.border_width | default: 1 }}px;
                       --btn-radius: {{ b.radius | default: 6 }}px;
                       --btn-px: {{ pad_x }}px; --btn-py: {{ pad_y }}px;

                       /* apply final tokens – forced so theme link rules can't win */
                       color: var(--btn-text) !important;
                       background-color: var(--btn-bg) !important;
                       border-color: var(--btn-border) !important;
                       border-width: var(--btn-bw) !important;
                     "
                     {{ block.shopify_attributes }}>
                    {% if b.icon != blank %}<span aria-hidden="true">{{ b.icon }}</span>{% endif %}
                    <span>{{ b.label }}</span>
                  </a>
                {% endfor %}
              </div>
            {% endif %}

            {% assign has_badges = false %}
            {% for block in section.blocks %}
              {% if block.type == 'badge' %}{% assign has_badges = true %}{% endif %}
            {% endfor %}
            {% if has_badges %}
              <div class="q-badges">
                {% for block in section.blocks %}
                  {% if block.type == 'badge' %}
                    {% assign bb = block.settings %}
                    <span class="q-badge" {{ block.shopify_attributes }}>
                      {% if bb.badge_icon != blank %}<span aria-hidden="true">{{ bb.badge_icon }}</span>{% endif %}
                      <span>{{ bb.badge_text }}</span>
                    </span>
                  {% endif %}
                {% endfor %}
              </div>
            {% endif %}
          </div>

        </div>
      </div>

    </div>
  </div>
</section>

<style>
  /* Scope */
  #{{ s.anchor_id | default: 'section-' | append: section.id }} * { box-sizing: border-box; }

  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-container{
    width:100%;
    margin-left:auto; margin-right:auto;
    padding-left: {{ container_pad_m }}px; padding-right: {{ container_pad_m }}px;
    max-width: none !important;
    width: 100vw !important;
    margin-left: calc(50% - 50vw) !important;
    margin-right: calc(50% - 50vw) !important;
  }

  #{{ s.anchor_id | default: 'section-' | append: section.id }}.q-split-content{ overflow-x: clip; }

  @media (min-width:768px){
    #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-container{
      padding-left: {{ container_pad_d }}px; padding-right: {{ container_pad_d }}px;
    }
  }

  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-row{
    display:flex; flex-direction: column; align-items: stretch; gap:0;
    min-height: var(--q-min-h, 60vh);
  }
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-col{
    width:100%; display:flex; flex: 1 1 auto; min-height:0;
  }
  @media (min-width:768px){
    #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-row{ flex-direction: {{ dir_css }}; }
    #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-col{ width:50%; }
  }

  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-img{ order: {{ img_order_m }}; position:relative; }
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-content-side{ order: {{ content_order_m }}; }
  @media (min-width:768px){
    #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-img,
    #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-content-side{ order: initial; }
  }

  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-hide-m{ display:none; }
  @media (min-width:768px){
    #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-hide-m{ display:flex; }
  }

  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-show-m{ display:block; }
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-show-d{ display:none; }
  @media (min-width:768px){
    #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-show-m{ display:none; }
    #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-show-d{ display:block; }
  }

  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-img-el{ width:100%; height:100%; object-fit:cover; display:block; }

  /* Panel */
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-panel{
    position: relative; width:100%; height:100%;
    flex: 1 1 auto; display:flex; align-items:center;
  }
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-inner{
    margin-left:auto; margin-right:auto;
    display:flex; flex-direction:column;
    align-items: var(--content-align, flex-start);
  }
  @media (min-width:768px){
    #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-inner{
      padding-top: {{ cpy_d }}px; padding-bottom: {{ cpy_d }}px;
      padding-left: {{ cpx_d }}px; padding-right: {{ cpx_d }}px;
    }
  }

  /* Desktop defaults driven by vars so mobile can override later */
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-kicker  { color: var(--d-kicker); }
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-heading { color: var(--d-heading); }
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-sub     { color: var(--d-sub); }

  /* Mobile background mode visuals */
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-panel--m-bg{ background-image: none; }
  @media (max-width:767.98px){
    #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-panel--m-bg{
      background-image: var(--m-bg, none);
      background-size: cover; background-position: center; background-repeat: no-repeat;
      background-color: transparent !important;
      margin-left: calc(50% - 50vw); margin-right: calc(50% - 50vw); width: 100vw;
    }
    #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-panel--m-bg::before{
      content:""; position:absolute; inset:0; pointer-events:none;
      background-color: var(--m-ov, rgba(0,0,0,0));
      opacity: var(--m-ov-o, .35);
    }
    #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-panel--m-bg .q-inner{
      position: relative; z-index: 1;
      padding-left: max(20px, env(safe-area-inset-left)) !important;
      padding-right: max(20px, env(safe-area-inset-right)) !important;
      padding-top: clamp(16px, 5vh, 48px) !important;
      padding-bottom: clamp(16px, 8vh, 72px) !important;
    }
  }

  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-cap{
    position:absolute; right:8px; bottom:8px;
    font-size:11px; color:#fff; background:rgba(0,0,0,.4);
    padding:4px 8px; border-radius:6px;
  }

  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-stars{ margin:6px 0 12px 0; display:flex; align-items:center; gap:8px; }
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-stars-row{ display:flex; gap:2px; }
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-star-fade{ opacity:.3; }
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-stars-text{ font-size:14px; }

  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-badges{ margin-top:12px; display:flex; flex-wrap:wrap; gap:12px; opacity:.9; font-size:12px; }

  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-btns{
    display:flex; flex-wrap:wrap; gap:12px; margin-top:8px;
    justify-content: var(--cta-justify, flex-start);
  }

  /* Buttons: map base tokens to finals */
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-btn{
    --btn-text: var(--btn-text-base);
    --btn-bg: var(--btn-bg-base);
    --btn-border: var(--btn-border-base);

    display:inline-flex; align-items:center; gap:8px; font-weight:500; text-decoration:none;
    color: var(--btn-text) !important;
    background-color: var(--btn-bg) !important;
    border-style: solid; border-color: var(--btn-border) !important; border-width: var(--btn-bw, 1px);
    border-radius: var(--btn-radius);
    padding-left: var(--btn-px); padding-right: var(--btn-px);
    padding-top: var(--btn-py);  padding-bottom: var(--btn-py);
    transition:transform .15s ease, box-shadow .15s ease, background-color .2s ease, color .2s ease, border-color .2s ease;
    will-change: transform;
  }

  /* Make sure visited + nested elements inherit the forced color */
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-btn:visited{ color: var(--btn-text) !important; background-color: var(--btn-bg) !important; border-color: var(--btn-border) !important; }
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-btn *, 
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-btn:visited * { color: inherit !important; }
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-btn svg { fill: currentColor !important; stroke: currentColor !important; }

  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-btn:focus-visible{ outline:2px solid rgba(0,0,0,.45); outline-offset:2px; }
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-btn:hover{ transform:translateY(-1px); box-shadow:0 4px 14px rgb(0 0 0 / 0.12); }

  /* =========================================
     Mobile & tablet overrides (≤1024px wide)
     ========================================= */
  @media (max-width:1023.98px){
    #{{ s.anchor_id | default: 'section-' | append: section.id }}{
      {% if m_kicker != blank %}--d-kicker: var(--m-kicker);{% endif %}
      {% if m_heading != blank %}--d-heading: var(--m-heading);{% endif %}
      {% if m_text   != blank %}--d-sub: var(--m-sub);{% endif %}
    }

    /* CTA overrides if set */
    #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-btn{
      {% if s.mobile_button_text_color != blank %}--btn-text: var(--m-btn-text);{% endif %}
      {% if s.mobile_button_bg_color   != blank %}--btn-bg: var(--m-btn-bg);{% endif %}
      {% if s.mobile_button_border_color != blank %}--btn-border: var(--m-btn-border);{% endif %}
    }

    /* In bg mode, default to white when mobile text not set */
    #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-panel--m-bg .q-kicker{ color: var(--m-kicker, #fff) !important; }
    #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-panel--m-bg .q-heading{ color: var(--m-heading, #fff) !important; }
    #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-panel--m-bg .q-sub    { color: var(--m-sub,     #fff) !important; }
  }
</style>

{% schema %}
{
  "name": "Split Content — Banner",
  "tag": "section",
  "class": "q-split-content",
  "settings": [
    { "type": "header", "content": "Media" },
    { "type": "image_picker", "id": "image", "label": "Desktop image" },
    { "type": "text", "id": "image_alt", "label": "Image alt (desktop)" },
    { "type": "image_picker", "id": "mobile_image", "label": "Mobile image (optional)" },
    { "type": "text", "id": "mobile_image_alt", "label": "Image alt (mobile)" },
    { "type": "text", "id": "image_caption", "label": "Image caption (optional)" },
    { "type": "select", "id": "image_position", "label": "Image position (desktop)", "options": [
      { "value": "left", "label": "Left" }, { "value": "right", "label": "Right" }
    ], "default": "left" },

    { "type": "header", "content": "Mobile presentation" },
    { "type": "select", "id": "mobile_presentation", "label": "Mobile layout", "default": "stack", "options": [
      { "value": "stack", "label": "Stacked (image then copy)" },
      { "value": "bg", "label": "Background image behind copy" }
    ]},
    { "type": "checkbox", "id": "mobile_image_first", "label": "Show image above content on mobile (stacked only)", "default": true },
    { "type": "color", "id": "mobile_overlay_color", "label": "Mobile overlay color (bg mode)", "default": "#000000" },
    { "type": "range", "id": "mobile_overlay_opacity", "label": "Mobile overlay opacity (bg mode)", "min": 0, "max": 100, "step": 5, "default": 35, "unit": "%" },

    { "type": "header", "content": "Mobile text overrides (≤1024px)" },
    { "type": "color", "id": "heading_color_mobile", "label": "Heading color (mobile)", "default": "#fff" },
    { "type": "color", "id": "text_color_mobile", "label": "Paragraph/subheading color (mobile)", "default": "#fff" },

    { "type": "paragraph", "content": "Legacy keys (supported for back-compat):" },
    { "type": "color", "id": "mobile_heading_color", "label": "Heading color (legacy)", "default": "#fff" },
    { "type": "color", "id": "mobile_subheading_color", "label": "Subheading color (legacy)", "default": "#fff" },
    { "type": "color", "id": "mobile_kicker_color", "label": "Kicker color (mobile)", "default": "#fff" },

    { "type": "header", "content": "Mobile CTA overrides (optional)" },
    { "type": "color", "id": "mobile_button_text_color", "label": "CTA text (mobile)", "default": "#fff" },
    { "type": "color", "id": "mobile_button_bg_color", "label": "CTA background (mobile)", "default": "#fff" },
    { "type": "color", "id": "mobile_button_border_color", "label": "CTA border (mobile)", "default": "#fff" },

    { "type": "header", "content": "Layout & spacing" },
    { "type": "select", "id": "min_height", "label": "Minimum height", "default": "min-h-[60vh]", "options": [
      { "value": "min-h-[40vh]", "label": "40% viewport" },
      { "value": "min-h-[50vh]", "label": "50% viewport" },
      { "value": "min-h-[60vh]", "label": "60% viewport" },
      { "value": "min-h-[75vh]", "label": "75% viewport" }
    ]},
    { "type": "select", "id": "container_mode", "label": "Container", "default": "full", "options": [
      { "value": "contained", "label": "Contained (side padding)" },
      { "value": "full", "label": "Full-bleed (edge to edge)" }
    ]},
    { "type": "select", "id": "content_max_w", "label": "Content width (max measure)", "default": "max-w-3xl", "options": [
      { "value": "max-w-2xl", "label": "Narrow" },
      { "value": "max-w-3xl", "label": "Comfort" },
      { "value": "max-w-4xl", "label": "Wide" }
    ]},
    { "type": "text", "id": "content_pad_y", "label": "Content vertical padding (Tailwind utilities)", "default": "py-12 md:py-16" },
    { "type": "text", "id": "content_pad_x", "label": "Content horizontal padding (Tailwind utilities)", "default": "px-6 md:px-10" },

    { "type": "header", "content": "Content (desktop defaults)" },
    { "type": "color", "id": "content_bg_color", "label": "Content background (desktop & stacked mobile)", "default": "#ffffff" },

    { "type": "text", "id": "kicker", "label": "Kicker", "default": "Featured" },
    { "type": "color", "id": "kicker_color", "label": "Kicker color (desktop)", "default": "#111827" },
    { "type": "select", "id": "kicker_size", "label": "Kicker size", "options": [
      { "value": "sm", "label": "Small" }, { "value": "base", "label": "Normal" }, { "value": "lg", "label": "Large" }], "default": "sm"
    },

    { "type": "text", "id": "heading", "label": "Heading", "default": "Discover the collection" },
    { "type": "select", "id": "heading_level", "label": "Heading level", "default": "h2", "options": [
      { "value": "h1", "label": "H1 (page headline)" }, { "value": "h2", "label": "H2 (section headline)" }
    ]},
    { "type": "color", "id": "heading_color", "label": "Heading color (desktop)", "default": "#111827" },
    { "type": "select", "id": "heading_size", "label": "Heading size", "options": [
      { "value": "2xl", "label": "2XL" }, { "value": "3xl", "label": "3XL" }, { "value": "4xl", "label": "4XL" }], "default": "3xl"
    },

    { "type": "textarea", "id": "subheading", "label": "Subheading", "default": "Crafted for style. Built for performance." },
    { "type": "color", "id": "subheading_color", "label": "Subheading color (desktop)", "default": "#374151" },
    { "type": "select", "id": "subheading_size", "label": "Subheading size", "options": [
      { "value": "base", "label": "Base" }, { "value": "lg", "label": "Large" }, { "value": "xl", "label": "XL" }], "default": "base"
    },

    { "type": "header", "content": "Alignment & visibility" },
    { "type": "select", "id": "text_alignment", "label": "Text alignment", "options": [
      { "value": "left", "label": "Left" }, { "value": "center", "label": "Center" }, { "value": "right", "label": "Right" }], "default": "left"
    },
    { "type": "text", "id": "anchor_id", "label": "Optional anchor ID", "default": "features" },
    { "type": "text", "id": "region_label", "label": "Accessible region label", "default": "Promotional banner" },
    { "type": "checkbox", "id": "hide_on_mobile", "label": "Hide on mobile", "default": false },
    { "type": "checkbox", "id": "hide_on_desktop", "label": "Hide on desktop", "default": false },

    { "type": "header", "content": "Section background (rare)" },
    { "type": "text", "id": "section_bg", "label": "Section background (CSS color / Tailwind value)", "default": "transparent" }
  ],
  "blocks": [
    {
      "type": "button",
      "name": "Button",
      "settings": [
        { "type": "text", "id": "label", "label": "Label", "default": "Shop now" },
        { "type": "url", "id": "link", "label": "Link", "default": "/collections/all" },
        { "type": "text", "id": "aria_label", "label": "ARIA label", "default": "Shop now" },
        { "type": "select", "id": "size", "label": "Size", "default": "md", "options": [
          { "value": "sm", "label": "Small" }, { "value": "md", "label": "Medium" }, { "value": "lg", "label": "Large" }
        ]},
        { "type": "checkbox", "id": "new_tab", "label": "Open in new tab", "default": false },
        { "type": "select", "id": "button_mode", "label": "Style", "options": [
          { "value": "solid", "label": "Solid" }, { "value": "outline", "label": "Outline" }], "default": "solid"
        },
        { "type": "text", "id": "icon", "label": "Icon (SVG/HTML)" },
        { "type": "color", "id": "bg_color", "label": "Background (solid)", "default": "#111111" },
        { "type": "color", "id": "text_color", "label": "Text color", "default": "#ffffff" },
        { "type": "color", "id": "border_color", "label": "Border color (outline)", "default": "#111111" },
        { "type": "range", "id": "border_width", "label": "Border width (outline)", "min": 0, "max": 8, "step": 1, "default": 1 },
        { "type": "range", "id": "radius", "label": "Radius", "min": 0, "max": 50, "step": 2, "default": 6 }
      ]
    },
    {
      "type": "badge",
      "name": "Badge",
      "settings": [
        { "type": "text", "id": "badge_text", "label": "Badge text", "default": "Free shipping over $50" },
        { "type": "text", "id": "badge_icon", "label": "Icon (SVG/HTML)" }
      ]
    }
  ],
  "max_blocks": 8,
  "presets": [
    { "name": "Split Content — Banner", "category": "Banner", "blocks": [{ "type": "button" }, { "type": "button" }, { "type": "badge" }] }
  ]
}
{% endschema %}
