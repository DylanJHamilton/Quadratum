{% comment %}
  Quadratum • Grid Banner
  Purpose: Flexible promo grid (2–4 columns) with image/video tiles, overlay, text, and CTAs.
  Notes:
  - Fixes quote issues in image_tag by building sizes into a variable (no nested Liquid in strings).
  - Non-empty defaults for schema fields (kicker, heading).
  - No inline "#" comments inside Liquid to avoid parser quirks.
  - First tile eager; others lazy. Analytics hooks behind a toggle.
{% endcomment %}

{% assign s = section.settings %}

{%- comment -%} Grid columns mapping {%- endcomment -%}
{% assign cols = s.cols_desktop | default: '3' %}
{% case cols %}
  {% when '2' %}{% assign grid_cols = 'grid-cols-1 sm:grid-cols-2' %}
  {% when '3' %}{% assign grid_cols = 'grid-cols-1 sm:grid-cols-2 lg:grid-cols-3' %}
  {% when '4' %}{% assign grid_cols = 'grid-cols-1 sm:grid-cols-2 lg:grid-cols-4' %}
  {% else %}{% assign grid_cols = 'grid-cols-1 sm:grid-cols-2 lg:grid-cols-3' %}
{% endcase %}

{%- comment -%} Gap & container {%- endcomment -%}
{% assign gap_class = s.gap | default: 'gap-4 md:gap-6' %}
{% assign container_pad = '' %}
{% if s.container_mode == 'contained' %}
  {% assign container_pad = 'px-4 md:px-6' %}
{% endif %}

{%- comment -%} Visibility toggles {%- endcomment -%}
{% assign visibility_classes = '' %}
{% if s.hide_on_mobile %}{% assign visibility_classes = visibility_classes | append: ' hidden md:block' %}{% endif %}
{% if s.hide_on_desktop %}{% assign visibility_classes = visibility_classes | append: ' md:hidden' %}{% endif %}

<section
  id="{{ s.anchor_id | default: 'section-' | append: section.id }}"
  class="relative {{ s.pad_y | default: 'py-12 md:py-16' }}{{ visibility_classes }}"
  role="region"
  aria-label="{{ s.region_label | default: 'Promotional grid' }}"
>
  {% if s.kicker != blank or s.heading != blank or s.subheading != blank %}
    <div class="mx-auto max-w-screen-xl {{ container_pad }} mb-8 md:mb-10">
      {% if s.kicker != blank %}
        <p class="text-sm font-semibold tracking-wide uppercase text-muted-foreground rtl:text-right">{{ s.kicker }}</p>
      {% endif %}
      {% if s.heading != blank %}
        <h2 class="mt-2 text-2xl md:text-4xl font-semibold leading-tight">{{ s.heading | escape }}</h2>
      {% endif %}
      {% if s.subheading != blank %}
        <p class="mt-3 text-base md:text-lg text-muted-foreground">{{ s.subheading }}</p>
      {% endif %}
    </div>
  {% endif %}

  <div class="mx-auto max-w-screen-xl {{ container_pad }}">
    <div class="grid {{ grid_cols }} {{ gap_class }}">
      {% assign total = section.blocks.size %}
      {% for block in section.blocks %}
        {% assign b = block.settings %}

        {%- comment -%} Per-tile alignment and sizing {%- endcomment -%}
        {% assign text_alignment = b.text_alignment | default: 'center' %}
        {% assign text_align_class = 'text-' | append: text_alignment %}

        {% assign cta_align = b.cta_group_align | default: 'center' %}
        {% assign cta_justify = 'justify-center' %}
        {% if cta_align == 'left' %}{% assign cta_justify = 'justify-start' %}{% endif %}
        {% if cta_align == 'right' %}{% assign cta_justify = 'justify-end' %}{% endif %}

        {% assign obj_pos = b.object_position | default: 'center center' %}
        {% assign obj_pos_style = 'object-position: ' | append: obj_pos | append: ';' %}

        {%- comment -%} Sizes string & widths for responsive images {%- endcomment -%}
        {% assign sizes_str = '(min-width: 1024px) calc(100vw / ' | append: cols | append: '), (min-width: 640px) 50vw, 100vw' %}
        {% assign widths_str = '320,480,640,750,828,960,1080,1280,1440,1680' %}

        {%- comment -%} Eager only on first tile {%- endcomment -%}
        {% if forloop.first %}
          {% assign loading_attr = 'eager' %}
          {% assign fetchpriority_attr = 'high' %}
        {% else %}
          {% assign loading_attr = 'lazy' %}
          {% assign fetchpriority_attr = 'auto' %}
        {% endif %}

        {%- comment -%} CTA URLs: prefer explicit URL, then product/collection/article {%- endcomment -%}
        {% assign cta_href = b.cta_link %}
        {% if cta_href == blank and b.cta_product %}{% assign cta_href = b.cta_product.url %}{% endif %}
        {% if cta_href == blank and b.cta_collection %}{% assign cta_href = b.cta_collection.url %}{% endif %}
        {% if cta_href == blank and b.cta_article %}{% assign cta_href = b.cta_article.url %}{% endif %}

        {% assign cta2_href = b.cta2_link %}
        {% if cta2_href == blank and b.cta2_product %}{% assign cta2_href = b.cta2_product.url %}{% endif %}
        {% if cta2_href == blank and b.cta2_collection %}{% assign cta2_href = b.cta2_collection.url %}{% endif %}
        {% if cta2_href == blank and b.cta2_article %}{% assign cta2_href = b.cta2_article.url %}{% endif %}

        <article
          class="relative overflow-hidden rounded-2xl bg-card ring-1 ring-border group focus-within:ring-2 focus-within:ring-primary"
          aria-label="{{ b.heading | default: b.kicker | default: 'Promotional tile' | escape }}"
          {{ block.shopify_attributes }}
        >
          <!-- Media -->
          <div class="absolute inset-0 z-0 overflow-hidden">
            {% if b.background_video != blank %}
              <video
                class="absolute inset-0 w-full h-full object-cover"
                style="{{ obj_pos_style }}"
                autoplay loop muted playsinline preload="none"
                {% if b.background_image != blank %}poster="{{ b.background_image | image_url: width: 1280 }}"{% endif %}
              >
                <source src="{{ b.background_video }}" type="video/mp4">
              </video>
            {% elsif b.background_image != blank %}
              {% if b.mobile_image != blank %}
                <picture>
                  <source media="(max-width: 639px)" srcset="{{ b.mobile_image | image_url: width: 960 }}">
                  {{ b.background_image
                    | image_url: width: 1680
                    | image_tag:
                      widths: widths_str,
                      sizes: sizes_str,
                      loading: loading_attr,
                      fetchpriority: fetchpriority_attr,
                      class: 'absolute inset-0 w-full h-full object-cover',
                      alt: b.image_alt }}
                </picture>
              {% else %}
                {{ b.background_image
                  | image_url: width: 1680
                  | image_tag:
                    widths: widths_str,
                    sizes: sizes_str,
                    loading: loading_attr,
                    fetchpriority: fetchpriority_attr,
                    class: 'absolute inset-0 w-full h-full object-cover',
                    alt: b.image_alt }}
              {% endif %}
            {% endif %}
          </div>

          <!-- Overlay -->
          <div class="absolute inset-0 z-0" aria-hidden="true"
               style="background-color: {{ b.overlay_color | default: s.overlay_color }};
                      opacity: {{ b.overlay_opacity | default: s.overlay_opacity | divided_by: 100.0 }};">
          </div>

          <!-- Content -->
          <div class="relative z-10 w-full h-full">
            <div class="flex items-center justify-center">
              <div class="w-full {{ s.content_max_w | default: 'max-w-3xl' }} {{ s.pad_content | default: 'p-8 md:p-10' }} {{ text_align_class }} mx-auto">
                {% if b.kicker != blank %}
                  <p class="mb-2 text-sm font-semibold tracking-wide uppercase text-primary-foreground/90">{{ b.kicker }}</p>
                {% endif %}

                {% if b.heading != blank %}
                  <h3 class="font-semibold leading-tight text-2xl md:text-3xl text-primary-foreground">{{ b.heading }}</h3>
                {% endif %}

                {% if b.subheading != blank %}
                  <p class="mt-2 text-base md:text-lg text-primary-foreground/90 {% if b.hide_text_mobile %}hidden md:block{% endif %}">
                    {{ b.subheading }}
                  </p>
                {% endif %}

                {% assign has_cta1 = false %}
                {% if b.cta_text != blank and cta_href != blank %}{% assign has_cta1 = true %}{% endif %}
                {% assign has_cta2 = false %}
                {% if b.cta2_text != blank and cta2_href != blank %}{% assign has_cta2 = true %}{% endif %}

                {% if has_cta1 or has_cta2 %}
                  <div class="mt-4 flex flex-wrap gap-3 {{ cta_justify }} {% if b.hide_buttons_mobile %}hidden md:flex{% endif %}">
                    {% if has_cta1 %}
                      <a
                        href="{{ cta_href }}"
                        data-cta="primary"
                        data-slide-index="{{ forloop.index0 }}"
                        aria-label="{{ b.cta_aria_label | default: b.cta_text | escape }}"
                        class="inline-flex items-center justify-center rounded-xl px-4 py-2 text-sm font-medium focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 transition
                               {% if s.button_mode == 'outline' %}border bg-transparent{% else %}bg-primary text-primary-foreground hover:opacity-90{% endif %}"
                        style="
                          {% if s.button_mode == 'outline' %}
                            color: {{ s.button_text_color }};
                            border-color: {{ s.button_border_color }};
                            border-width: {{ s.button_border_width }}px;
                          {% else %}
                            color: {{ s.button_text_color }};
                            background-color: {{ s.button_bg_color }};
                          {% endif %}
                          border-radius: {{ s.button_radius }}px;
                        "
                      >{{ b.cta_text }}</a>
                    {% endif %}
                    {% if has_cta2 %}
                      <a
                        href="{{ cta2_href }}"
                        data-cta="secondary"
                        data-slide-index="{{ forloop.index0 }}"
                        aria-label="{{ b.cta2_aria_label | default: b.cta2_text | escape }}"
                        class="inline-flex items-center justify-center rounded-xl px-4 py-2 text-sm font-medium focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 transition
                               {% if s.button_mode == 'outline' %}border bg-transparent{% else %}border border-input bg-background hover:bg-accent hover:text-accent-foreground{% endif %}"
                        style="
                          {% if s.button_mode == 'outline' %}
                            color: {{ s.button_text_color }};
                            border-color: {{ s.button_border_color }};
                            border-width: {{ s.button_border_width }}px;
                          {% else %}
                            color: {{ s.button_text_color }};
                          {% endif %}
                          border-radius: {{ s.button_radius }}px;
                        "
                      >{{ b.cta2_text }}</a>
                    {% endif %}
                  </div>
                {% endif %}
              </div>
            </div>
          </div>
        </article>
      {% endfor %}
    </div>
  </div>

  {% if s.send_events %}
    <script>
      (function() {
        var root = document.getElementById('{{ s.anchor_id | default: 'section-' | append: section.id }}');
        if (!root) return;
        root.addEventListener('click', function(e) {
          var a = e.target.closest('a[data-cta]');
          if (!a) return;
          var payload = {
            component: 'grid_banner',
            cta_type: a.getAttribute('data-cta'),
            index: Number(a.getAttribute('data-slide-index')),
            href: a.getAttribute('href')
          };
          window.dispatchEvent(new CustomEvent('quadratum:cta', { detail: payload }));
          if (window.dataLayer && Array.isArray(window.dataLayer)) {
            window.dataLayer.push({ event: 'quadratum_cta', component: payload.component, cta_type: payload.cta_type, index: payload.index, href: payload.href });
          }
        });
      })();
    </script>
  {% endif %}
</section>

{% render 'tw-safelist-banners' %}

{% schema %}
{
  "name": "Grid Banner",
  "tag": "section",
  "class": "q-grid-banner",
  "settings": [
    { "type": "header", "content": "Heading" },
    { "type": "text", "id": "kicker", "label": "Kicker", "default": "Featured" },
    { "type": "text", "id": "heading", "label": "Heading", "default": "Explore our latest drops" },
    { "type": "textarea", "id": "subheading", "label": "Subheading", "default": "Curated picks, limited runs, and everyday essentials." },

    { "type": "header", "content": "Layout" },
    { "type": "select", "id": "cols_desktop", "label": "Columns (desktop)", "default": "3", "options": [
      { "value": "2", "label": "2" },
      { "value": "3", "label": "3" },
      { "value": "4", "label": "4" }
    ]},
    { "type": "select", "id": "gap", "label": "Tile gap", "default": "gap-4 md:gap-6", "options": [
      { "value": "gap-3 md:gap-4", "label": "Tight" },
      { "value": "gap-4 md:gap-6", "label": "Comfort" },
      { "value": "gap-6 md:gap-8", "label": "Roomy" }
    ]},
    { "type": "select", "id": "container_mode", "label": "Container", "default": "contained", "options": [
      { "value": "contained", "label": "Contained (side padding)" },
      { "value": "full", "label": "Full-bleed (edge to edge)" }
    ]},
    { "type": "select", "id": "content_max_w", "label": "Content width", "default": "max-w-3xl", "options": [
      { "value": "max-w-2xl", "label": "Narrow" },
      { "value": "max-w-3xl", "label": "Comfort" },
      { "value": "max-w-4xl", "label": "Wide" }
    ]},
    { "type": "select", "id": "pad_y", "label": "Vertical padding", "default": "py-12 md:py-16", "options": [
      { "value": "py-8 md:py-12", "label": "Small" },
      { "value": "py-12 md:py-16", "label": "Medium" },
      { "value": "py-16 md:py-24", "label": "Large" }
    ]},
    { "type": "select", "id": "pad_content", "label": "Tile inner padding", "default": "p-8 md:p-10", "options": [
      { "value": "p-6 md:p-8", "label": "Small" },
      { "value": "p-8 md:p-10", "label": "Medium" },
      { "value": "p-10 md:p-12", "label": "Large" }
    ]},

    { "type": "header", "content": "Overlay (defaults)" },
    { "type": "color", "id": "overlay_color", "label": "Overlay color", "default": "#000000" },
    { "type": "range", "id": "overlay_opacity", "label": "Overlay opacity", "min": 0, "max": 100, "step": 5, "default": 30, "unit": "%" },

    { "type": "header", "content": "Buttons (global defaults)" },
    { "type": "select", "id": "button_mode", "label": "Button style", "default": "solid", "options": [
      { "value": "solid", "label": "Solid" },
      { "value": "outline", "label": "Outline" }
    ]},
    { "type": "color", "id": "button_bg_color", "label": "Button background (solid)", "default": "#111111" },
    { "type": "color", "id": "button_text_color", "label": "Button text color", "default": "#ffffff" },
    { "type": "color", "id": "button_border_color", "label": "Button border color (outline)", "default": "#ffffff" },
    { "type": "range", "id": "button_border_width", "label": "Outline border width", "min": 0, "max": 6, "step": 1, "default": 1 },
    { "type": "range", "id": "button_radius", "label": "Corner radius", "min": 0, "max": 36, "step": 2, "default": 12 },

    { "type": "header", "content": "Visibility & analytics" },
    { "type": "text", "id": "anchor_id", "label": "Optional anchor ID" },
    { "type": "text", "id": "region_label", "label": "Accessible region label", "default": "Promotional grid" },
    { "type": "checkbox", "id": "hide_on_mobile", "label": "Hide on mobile", "default": false },
    { "type": "checkbox", "id": "hide_on_desktop", "label": "Hide on desktop", "default": false },
    { "type": "checkbox", "id": "send_events", "label": "Send analytics events on CTA clicks", "default": false }
  ],
  "blocks": [
    {
      "type": "tile",
      "name": "Tile",
      "settings": [
        { "type": "header", "content": "Background media" },
        { "type": "image_picker", "id": "background_image", "label": "Background image" },
        { "type": "image_picker", "id": "mobile_image", "label": "Mobile image (optional)" },
        { "type": "text", "id": "background_video", "label": "Background video URL (MP4)" },
        { "type": "text", "id": "image_alt", "label": "Image alt text", "info": "Describe the image for accessibility (or leave blank if decorative)." },

        { "type": "select", "id": "object_position", "label": "Image focal point", "default": "center center", "options": [
          { "value": "center center", "label": "Center" },
          { "value": "top left", "label": "Top left" },
          { "value": "top center", "label": "Top center" },
          { "value": "top right", "label": "Top right" },
          { "value": "center left", "label": "Middle left" },
          { "value": "center right", "label": "Middle right" },
          { "value": "bottom left", "label": "Bottom left" },
          { "value": "bottom center", "label": "Bottom center" },
          { "value": "bottom right", "label": "Bottom right" }
        ]},

        { "type": "header", "content": "Overlay (per tile)" },
        { "type": "color", "id": "overlay_color", "label": "Overlay color", "default": "#000000" },
        { "type": "range", "id": "overlay_opacity", "label": "Overlay opacity", "min": 0, "max": 100, "step": 5, "default": 0, "unit": "%" },

        { "type": "header", "content": "Text & icon" },
        { "type": "select", "id": "icon_name", "label": "Kicker icon", "default": "none", "options": [
          { "value": "none", "label": "None" },
          { "value": "star", "label": "Star" },
          { "value": "tag", "label": "Tag" },
          { "value": "spark", "label": "Spark" }
        ]},
        { "type": "text", "id": "kicker", "label": "Kicker", "default": "Featured" },
        { "type": "text", "id": "heading", "label": "Heading", "default": "Tile headline" },
        { "type": "textarea", "id": "subheading", "label": "Short description", "default": "A quick benefit-driven sentence to help visitors act." },
        { "type": "checkbox", "id": "hide_text_mobile", "label": "Hide text on mobile", "default": false },

        { "type": "header", "content": "Buttons" },
        { "type": "select", "id": "cta_group_align", "label": "Button alignment", "default": "center", "options": [
          { "value": "left", "label": "Left" }, { "value": "center", "label": "Center" }, { "value": "right", "label": "Right" }
        ]},
        { "type": "text", "id": "cta_text", "label": "Primary button text", "default": "Shop now" },
        { "type": "url", "id": "cta_link", "label": "Primary button URL" },
        { "type": "product", "id": "cta_product", "label": "…or link to product" },
        { "type": "collection", "id": "cta_collection", "label": "…or link to collection" },
        { "type": "article", "id": "cta_article", "label": "…or link to article" },
        { "type": "text", "id": "cta_aria_label", "label": "Primary button ARIA label", "default": "Shop now" },

        { "type": "text", "id": "cta2_text", "label": "Secondary button text", "default": "Learn more" },
        { "type": "url", "id": "cta2_link", "label": "Secondary button URL" },
        { "type": "product", "id": "cta2_product", "label": "…or link to product" },
        { "type": "collection", "id": "cta2_collection", "label": "…or link to collection" },
        { "type": "article", "id": "cta2_article", "label": "…or link to article" },
        { "type": "text", "id": "cta2_aria_label", "label": "Secondary button ARIA label", "default": "Learn more" },

        { "type": "header", "content": "Alignment" },
        { "type": "select", "id": "text_alignment", "label": "Text alignment", "default": "center", "options": [
          { "value": "left", "label": "Left" }, { "value": "center", "label": "Center" }, { "value": "right", "label": "Right" }
        ]}
      ]
    }
  ],
  "max_blocks": 6,
  "presets": [
    {
      "name": "Grid Banner • Sale",
      "category": "Banner",
      "blocks": [
        { "type": "tile", "settings": { "kicker": "Sale", "heading": "Extra 20% off", "subheading": "Today only. Limited stock.", "cta_text": "Shop deals" } },
        { "type": "tile", "settings": { "kicker": "Bundles", "heading": "Buy 2, save more", "cta_text": "Build bundle" } },
        { "type": "tile", "settings": { "kicker": "Last chance", "heading": "Final markdowns", "cta_text": "Shop clearance" } }
      ]
    },
    {
      "name": "Grid Banner • Drop",
      "category": "Banner",
      "blocks": [
        { "type": "tile", "settings": { "icon_name": "spark", "kicker": "New", "heading": "Fresh arrivals", "cta_text": "Shop new" } },
        { "type": "tile", "settings": { "kicker": "Limited", "heading": "Member exclusives", "cta_text": "Join free" } },
        { "type": "tile", "settings": { "kicker": "Editors’ pick", "heading": "Season essentials", "cta_text": "See picks" } }
      ]
    },
    {
      "name": "Grid Banner • Editorial",
      "category": "Banner",
      "blocks": [
        { "type": "tile", "settings": { "kicker": "Story", "heading": "Behind the craft", "cta_text": "Read" } },
        { "type": "tile", "settings": { "kicker": "Guide", "heading": "Find your fit", "cta_text": "Explore" } },
        { "type": "tile", "settings": { "kicker": "Feature", "heading": "Sustainable picks", "cta_text": "Learn more" } }
      ]
    },
    {
      "name": "Grid Banner • Video",
      "category": "Banner",
      "blocks": [
        { "type": "tile", "settings": { "icon_name": "star", "kicker": "Spotlight", "heading": "In motion", "cta_text": "Watch" } },
        { "type": "tile", "settings": { "kicker": "How-to", "heading": "Quick tutorials", "cta_text": "View" } },
        { "type": "tile", "settings": { "kicker": "Community", "heading": "Member stories", "cta_text": "Discover" } }
      ]
    }
  ]
}
{% endschema %}
