{% comment %}
  Split Content â€¢ Dynamic
  - 50/50 split with equal column heights
  - Optional full-bleed that ignores theme container boxing
  - Mobile modes: "stack" (image + copy) or "bg" (image behind copy)
  - Content vertically centered; CTA alignment follows text alignment
  - Inner content has max-width for readable measure
{% endcomment %}

{% assign s = section.settings %}

{% comment %} ---------------- Layout logic ---------------- {% endcomment %}
{% assign dir_css = 'row' %}
{% if s.image_position == 'right' %}
  {% assign dir_css = 'row-reverse' %}
{% endif %}

{% assign img_order_m = 1 %}
{% assign content_order_m = 2 %}
{% unless s.mobile_image_first %}
  {% assign img_order_m = 2 %}
  {% assign content_order_m = 1 %}
{% endunless %}

{% assign container_pad_m = 0 %}
{% assign container_pad_d = 0 %}
{% if s.container_mode == 'contained' %}
  {% assign container_pad_m = 16 %}
  {% assign container_pad_d = 24 %}
{% endif %}

{% assign max_w_token = s.content_max_w | default: 'max-w-3xl' %}
{% assign max_w_px = '768px' %}
{% if max_w_token == 'max-w-2xl' %}
  {% assign max_w_px = '672px' %}
{% elsif max_w_token == 'max-w-4xl' %}
  {% assign max_w_px = '896px' %}
{% endif %}

{% assign visibility_classes = '' %}
{% if s.hide_on_mobile %}
  {% assign visibility_classes = visibility_classes | append: ' hidden md:block' %}
{% endif %}
{% if s.hide_on_desktop %}
  {% assign visibility_classes = visibility_classes | append: ' md:hidden' %}
{% endif %}

{% assign min_h_value = '50vh' %}
{% if s.min_height == 'min-h-[40vh]' %}
  {% assign min_h_value = '40vh' %}
{% elsif s.min_height == 'min-h-[60vh]' %}
  {% assign min_h_value = '60vh' %}
{% elsif s.min_height == 'min-h-[75vh]' %}
  {% assign min_h_value = '75vh' %}
{% endif %}

{% assign text_align_value = 'left' %}
{% if s.text_alignment == 'center' %}
  {% assign text_align_value = 'center' %}
{% elsif s.text_alignment == 'right' %}
  {% assign text_align_value = 'right' %}
{% endif %}

{% assign cta_justify_css = 'flex-start' %}
{% if text_align_value == 'center' %}
  {% assign cta_justify_css = 'center' %}
{% elsif text_align_value == 'right' %}
  {% assign cta_justify_css = 'flex-end' %}
{% endif %}

{% comment %} ---------------- Padding maps ---------------- {% endcomment %}
{% assign pad_y_tokens = s.content_pad_y | default: 'py-12 md:py-16' %}
{% assign pad_x_tokens = s.content_pad_x | default: 'px-4 md:px-8' %}
{% assign cpy_m = 48 %}
{% assign cpy_d = 64 %}
{% assign cpx_m = 16 %}
{% assign cpx_d = 32 %}

{% if pad_y_tokens contains 'py-0' %}{% assign cpy_m = 0 %}{% endif %}
{% if pad_y_tokens contains 'py-2' %}{% assign cpy_m = 8 %}{% endif %}
{% if pad_y_tokens contains 'py-3' %}{% assign cpy_m = 12 %}{% endif %}
{% if pad_y_tokens contains 'py-4' %}{% assign cpy_m = 16 %}{% endif %}
{% if pad_y_tokens contains 'py-5' %}{% assign cpy_m = 20 %}{% endif %}
{% if pad_y_tokens contains 'py-6' %}{% assign cpy_m = 24 %}{% endif %}
{% if pad_y_tokens contains 'py-8' %}{% assign cpy_m = 32 %}{% endif %}
{% if pad_y_tokens contains 'py-10' %}{% assign cpy_m = 40 %}{% endif %}
{% if pad_y_tokens contains 'py-12' %}{% assign cpy_m = 48 %}{% endif %}
{% if pad_y_tokens contains 'py-16' %}{% assign cpy_m = 64 %}{% endif %}
{% if pad_y_tokens contains 'py-20' %}{% assign cpy_m = 80 %}{% endif %}
{% if pad_y_tokens contains 'py-24' %}{% assign cpy_m = 96 %}{% endif %}
{% if pad_y_tokens contains 'py-32' %}{% assign cpy_m = 128 %}{% endif %}

{% if pad_y_tokens contains 'md:py-0' %}{% assign cpy_d = 0 %}{% endif %}
{% if pad_y_tokens contains 'md:py-2' %}{% assign cpy_d = 8 %}{% endif %}
{% if pad_y_tokens contains 'md:py-3' %}{% assign cpy_d = 12 %}{% endif %}
{% if pad_y_tokens contains 'md:py-4' %}{% assign cpy_d = 16 %}{% endif %}
{% if pad_y_tokens contains 'md:py-5' %}{% assign cpy_d = 20 %}{% endif %}
{% if pad_y_tokens contains 'md:py-6' %}{% assign cpy_d = 24 %}{% endif %}
{% if pad_y_tokens contains 'md:py-8' %}{% assign cpy_d = 32 %}{% endif %}
{% if pad_y_tokens contains 'md:py-10' %}{% assign cpy_d = 40 %}{% endif %}
{% if pad_y_tokens contains 'md:py-12' %}{% assign cpy_d = 48 %}{% endif %}
{% if pad_y_tokens contains 'md:py-16' %}{% assign cpy_d = 64 %}{% endif %}
{% if pad_y_tokens contains 'md:py-20' %}{% assign cpy_d = 80 %}{% endif %}
{% if pad_y_tokens contains 'md:py-24' %}{% assign cpy_d = 96 %}{% endif %}
{% if pad_y_tokens contains 'md:py-32' %}{% assign cpy_d = 128 %}{% endif %}

{% if pad_x_tokens contains 'px-0' %}{% assign cpx_m = 0 %}{% endif %}
{% if pad_x_tokens contains 'px-2' %}{% assign cpx_m = 8 %}{% endif %}
{% if pad_x_tokens contains 'px-3' %}{% assign cpx_m = 12 %}{% endif %}
{% if pad_x_tokens contains 'px-4' %}{% assign cpx_m = 16 %}{% endif %}
{% if pad_x_tokens contains 'px-5' %}{% assign cpx_m = 20 %}{% endif %}
{% if pad_x_tokens contains 'px-6' %}{% assign cpx_m = 24 %}{% endif %}
{% if pad_x_tokens contains 'px-8' %}{% assign cpx_m = 32 %}{% endif %}
{% if pad_x_tokens contains 'px-10' %}{% assign cpx_m = 40 %}{% endif %}
{% if pad_x_tokens contains 'px-12' %}{% assign cpx_m = 48 %}{% endif %}
{% if pad_x_tokens contains 'px-16' %}{% assign cpx_m = 64 %}{% endif %}
{% if pad_x_tokens contains 'px-20' %}{% assign cpx_m = 80 %}{% endif %}
{% if pad_x_tokens contains 'px-24' %}{% assign cpx_m = 96 %}{% endif %}
{% if pad_x_tokens contains 'px-32' %}{% assign cpx_m = 128 %}{% endif %}

{% if pad_x_tokens contains 'md:px-0' %}{% assign cpx_d = 0 %}{% endif %}
{% if pad_x_tokens contains 'md:px-2' %}{% assign cpx_d = 8 %}{% endif %}
{% if pad_x_tokens contains 'md:px-3' %}{% assign cpx_d = 12 %}{% endif %}
{% if pad_x_tokens contains 'md:px-4' %}{% assign cpx_d = 16 %}{% endif %}
{% if pad_x_tokens contains 'md:px-5' %}{% assign cpx_d = 20 %}{% endif %}
{% if pad_x_tokens contains 'md:px-6' %}{% assign cpx_d = 24 %}{% endif %}
{% if pad_x_tokens contains 'md:px-8' %}{% assign cpx_d = 32 %}{% endif %}
{% if pad_x_tokens contains 'md:px-10' %}{% assign cpx_d = 40 %}{% endif %}
{% if pad_x_tokens contains 'md:px-12' %}{% assign cpx_d = 48 %}{% endif %}
{% if pad_x_tokens contains 'md:px-16' %}{% assign cpx_d = 64 %}{% endif %}
{% if pad_x_tokens contains 'md:px-20' %}{% assign cpx_d = 80 %}{% endif %}
{% if pad_x_tokens contains 'md:px-24' %}{% assign cpx_d = 96 %}{% endif %}
{% if pad_x_tokens contains 'md:px-32' %}{% assign cpx_d = 128 %}{% endif %}

{% comment %} ---------------- Typography ---------------- {% endcomment %}
{% assign kicker_fs = '0.875rem' %}
{% if s.kicker_size == 'base' %}
  {% assign kicker_fs = '1rem' %}
{% elsif s.kicker_size == 'lg' %}
  {% assign kicker_fs = '1.125rem' %}
{% endif %}

{% assign heading_fs = '1.875rem' %}
{% if s.heading_size == '2xl' %}
  {% assign heading_fs = '1.5rem' %}
{% elsif s.heading_size == '4xl' %}
  {% assign heading_fs = '2.25rem' %}
{% endif %}

{% assign sub_fs = '1rem' %}
{% if s.subheading_size == 'lg' %}
  {% assign sub_fs = '1.125rem' %}
{% elsif s.subheading_size == 'xl' %}
  {% assign sub_fs = '1.25rem' %}
{% endif %}

{% assign heading_level = s.heading_level | default: 'h2' %}
{% assign desc_id = 'split-desc-' | append: section.id %}

{% assign mobile_mode = s.mobile_presentation | default: 'stack' %}
{% assign mobile_has_bg = false %}
{% if mobile_mode == 'bg' %}
  {% assign mobile_has_bg = true %}
{% endif %}

{% assign mobile_bg_img = '' %}
{% if s.mobile_image != blank %}
  {% assign mobile_bg_img = s.mobile_image | image_url: width: 1536 %}
{% elsif s.image != blank %}
  {% assign mobile_bg_img = s.image | image_url: width: 1536 %}
{% endif %}

{% assign mob_ov_color = s.mobile_overlay_color | default: '#000000' %}
{% assign mob_ov_opacity = s.mobile_overlay_opacity | default: 35 %}

<section id="{{ s.anchor_id | default: 'section-' | append: section.id }}"
         class="q-split-content{{ visibility_classes }}"
         role="region"
         aria-label="{{ s.region_label | default: 'Split content' }}"
         style="--q-min-h: {{ min_h_value }}; background-color: {{ s.section_bg | default: 'transparent' }};">

  <div class="q-container">
    <div class="q-row" data-dir="{{ dir_css }}" data-mobile-mode="{{ mobile_mode }}">
      <div class="q-col q-img{% if mobile_has_bg %} q-hide-m{% endif %}">
        {% if s.mobile_image != blank %}
          <div class="q-show-m">
            {{ s.mobile_image
              | image_url: width: 1536
              | image_tag:
                widths: '640,960,1280,1536',
                sizes: '100vw',
                loading: 'lazy',
                class: 'q-img-el',
                alt: s.mobile_image_alt | default: '' }}
          </div>
          <div class="q-show-d">
            {{ s.image
              | image_url: width: 2048
              | image_tag:
                widths: '960,1280,1536,2048',
                sizes: '(min-width: 768px) 50vw, 100vw',
                loading: 'lazy',
                class: 'q-img-el',
                alt: s.image_alt | default: '' }}
          </div>
        {% else %}
          {% if s.image != blank %}
            {{ s.image
              | image_url: width: 2048
              | image_tag:
                widths: '640,960,1280,1536,2048',
                sizes: '(min-width: 768px) 50vw, 100vw',
                loading: 'lazy',
                class: 'q-img-el',
                alt: s.image_alt | default: '' }}
          {% endif %}
        {% endif %}

        {% if s.image_caption != blank %}
          <figcaption class="q-cap">{{ s.image_caption }}</figcaption>
        {% endif %}
      </div>

      <div class="q-col q-content-side" style="
           {% if mobile_has_bg and mobile_bg_img != blank %}
             --m-bg:url('{{ mobile_bg_img }}');
             --m-ov: {{ mob_ov_color }};
             --m-ov-o: {{ mob_ov_opacity | divided_by: 100.0 }};
           {% endif %}">
        <div class="q-panel {% if mobile_has_bg %}q-panel--m-bg{% endif %}"
             style="background-color: {{ s.content_bg_color }};
                    text-align: {{ text_align_value }};">
          <div class="q-inner"
               style="max-width: {{ max_w_px }}; padding-top: {{ cpy_m }}px; padding-bottom: {{ cpy_m }}px; padding-left: {{ cpx_m }}px; padding-right: {{ cpx_m }}px;">
            {% if s.kicker != blank %}
              <p class="q-kicker" style="font-size: {{ kicker_fs }}; color: {{ s.kicker_color | default: '#111827' }};">{{ s.kicker }}</p>
            {% endif %}

            {% if s.heading != blank %}
              {% if heading_level == 'h1' %}
                <h1 class="q-heading" style="font-size: {{ heading_fs }}; color: {{ s.heading_color | default: '#111827' }};">{{ s.heading }}</h1>
              {% else %}
                <h2 class="q-heading" style="font-size: {{ heading_fs }}; color: {{ s.heading_color | default: '#111827' }};">{{ s.heading }}</h2>
              {% endif %}
            {% endif %}

            {% if s.subheading != blank %}
              <p id="{{ desc_id }}" class="q-sub" style="font-size: {{ sub_fs }}; color: {{ s.subheading_color | default: '#374151' }};">{{ s.subheading }}</p>
            {% endif %}

            {% if s.show_rating %}
              {% liquid
                assign full_stars = s.rating | default: 5 | plus: 0
                if full_stars > 5
                  assign full_stars = 5
                endif
              %}
              <div class="q-stars" aria-label="{{ full_stars }} out of 5 stars, {{ s.rating_count | default: 128 }} reviews">
                <div class="q-stars-row" aria-hidden="true">
                  {% for i in (1..5) %}
                    {% if i <= full_stars %}<span>â˜…</span>{% else %}<span class="q-star-fade">â˜…</span>{% endif %}
                  {% endfor %}
                </div>
                <span class="q-stars-text">{{ s.rating_count | default: 128 }} reviews</span>
              </div>
            {% endif %}

            {% if section.blocks.size > 0 %}
              <div class="q-btns" style="justify-content:
                   {% if text_align_value == 'center' %}center{% elsif text_align_value == 'right' %}flex-end{% else %}flex-start{% endif %};"
                   {% if s.subheading != blank %}aria-describedby="{{ desc_id }}"{% endif %}>
                {% for block in section.blocks %}
                  {% assign b = block.settings %}
                  {% assign btn_size = b.size | default: 'md' %}
                  {% assign pad_y = 12 %}{% assign pad_x = 20 %}
                  {% if btn_size == 'sm' %}{% assign pad_y = 10 %}{% assign pad_x = 16 %}{% endif %}
                  {% if btn_size == 'lg' %}{% assign pad_y = 14 %}{% assign pad_x = 24 %}{% endif %}
                  <a href="{{ b.link | default: '' }}"
                     {% if b.new_tab %}target="_blank" rel="noopener"{% endif %}
                     aria-label="{{ b.aria_label | default: b.label | escape }}"
                     class="q-btn"
                     style="
                       {% if b.button_mode == 'outline' %}
                         color: {{ b.text_color }};
                         background-color: transparent;
                         border-style: solid;
                         border-color: {{ b.border_color }};
                         border-width: {{ b.border_width }}px;
                       {% else %}
                         color: {{ b.text_color }};
                         background-color: {{ b.bg_color }};
                       {% endif %}
                       border-radius: {{ b.radius }}px; padding: {{ pad_y }}px {{ pad_x }}px;">
                    {% if b.icon != blank %}<span aria-hidden="true">{{ b.icon }}</span>{% endif %}
                    <span>{{ b.label }}</span>
                  </a>
                {% endfor %}
              </div>
            {% endif %}

            {% assign has_badges = false %}
            {% for block in section.blocks %}
              {% if block.type == 'badge' %}{% assign has_badges = true %}{% endif %}
            {% endfor %}
            {% if has_badges %}
              <div class="q-badges">
                {% for block in section.blocks %}
                  {% if block.type == 'badge' %}
                    {% assign bb = block.settings %}
                    <span class="q-badge">
                      {% if bb.badge_icon != blank %}<span aria-hidden="true">{{ bb.badge_icon }}</span>{% endif %}
                      <span>{{ bb.badge_text }}</span>
                    </span>
                  {% endif %}
                {% endfor %}
              </div>
            {% endif %}
          </div>
        </div>
      </div>

    </div>
  </div>
</section>

<style>
  #{{ s.anchor_id | default: 'section-' | append: section.id }} *{box-sizing:border-box}

  /* Unbox: full-bleed mode ignores theme container boxing */
  #{{ s.anchor_id | default: 'section-' | append: section.id }}.q-split-content .q-container{
    width:100%;
    margin-left:auto; margin-right:auto;
    padding-left: {{ container_pad_m }}px; padding-right: {{ container_pad_m }}px;
  }
  {% if s.container_mode == 'full' %}
  @media (min-width:768px){
    #{{ s.anchor_id | default: 'section-' | append: section.id }}.q-split-content .q-container{
      padding-left: 0; padding-right: 0;
      max-width: none; width: 100vw;
      margin-left: calc(50% - 50vw); margin-right: calc(50% - 50vw);
    }
  }
  {% endif %}
  @media (min-width:768px){
    #{{ s.anchor_id | default: 'section-' | append: section.id }}.q-split-content .q-container{
      padding-left: {{ container_pad_d }}px; padding-right: {{ container_pad_d }}px;
    }
  }

  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-row{
    display:flex; flex-direction:column; align-items:stretch; gap:0;
    min-height: var(--q-min-h, 50vh);
  }
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-col{
    width:100%; display:flex; flex:1 1 auto; min-height:0;
  }
  @media (min-width:768px){
    #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-row{ flex-direction: {{ dir_css }}; }
    #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-col{ width:50%; }
  }

  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-img{ order: {{ img_order_m }}; position:relative; }
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-content-side{ order: {{ content_order_m }}; }
  @media (min-width:768px){
    #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-img,
    #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-content-side{ order: initial; }
  }

  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-show-m{ display:block; }
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-show-d{ display:none; }
  @media (min-width:768px){
    #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-show-m{ display:none; }
    #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-show-d{ display:block; }
  }

  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-hide-m{ display:none; }
  @media (min-width:768px){
    #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-hide-m{ display:flex; }
  }

  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-img-el{ width:100%; height:100%; object-fit:cover; display:block; }

  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-panel{ position:relative; width:100%; display:flex; align-items:center; }
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-inner{
    margin-left:auto; margin-right:auto; display:flex; flex-direction:column; align-items:
    {% if text_align_value == 'center' %}center{% elsif text_align_value == 'right' %}flex-end{% else %}flex-start{% endif %};
  }

  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-panel--m-bg{ background-image:none; }
  @media (max-width:767.98px){
    #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-panel--m-bg{
      background-image: var(--m-bg, none); background-size:cover; background-position:center; background-repeat:no-repeat;
    }
    #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-panel--m-bg::before{
      content:""; position:absolute; inset:0; pointer-events:none; background-color: var(--m-ov, rgba(0,0,0,0)); opacity: var(--m-ov-o, .35);
    }
    #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-panel--m-bg .q-inner{ position:relative; z-index:1; }
  }

  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-cap{
    position:absolute; right:8px; bottom:8px; font-size:11px; color:#fff; background:rgba(0,0,0,.4); padding:4px 8px; border-radius:6px;
  }

  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-kicker{ margin:0 0 6px 0; font-weight:600; letter-spacing:.04em; text-transform:uppercase; }
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-heading{ margin:0 0 8px 0; font-weight:700; line-height:1.2; }
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-sub{ margin:0 0 16px 0; line-height:1.6; }

  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-stars{ margin:6px 0 12px 0; display:flex; align-items:center; gap:8px; }
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-stars-row{ display:flex; gap:2px; }
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-star-fade{ opacity:.3; }
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-stars-text{ font-size:14px; }

  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-badges{ margin-top:12px; display:flex; flex-wrap:wrap; gap:12px; opacity:.9; font-size:12px; }

  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-btns{ display:flex; flex-wrap:wrap; gap:12px; margin-top:8px; }
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-btn{
    display:inline-flex; align-items:center; gap:8px; font-weight:500; text-decoration:none;
    transition:transform .15s ease, box-shadow .15s ease, background-color .2s ease, color .2s ease, border-color .2s ease;
    will-change: transform;
  }
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-btn:focus-visible{ outline:2px solid rgba(0,0,0,.45); outline-offset:2px; }
  #{{ s.anchor_id | default: 'section-' | append: section.id }} .q-btn:hover{ transform:translateY(-1px); box-shadow:0 4px 14px rgb(0 0 0 / 0.12); }
  /* Badge: quieter chip so it doesn't look like a button */
  .q-split-content .q-badges { margin-top: 10px; gap: 10px; }
  .q-split-content .q-badge{
    background: rgba(0,0,0,.08);
    color: #111;               /* On light backgrounds */
    border: 1px solid rgba(0,0,0,.12);
    padding: 4px 10px;
    border-radius: 999px;
    font-weight: 600;
    cursor: default;
    box-shadow: none;
  }
  .q-split-content .q-badge:hover{ transform:none; box-shadow:none; }

  /* If your content panel is dark, flip the chip automatically */
  .q-split-content .q-panel[style*="background-color: #111"],
  .q-split-content .q-panel[style*="background-color:#111"]{
    --badge-bg: rgba(255,255,255,.16);
    --badge-fg: #fff;
    --badge-br: rgba(255,255,255,.24);
  }
  .q-split-content .q-panel[style*="background-color: #111"] .q-badge,
  .q-split-content .q-panel[style*="background-color:#111"] .q-badge{
    background: var(--badge-bg);
    color: var(--badge-fg);
    border-color: var(--badge-br);
  }

</style>

{% schema %}
{
  "name": "Split Content â€¢ Dynamic",
  "tag": "section",
  "class": "q-split-content",
  "settings": [
    { "type": "header", "content": "Media" },
    { "type": "image_picker", "id": "image", "label": "Desktop image" },
    { "type": "text", "id": "image_alt", "label": "Image alt text (desktop)" },
    { "type": "image_picker", "id": "mobile_image", "label": "Mobile image (optional)" },
    { "type": "text", "id": "mobile_image_alt", "label": "Image alt text (mobile)" },
    { "type": "text", "id": "image_caption", "label": "Image caption (optional)" },
    { "type": "select", "id": "image_position", "label": "Image position (desktop)", "options": [
      { "value": "left", "label": "Left" },
      { "value": "right", "label": "Right" }
    ], "default": "left" },

    { "type": "header", "content": "Mobile presentation" },
    { "type": "select", "id": "mobile_presentation", "label": "Mobile layout", "default": "stack", "options": [
      { "value": "stack", "label": "Stacked (image then copy)" },
      { "value": "bg", "label": "Background image behind copy" }
    ]},
    { "type": "checkbox", "id": "mobile_image_first", "label": "Show image above content on mobile (stacked mode only)", "default": true },
    { "type": "color", "id": "mobile_overlay_color", "label": "Mobile background overlay color (bg mode)", "default": "#000000" },
    { "type": "range", "id": "mobile_overlay_opacity", "label": "Mobile overlay opacity (bg mode)", "min": 0, "max": 100, "step": 5, "default": 35, "unit": "%" },

    { "type": "header", "content": "Layout & spacing" },
    { "type": "select", "id": "min_height", "label": "Minimum height", "default": "min-h-[50vh]", "options": [
      { "value": "min-h-[40vh]", "label": "40% viewport" },
      { "value": "min-h-[50vh]", "label": "50% viewport" },
      { "value": "min-h-[60vh]", "label": "60% viewport" },
      { "value": "min-h-[75vh]", "label": "75% viewport" }
    ]},
    { "type": "select", "id": "container_mode", "label": "Container", "default": "full", "options": [
      { "value": "contained", "label": "Contained (side padding)" },
      { "value": "full", "label": "Full-bleed (edge to edge)" }
    ]},
    { "type": "select", "id": "content_max_w", "label": "Content width (max measure)", "default": "max-w-3xl", "options": [
      { "value": "max-w-2xl", "label": "Narrow" },
      { "value": "max-w-3xl", "label": "Comfort" },
      { "value": "max-w-4xl", "label": "Wide" }
    ]},
    { "type": "text", "id": "content_pad_y", "label": "Content vertical padding (Tailwind utilities)", "default": "py-12 md:py-16" },
    { "type": "text", "id": "content_pad_x", "label": "Content horizontal padding (Tailwind utilities)", "default": "px-6 md:px-10" },

    { "type": "header", "content": "Content" },
    { "type": "color", "id": "content_bg_color", "label": "Content background color (desktop & stacked mobile)", "default": "#ffffff" },
    { "type": "text", "id": "kicker", "label": "Kicker", "default": "Featured" },
    { "type": "color", "id": "kicker_color", "label": "Kicker color", "default": "#111827" },
    { "type": "select", "id": "kicker_size", "label": "Kicker size", "options": [
      { "value": "sm", "label": "Small" }, { "value": "base", "label": "Normal" }, { "value": "lg", "label": "Large" }
    ], "default": "sm" },

    { "type": "text", "id": "heading", "label": "Heading", "default": "Split content heading" },
    { "type": "select", "id": "heading_level", "label": "Heading level", "default": "h2", "options": [
      { "value": "h1", "label": "H1" }, { "value": "h2", "label": "H2" }
    ]},
    { "type": "color", "id": "heading_color", "label": "Heading color", "default": "#111827" },
    { "type": "select", "id": "heading_size", "label": "Heading size", "options": [
      { "value": "2xl", "label": "2XL" }, { "value": "3xl", "label": "3XL" }, { "value": "4xl", "label": "4XL" }
    ], "default": "3xl" },

    { "type": "textarea", "id": "subheading", "label": "Body / subheading", "default": "Use this to add a short paragraph of supporting copy." },
    { "type": "color", "id": "subheading_color", "label": "Body color", "default": "#374151" },
    { "type": "select", "id": "subheading_size", "label": "Body size", "options": [
      { "value": "base", "label": "Base" }, { "value": "lg", "label": "Large" }, { "value": "xl", "label": "XL" }
    ], "default": "base" },

    { "type": "header", "content": "Alignment & visibility" },
    { "type": "select", "id": "text_alignment", "label": "Text alignment", "options": [
      { "value": "left", "label": "Left" }, { "value": "center", "label": "Center" }, { "value": "right", "label": "Right" }
    ], "default": "left" },
    { "type": "text", "id": "anchor_id", "label": "Optional anchor ID", "default": "split-content" },
    { "type": "text", "id": "region_label", "label": "Accessible region label", "default": "Split content" },
    { "type": "checkbox", "id": "hide_on_mobile", "label": "Hide on mobile", "default": false },
    { "type": "checkbox", "id": "hide_on_desktop", "label": "Hide on desktop", "default": false },

    { "type": "header", "content": "Section background" },
    { "type": "text", "id": "section_bg", "label": "Section background (CSS color or Tailwind arbitrary color)", "default": "transparent" }
  ],
  "blocks": [
    {
      "type": "button",
      "name": "Button",
      "settings": [
        { "type": "text", "id": "label", "label": "Label", "default": "Learn more" },
        { "type": "url",  "id": "link",  "label": "Link" },
        { "type": "text", "id": "aria_label", "label": "ARIA label", "default": "Learn more" },
        { "type": "select", "id": "size", "label": "Size", "default": "md", "options": [
          { "value": "sm", "label": "Small" }, { "value": "md", "label": "Medium" }, { "value": "lg", "label": "Large" }
        ]},
        { "type": "checkbox", "id": "new_tab", "label": "Open in new tab", "default": false },
        { "type": "select", "id": "button_mode", "label": "Style", "options": [
          { "value": "solid", "label": "Solid" }, { "value": "outline", "label": "Outline" }
        ], "default": "solid" },
        { "type": "text", "id": "icon", "label": "Icon (SVG/HTML)" },
        { "type": "color", "id": "bg_color", "label": "Background (solid)", "default": "#111111" },
        { "type": "color", "id": "text_color", "label": "Text color", "default": "#ffffff" },
        { "type": "color", "id": "border_color", "label": "Border color (outline)", "default": "#111111" },
        { "type": "range", "id": "border_width", "label": "Border width (outline)", "min": 0, "max": 8, "step": 1, "default": 1 },
        { "type": "range", "id": "radius", "label": "Radius", "min": 0, "max": 50, "step": 2, "default": 6 }
      ]
    },
    {
      "type": "badge",
      "name": "Badge",
      "settings": [
        { "type": "text", "id": "badge_text", "label": "Badge text", "default": "Free shipping over $50" },
        { "type": "text", "id": "badge_icon", "label": "Icon (SVG/HTML)" }
      ]
    }
  ],
  "max_blocks": 8,
  "presets": [
    { "name": "Split Content â€¢ Dynamic", "category": "Content", "blocks": [{ "type": "button" }, { "type": "badge" }] }
  ]
}
{% endschema %}
