{% comment %}
  Quadratum — Multipurpose Hero Banner
  • Slideshow/static hero with image / MP4 / YouTube
  • Split layouts (50/50, 60/40, 40/60) with content in the narrow panel
  • Per-slide content panel background (color/opacity/card/panel)
  • Content blocks + optional product cards scoped by parent_slide
  • NOTE: This version preserves all original settings and JS, but is compatible
    with either slide snippet signature:
      - Original:  slide, content_blocks, index, total, layout, image_side
      - New:       block, section, slide_index
{% endcomment %}

{{ 'multipurpose-hero-banner.css' | asset_url | stylesheet_tag }}

{%- liquid
  assign layout_class = 'q-mpb-layout-' | append: section.settings.layout
  if section.settings.stack_on_mobile
    assign layout_class = layout_class | append: ' q-mpb-stack-mobile'
  endif
  if section.settings.reverse_on_mobile
    assign layout_class = layout_class | append: ' q-mpb-reverse-mobile'
  endif

  assign slide_blocks = section.blocks | where: 'type', 'slide'
  assign __slides_count = slide_blocks.size
-%}

<section
  class="q-multipurpose-banner"
  data-mode="{{ section.settings.mode }}"
  data-autoplay="{{ section.settings.autoplay }}"
  data-autoplay-speed="{{ section.settings.autoplay_speed }}"
  data-transition="{{ section.settings.transition_effect }}"
  data-transition-speed="{{ section.settings.transition_speed }}"
  style="--q-mpb-min-h: {{ section.settings.min_height }}; --q-mpb-trns: {{ section.settings.transition_speed }}ms; margin-top: {{ section.settings.spacing }}; margin-bottom: {{ section.settings.spacing }};"
>
  <div class="q-mpb-container {{ layout_class }}">
    {%- if section.settings.mode == 'slideshow' -%}
      <div
        class="q-mpb-slideshow"
        data-slides-count="{{ __slides_count }}"
        data-nav-arrows="{{ section.settings.show_arrows }}"
        data-nav-dots="{{ section.settings.show_dots }}"
        data-arrow-style="{{ section.settings.arrow_style }}"
      >
        <div class="q-mpb-slides-wrapper" aria-live="polite">
          {%- for slide in slide_blocks -%}
            {%- assign slide_content = section.blocks | where: 'settings.parent_slide', slide.id -%}
            {%- assign eff_layout = slide.settings.layout_override | default: 'inherit' -%}
            {%- if eff_layout == 'inherit' -%}{% assign eff_layout = section.settings.layout %}{%- endif -%}

            {%- comment -%}
              COMPAT RENDER:
              • Original slide snippet signature (kept)
              • New slide snippet signature (also passed so either version works)
            {%- endcomment -%}
            {% render 'multipurpose-banner-slide',
              slide: slide,
              content_blocks: slide_content,
              index: forloop.index,
              total: __slides_count,
              layout: eff_layout,
              image_side: slide.settings.image_side,
              block: slide,
              section: section,
              slide_index: forloop.index
            %}
          {%- endfor -%}
        </div>

        {%- if section.settings.show_arrows and __slides_count > 1 -%}
          <button class="q-mpb-arrow q-mpb-arrow-prev q-mpb-arrow--{{ section.settings.arrow_style }}" aria-label="Previous slide" type="button">
            {%- case section.settings.arrow_style -%}
              {%- when 'minimal' -%}
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><polyline points="15 18 9 12 15 6"></polyline></svg>
              {%- when 'circle' -%}
                <svg width="40" height="40" viewBox="0 0 40 40" fill="none"><circle cx="20" cy="20" r="19" stroke="currentColor" stroke-width="1"></circle><polyline points="22 14 16 20 22 26" stroke="currentColor" stroke-width="2" fill="none"></polyline></svg>
              {%- when 'square' -%}
                <svg width="40" height="40" viewBox="0 0 40 40" fill="none"><rect x="1" y="1" width="38" height="38" stroke="currentColor" stroke-width="1"></rect><polyline points="22 14 16 20 22 26" stroke="currentColor" stroke-width="2" fill="none"></polyline></svg>
              {%- else -%}
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><polyline points="15 18 9 12 15 6"></polyline></svg>
            {%- endcase -%}
          </button>

          <button class="q-mpb-arrow q-mpb-arrow-next q-mpb-arrow--{{ section.settings.arrow_style }}" aria-label="Next slide" type="button">
            {%- case section.settings.arrow_style -%}
              {%- when 'minimal' -%}
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><polyline points="9 18 15 12 9 6"></polyline></svg>
              {%- when 'circle' -%}
                <svg width="40" height="40" viewBox="0 0 40 40" fill="none"><circle cx="20" cy="20" r="19" stroke="currentColor" stroke-width="1"></circle><polyline points="18 14 24 20 18 26" stroke="currentColor" stroke-width="2" fill="none"></polyline></svg>
              {%- when 'square' -%}
                <svg width="40" height="40" viewBox="0 0 40 40" fill="none"><rect x="1" y="1" width="38" height="38" stroke="currentColor" stroke-width="1"></rect><polyline points="18 14 24 20 18 26" stroke="currentColor" stroke-width="2" fill="none"></polyline></svg>
              {%- else -%}
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><polyline points="9 18 15 12 9 6"></polyline></svg>
            {%- endcase -%}
          </button>
        {%- endif -%}

        {%- if section.settings.show_dots and __slides_count > 1 -%}
          <div class="q-mpb-dots" data-dot-style="{{ section.settings.dot_style }}" role="tablist" aria-label="Slide navigation">
            {%- for slide in slide_blocks -%}
              <button
                class="q-mpb-dot{% if forloop.first %} active{% endif %}"
                data-slide="{{ forloop.index }}"
                aria-label="Go to slide {{ forloop.index }}"
                aria-selected="{% if forloop.first %}true{% else %}false{% endif %}"
                role="tab"
                type="button"
              ></button>
            {%- endfor -%}
          </div>
        {%- endif -%}
      </div>
    {%- else -%}
      {%- for slide in slide_blocks limit: 1 -%}
        {%- assign slide_content = section.blocks | where: 'settings.parent_slide', slide.id -%}
        {%- assign eff_layout = slide.settings.layout_override | default: 'inherit' -%}
        {%- if eff_layout == 'inherit' -%}{% assign eff_layout = section.settings.layout %}{%- endif -%}
        {% render 'multipurpose-banner-slide',
          slide: slide,
          content_blocks: slide_content,
          index: 1,
          total: 1,
          layout: eff_layout,
          image_side: slide.settings.image_side,
          block: slide,
          section: section,
          slide_index: 1
        %}
      {%- endfor -%}
    {%- endif -%}
  </div>
</section>

<script>
  class MultipurposeBanner {
    constructor(el) {
      this.el = el;
      this.mode = el.dataset.mode;
      if (this.mode !== "slideshow") return;

      this.wrapper = el.querySelector(".q-mpb-slides-wrapper");
      this.slides  = el.querySelectorAll(".q-mpb-slide");
      this.dots    = el.querySelectorAll(".q-mpb-dot");
      this.currentIndex = 0;

      this.autoplay        = el.dataset.autoplay === "true";
      this.autoplaySpeed   = parseInt(el.dataset.autoplaySpeed) || 5000;
      this.transitionSpeed = parseInt(el.dataset.transitionSpeed) || 500;
      this.transition      = el.dataset.transition || "fade";
      this.autoplayTimer   = null;

      this.init();
    }

    init() {
      if (this.slides.length === 0) return;
      this.slides[0].classList.add("active");
      this.bindEvents();
      if (this.autoplay && this.slides.length > 1) this.startAutoplay();
    }

    bindEvents() {
      this.el.querySelector(".q-mpb-arrow-prev")?.addEventListener("click", () => this.prev());
      this.el.querySelector(".q-mpb-arrow-next")?.addEventListener("click", () => this.next());
      this.dots.forEach((dot, i) => dot.addEventListener("click", () => this.goTo(i)));
    }

    goTo(index) {
      if (index === this.currentIndex) return;
      this.slides[this.currentIndex]?.classList.remove("active");
      this.dots[this.currentIndex]?.classList.remove("active");
      this.dots[this.currentIndex]?.setAttribute("aria-selected", "false");

      this.currentIndex = index;

      this.slides[this.currentIndex]?.classList.add("active");
      this.dots[this.currentIndex]?.classList.add("active");
      this.dots[this.currentIndex]?.setAttribute("aria-selected", "true");

      if (this.autoplay) {
        clearTimeout(this.autoplayTimer);
        this.startAutoplay();
      }
    }

    next() { this.goTo((this.currentIndex + 1) % this.slides.length); }
    prev() { this.goTo((this.currentIndex - 1 + this.slides.length) % this.slides.length); }

    startAutoplay() {
      this.autoplayTimer = setTimeout(() => {
        this.next();
        this.startAutoplay();
      }, this.autoplaySpeed);
    }
  }

  document.addEventListener("DOMContentLoaded", () => {
    document.querySelectorAll(".q-multipurpose-banner").forEach((el) => new MultipurposeBanner(el));
  });
</script>

{% schema %}
{
  "name": "Multipurpose Hero Banner",
  "tag": "section",
  "class": "section-multipurpose-hero",
  "settings": [
    { "type": "header", "content": "Mode" },
    { "type": "select", "id": "mode", "label": "Display", "options": [
      { "value": "static", "label": "Static" },
      { "value": "slideshow", "label": "Slideshow" }
    ], "default": "slideshow" },

    { "type": "header", "content": "Layout" },
    { "type": "select", "id": "layout", "label": "Base layout", "options": [
      { "value": "single", "label": "Single" },
      { "value": "split-50-50", "label": "Split 50/50" },
      { "value": "split-60-40", "label": "Split 60/40" },
      { "value": "split-40-60", "label": "Split 40/60" }
    ], "default": "single" },

    { "type": "text", "id": "min_height", "label": "Min height", "default": "60vh" },
    { "type": "checkbox", "id": "stack_on_mobile", "label": "Stack on mobile", "default": true },
    { "type": "checkbox", "id": "reverse_on_mobile", "label": "Reverse on mobile", "default": false },
    { "type": "text", "id": "spacing", "label": "Top/bottom margin", "default": "0px" },

    { "type": "header", "content": "Slideshow" },
    { "type": "checkbox", "id": "autoplay", "label": "Autoplay", "default": true },
    { "type": "range", "id": "autoplay_speed", "label": "Autoplay speed (ms)", "min": 2000, "max": 9000, "step": 500, "default": 5000 },
    { "type": "select", "id": "transition_effect", "label": "Effect", "options": [
      { "value": "fade", "label": "Fade" },
      { "value": "slide", "label": "Slide" },
      { "value": "zoom", "label": "Zoom" }
    ], "default": "fade" },
    { "type": "range", "id": "transition_speed", "label": "Effect speed (ms)", "min": 200, "max": 1500, "step": 100, "default": 500 },

    { "type": "header", "content": "Navigation" },
    { "type": "checkbox", "id": "show_arrows", "label": "Show arrows", "default": true },
    { "type": "select", "id": "arrow_style", "label": "Arrow style", "options": [
      { "value": "minimal", "label": "Minimal" },
      { "value": "circle", "label": "Circle" },
      { "value": "square", "label": "Square" },
      { "value": "elegant", "label": "Elegant" }
    ], "default": "circle" },
    { "type": "checkbox", "id": "show_dots", "label": "Show dots", "default": true },
    { "type": "select", "id": "dot_style", "label": "Dot style", "options": [
      { "value": "round", "label": "Round" },
      { "value": "line", "label": "Line" },
      { "value": "square", "label": "Square" }
    ], "default": "round" }
  ],

  "blocks": [
    {
      "type": "slide",
      "name": "Slide",
      "settings": [
        { "type": "image_picker", "id": "image", "label": "Desktop image" },
        { "type": "image_picker", "id": "mobile_image", "label": "Mobile image" },
        { "type": "url", "id": "video_url", "label": "MP4 URL" },
        { "type": "url", "id": "youtube_url", "label": "YouTube URL" },
        { "type": "color", "id": "bg_color", "label": "Fallback color", "default": "#000000" },

        { "type": "select", "id": "overlay_type", "label": "Overlay", "options": [
          { "value": "none", "label": "None" },
          { "value": "solid", "label": "Solid" },
          { "value": "gradient", "label": "Gradient" }
        ], "default": "solid" },
        { "type": "color", "id": "overlay_color", "label": "Overlay color", "default": "#000000" },
        { "type": "range", "id": "overlay_opacity", "label": "Overlay opacity", "min": 0, "max": 100, "step": 5, "default": 40, "unit": "%" },

        { "type": "color", "id": "grad_start", "label": "Grad start", "default": "#000000" },
        { "type": "range", "id": "grad_start_opacity", "label": "Start opacity", "min": 0, "max": 100, "step": 5, "default": 60, "unit": "%" },
        { "type": "color", "id": "grad_end", "label": "Grad end", "default": "#000000" },
        { "type": "range", "id": "grad_end_opacity", "label": "End opacity", "min": 0, "max": 100, "step": 5, "default": 0, "unit": "%" },
        { "type": "range", "id": "grad_angle", "label": "Grad angle", "min": 0, "max": 360, "step": 15, "default": 180, "unit": "deg" },

        { "type": "select", "id": "animation", "label": "Content anim.", "options": [
          { "value": "none", "label": "None" },
          { "value": "fade-in", "label": "Fade in" },
          { "value": "slide-up", "label": "Slide up" },
          { "value": "slide-down", "label": "Slide down" },
          { "value": "zoom-in", "label": "Zoom in" },
          { "value": "zoom-out", "label": "Zoom out" }
        ], "default": "fade-in" },

        { "type": "header", "content": "Per-slide layout" },
        { "type": "select", "id": "layout_override", "label": "Layout", "options": [
          { "value": "inherit", "label": "Inherit" },
          { "value": "single", "label": "Single" },
          { "value": "split-50-50", "label": "Split 50/50" },
          { "value": "split-60-40", "label": "Split 60/40" },
          { "value": "split-40-60", "label": "Split 40/60" }
        ], "default": "inherit" },
        { "type": "select", "id": "image_side", "label": "Image side (split)", "options": [
          { "value": "left", "label": "Left" },
          { "value": "right", "label": "Right" }
        ], "default": "left" },

        { "type": "select", "id": "content_bg_style", "label": "Content panel", "options": [
          { "value": "none", "label": "None" },
          { "value": "panel", "label": "Panel" },
          { "value": "card", "label": "Card" }
        ], "default": "none" },
        { "type": "color", "id": "content_bg_color", "label": "Panel color", "default": "#FFFFFF" },
        { "type": "range", "id": "content_bg_opacity", "label": "Panel opacity", "min": 0, "max": 100, "step": 5, "default": 90, "unit": "%" },

        { "type": "header", "content": "Content background (panel)" },
        { "type": "image_picker", "id": "content_bg_image", "label": "Content panel image" },
        { "type": "select", "id": "content_bg_image_mode", "label": "Image mode", "default": "cover",
          "options": [
            { "value": "cover", "label": "Cover" },
            { "value": "contain", "label": "Contain" },
            { "value": "repeat", "label": "Tile (repeat)" }
          ]
        },

        { "type": "header", "content": "Split wedge tint" },
        { "type": "color", "id": "wedge_bg", "label": "Wedge color", "default": "#FFFFFF" },
        { "type": "range", "id": "wedge_bg_opacity", "label": "Wedge opacity", "min": 0, "max": 100, "step": 5, "default": 85, "unit": "%" },

        { "type": "header", "content": "Content layout" },
        { "type": "select", "id": "content_inner_layout", "label": "Content inner layout", "default": "stack",
          "options": [
            { "value": "stack", "label": "Stack (default)" },
            { "value": "columns-3", "label": "3 columns" }
          ]
        },

        { "type": "header", "content": "Product grid (blocks)" },
        { "type": "range", "id": "extra_grid_cols", "label": "Product grid columns", "min": 1, "max": 4, "step": 1, "default": 1 },
        { "type": "range", "id": "extra_grid_gap", "label": "Product grid gap (px)", "min": 8, "max": 32, "step": 2, "default": 16 },

        { "type": "header", "content": "Featured product" },
        { "type": "product", "id": "featured_product", "label": "Product" },
        { "type": "checkbox", "id": "featured_product_show_price", "label": "Show price", "default": true },
        { "type": "text", "id": "featured_product_cta", "label": "CTA label", "default": "View product" },

        { "type": "header", "content": "Content position" },
        { "type": "select", "id": "content_position", "label": "Desktop", "options": [
          { "value": "top-left", "label": "Top Left" },
          { "value": "top-center", "label": "Top Center" },
          { "value": "top-right", "label": "Top Right" },
          { "value": "center-left", "label": "Center Left" },
          { "value": "center-center", "label": "Center Center" },
          { "value": "center-right", "label": "Center Right" },
          { "value": "bottom-left", "label": "Bottom Left" },
          { "value": "bottom-center", "label": "Bottom Center" },
          { "value": "bottom-right", "label": "Bottom Right" }
        ], "default": "center-center" },
        { "type": "select", "id": "content_position_mobile", "label": "Mobile", "options": [
          { "value": "top-left", "label": "Top Left" },
          { "value": "top-center", "label": "Top Center" },
          { "value": "top-right", "label": "Top Right" },
          { "value": "center-left", "label": "Center Left" },
          { "value": "center-center", "label": "Center Center" },
          { "value": "center-right", "label": "Center Right" },
          { "value": "bottom-left", "label": "Bottom Left" },
          { "value": "bottom-center", "label": "Bottom Center" },
          { "value": "bottom-right", "label": "Bottom Right" }
        ], "default": "center-center" },
        { "type": "select", "id": "text_alignment", "label": "Text align", "options": [
          { "value": "left", "label": "Left" },
          { "value": "center", "label": "Center" },
          { "value": "right", "label": "Right" }
        ], "default": "center" },
        { "type": "select", "id": "content_max_width", "label": "Max width", "options": [
          { "value": "narrow", "label": "Narrow" },
          { "value": "medium", "label": "Medium" },
          { "value": "wide", "label": "Wide" }
        ], "default": "medium" },

        { "type": "text", "id": "kicker_text", "label": "Kicker" },
        { "type": "color", "id": "kicker_color", "label": "Kicker color", "default": "#ffffff" },
        { "type": "text", "id": "heading", "label": "Heading" },
        { "type": "select", "id": "heading_level", "label": "Heading level", "options": [
          { "value": "h1", "label": "H1" },
          { "value": "h2", "label": "H2" },
          { "value": "h3", "label": "H3" }
        ], "default": "h2" },
        { "type": "color", "id": "heading_color", "label": "Heading color", "default": "#ffffff" },
        { "type": "textarea", "id": "paragraph", "label": "Paragraph" },
        { "type": "color", "id": "paragraph_color", "label": "Paragraph color", "default": "#ffffff" },

        { "type": "text", "id": "cta_text", "label": "Primary button text" },
        { "type": "url", "id": "cta_link", "label": "Primary button link" },
        { "type": "select", "id": "cta_variant", "label": "Primary style", "options": [
          { "value": "luxury", "label": "Luxury" },
          { "value": "elegant", "label": "Elegant" },
          { "value": "outline", "label": "Outline" }
        ], "default": "luxury" },

        { "type": "text", "id": "cta2_text", "label": "Secondary button text" },
        { "type": "url", "id": "cta2_link", "label": "Secondary button link" },
        { "type": "select", "id": "cta2_variant", "label": "Secondary style", "options": [
          { "value": "luxury", "label": "Luxury" },
          { "value": "elegant", "label": "Elegant" },
          { "value": "outline", "label": "Outline" }
        ], "default": "outline" }
      ]
    },
    {
      "type": "product",
      "name": "Product card",
      "settings": [
        { "type": "text", "id": "parent_slide", "label": "Parent Slide ID" },
        { "type": "product", "id": "product", "label": "Product" },
        { "type": "checkbox", "id": "show_price", "label": "Show price", "default": true },
        { "type": "checkbox", "id": "show_button", "label": "Show button", "default": false },
        { "type": "text", "id": "button_text", "label": "Button text", "default": "View" }
      ]
    },
    {
      "type": "content_column",
      "name": "Content column",
      "settings": [
        { "type": "text", "id": "parent_slide", "label": "Parent Slide ID" },
        { "type": "image_picker", "id": "icon", "label": "Icon (optional)" },
        { "type": "text", "id": "title", "label": "Title" },
        { "type": "textarea", "id": "text", "label": "Text" }
      ]
    }
  ],

  "presets": [
    { "name": "Multipurpose Hero Banner", "blocks": [ { "type": "slide" } ] }
  ]
}
{% endschema %} 
